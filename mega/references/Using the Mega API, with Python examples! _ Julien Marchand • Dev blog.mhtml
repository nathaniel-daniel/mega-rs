From: <Saved by Blink>
Snapshot-Content-Location: https://web.archive.org/web/20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examples/
Subject: =?utf-8?Q?Using=20the=20Mega=20API,=20with=20Python=20examples!=20|=20Jul?=
 =?utf-8?Q?ien=20Marchand=20=E2=80=A2=20Dev=20blog?=
Date: Sun, 23 Mar 2025 18:58:32 -0700
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----"


------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: text/html
Content-ID: <frame-F905DCC05DC65CD07E708151D849A336@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web.archive.org/web/20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examples/

<!DOCTYPE html><!--[if IE 7]>
<html class=3D"ie ie7" lang=3D"en-US">
<![endif]--><!--[if IE 8]>
<html class=3D"ie ie8" lang=3D"en-US">
<![endif]--><!--[if !(IE 7) | !(IE 8)  ]><!--><html lang=3D"en-US" style=3D=
"--wm-toolbar-height: 1px;"><!--<![endif]--><head><meta http-equiv=3D"Conte=
nt-Type" content=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" ty=
pe=3D"text/css" href=3D"cid:css-d63955cb-4deb-4796-bedb-838dd36a6ed1@mhtml.=
blink" />






<link rel=3D"stylesheet" type=3D"text/css" href=3D"https://web-static.archi=
ve.org/_static/css/banner-styles.css?v=3Dp7PEIJWi">
<link rel=3D"stylesheet" type=3D"text/css" href=3D"https://web-static.archi=
ve.org/_static/css/iconochive.css?v=3D3PDvdIFv">
<!-- End Wayback Rewrite JS Include -->


<meta name=3D"viewport" content=3D"width=3Ddevice-width">
<title>Using the Mega API, with Python examples! | Julien Marchand =E2=80=
=A2 Dev blog</title>
<link rel=3D"profile" href=3D"http://gmpg.org/xfn/11">
<link rel=3D"pingback" href=3D"http://julien-marchand.fr/blog/xmlrpc.php">
<!--[if lt IE 9]>
<script src=3D"http://julien-marchand.fr/blog/wp-content/themes/twentytwelv=
e/js/html5.js" type=3D"text/javascript"></script>
<![endif]-->
<link rel=3D"alternate" type=3D"application/rss+xml" title=3D"Julien Marcha=
nd =E2=80=A2 Dev blog =C2=BB Feed" href=3D"https://web.archive.org/web/2023=
0601152626/http://julien-marchand.fr/blog/feed/">
<link rel=3D"alternate" type=3D"application/rss+xml" title=3D"Julien Marcha=
nd =E2=80=A2 Dev blog =C2=BB Comments Feed" href=3D"https://web.archive.org=
/web/20230601152626/http://julien-marchand.fr/blog/comments/feed/">
<link rel=3D"alternate" type=3D"application/rss+xml" title=3D"Julien Marcha=
nd =E2=80=A2 Dev blog =C2=BB Using the Mega API, with Python examples! Comm=
ents Feed" href=3D"https://web.archive.org/web/20230601152626/http://julien=
-marchand.fr/blog/using-mega-api-with-python-examples/feed/">
<link rel=3D"stylesheet" id=3D"wp-syntax-css-css" href=3D"https://web.archi=
ve.org/web/20230601152626cs_/http://julien-marchand.fr/blog/wp-content/plug=
ins/wp-syntax/css/wp-syntax.css?ver=3D1.0" type=3D"text/css" media=3D"all">
<link rel=3D"stylesheet" id=3D"twentytwelve-fonts-css" href=3D"https://web.=
archive.org/web/20230601152626cs_/http://fonts.googleapis.com/css?family=3D=
Open+Sans:400italic,700italic,400,700&amp;subset=3Dlatin,latin-ext" type=3D=
"text/css" media=3D"all">
<link rel=3D"stylesheet" id=3D"twentytwelve-style-css" href=3D"https://web.=
archive.org/web/20230601152626cs_/http://julien-marchand.fr/blog/wp-content=
/themes/twentytwelve/style.css?ver=3D3.5.1" type=3D"text/css" media=3D"all"=
>
<!--[if lt IE 9]>
<link rel=3D'stylesheet' id=3D'twentytwelve-ie-css'  href=3D'http://julien-=
marchand.fr/blog/wp-content/themes/twentytwelve/css/ie.css?ver=3D20121010' =
type=3D'text/css' media=3D'all' />
<![endif]-->

<link rel=3D"EditURI" type=3D"application/rsd+xml" title=3D"RSD" href=3D"ht=
tp://julien-marchand.fr/blog/xmlrpc.php?rsd">
<link rel=3D"wlwmanifest" type=3D"application/wlwmanifest+xml" href=3D"http=
://julien-marchand.fr/blog/wp-includes/wlwmanifest.xml">=20
<link rel=3D"next" title=3D"MegaFS, a FUSE filesystem wrapper for Mega. Par=
t 1: Listing files." href=3D"https://web.archive.org/web/20230601152626/htt=
p://julien-marchand.fr/blog/megafs-a-fuse-filesystem-wrapper-for-mega-part-=
1-listing-files/">
<meta name=3D"generator" content=3D"WordPress 3.5.1">
<link rel=3D"canonical" href=3D"https://web.archive.org/web/20230601152626/=
http://julien-marchand.fr/blog/using-mega-api-with-python-examples/">
<link rel=3D"shortlink" href=3D"https://web.archive.org/web/20230601152626/=
http://julien-marchand.fr/blog/?p=3D5">

<!-- Jetpack Open Graph Tags -->
<meta property=3D"og:type" content=3D"article">
<meta property=3D"og:title" content=3D"Using the Mega API, with Python exam=
ples!">
<meta property=3D"og:url" content=3D"https://web.archive.org/web/2023060115=
2626/http://julien-marchand.fr/blog/using-mega-api-with-python-examples/">
<meta property=3D"og:description" content=3D"Introduction The new Mega has =
the great advantage of being built as a service that can be queried by any =
client through its API. That means that the community can build shiny new s=
tunning software ...">
<meta property=3D"og:site_name" content=3D"Julien Marchand =E2=80=A2 Dev bl=
og">
=09
</head>

<body class=3D"single single-post postid-5 single-format-standard custom-fo=
nt-enabled single-author"><!-- BEGIN WAYBACK TOOLBAR INSERT -->

<div id=3D"wm-ipp-base" lang=3D"en" style=3D"display: block; direction: ltr=
; height: 1px;" toolbar-mode=3D"auto"><template shadowmode=3D"closed"><div =
id=3D"wm-ipp" style=3D"position:fixed;left:0;top:0;right:0;">
<div id=3D"donato" style=3D"position:relative;width:100%;">
  <div id=3D"donato-base">
    <iframe id=3D"donato-if" src=3D"cid:frame-9AF7F52E4426477C94A6B887F7F3E=
63A@mhtml.blink" scrolling=3D"no" frameborder=3D"0" style=3D"width:100%; he=
ight:100%">
    </iframe>
  </div>
</div><div id=3D"wm-ipp-inside" style=3D"display: none;">
  <div id=3D"wm-toolbar" style=3D"position:relative;display:flex;flex-flow:=
row nowrap;justify-content:space-between;">
    <div id=3D"wm-logo" style=3D"/*width:110px;*/padding-top:12px;">
      <a href=3D"https://web.archive.org/web/" title=3D"Wayback Machine hom=
e page"><img src=3D"https://web-static.archive.org/_static/images/toolbar/w=
ayback-toolbar-logo-200.png" alt=3D"Wayback Machine" style=3D"width:100px" =
border=3D"0"></a>
    </div>
    <div class=3D"c" style=3D"display:flex;flex-flow:column nowrap;justify-=
content:space-between;flex:1;">
      <form class=3D"u" style=3D"display:flex;flex-direction:row;flex-wrap:=
nowrap;" target=3D"_top" method=3D"get" action=3D"https://web.archive.org/w=
eb/submit" name=3D"wmtb" id=3D"wmtb"><input type=3D"text" name=3D"url" id=
=3D"wmtbURL" value=3D"http://julien-marchand.fr/blog/using-mega-api-with-py=
thon-examples/" style=3D"flex:1;" autocomplete=3D"off"><input type=3D"submi=
t" value=3D"Go">
      </form>
      <div style=3D"display:flex;flex-flow:row nowrap;align-items:flex-end;=
">
                <div class=3D"s" id=3D"wm-nav-captures" style=3D"flex:1;"><=
a class=3D"t" href=3D"https://web.archive.org/web/*/http://julien-marchand.=
fr/blog/using-mega-api-with-python-examples/" title=3D"See a list of every =
capture for this URL">149 captures</a><div class=3D"r" title=3D"Timespan fo=
r captures of this URL">4 Feb 2013 - 25 Dec 2024</div></div>
        <div class=3D"k">
          <a href=3D"https://web.archive.org/web/20230601152626/http://juli=
en-marchand.fr/blog/using-mega-api-with-python-examples/" id=3D"wm-graph-an=
chor">
            <div id=3D"wm-ipp-sparkline" title=3D"Explore captures for this=
 URL" style=3D"position: relative">
              <canvas id=3D"wm-sparkline-canvas" width=3D"750" height=3D"27=
" border=3D"0"></canvas>
            <div class=3D"yt" style=3D"display: none; width: 25px; height: =
27px;"></div><div class=3D"mt" style=3D"display: none; width: 2px; height: =
27px;"></div></div>
          </a>
        </div>
      </div>
    </div>
    <div class=3D"n">
      <table>
        <tbody>
          <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
          <tr class=3D"m">
            <td class=3D"b" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20230204020856/http://julien-marchand.fr/blog/using-mega-api-with=
-python-examples/" title=3D"04 Feb 2023"><strong>Feb</strong></a></td>
            <td class=3D"c" id=3D"displayMonthEl" title=3D"You are here: 15=
:26:26 Jun 01, 2023">JUN</td>
            <td class=3D"f" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20241225144750/http://julien-marchand.fr/blog/using-mega-api-with=
-python-examples/" title=3D"25 Dec 2024"><strong>Dec</strong></a></td>
          </tr>
          <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
          <tr class=3D"d">
            <td class=3D"b" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20230204020856/http://julien-marchand.fr/blog/using-mega-api-with=
-python-examples/" title=3D"02:08:56 Feb 04, 2023"><img src=3D"https://web-=
static.archive.org/_static/images/toolbar/wm_tb_prv_on.png" alt=3D"Previous=
 capture" width=3D"14" height=3D"16" border=3D"0"></a></td>
            <td class=3D"c" id=3D"displayDayEl" style=3D"width:34px;font-si=
ze:22px;white-space:nowrap;" title=3D"You are here: 15:26:26 Jun 01, 2023">=
01</td>
            <td class=3D"f" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20241225144750/http://julien-marchand.fr/blog/using-mega-api-with=
-python-examples/" title=3D"14:47:50 Dec 25, 2024"><img src=3D"https://web-=
static.archive.org/_static/images/toolbar/wm_tb_nxt_on.png" alt=3D"Next cap=
ture" width=3D"14" height=3D"16" border=3D"0"></a></td>
          </tr>
          <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
          <tr class=3D"y">
            <td class=3D"b" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20210922171746/http://julien-marchand.fr/blog/using-mega-api-with=
-python-examples/" title=3D"22 Sep 2021"><strong>2021</strong></a></td>
            <td class=3D"c" id=3D"displayYearEl" title=3D"You are here: 15:=
26:26 Jun 01, 2023">2023</td>
            <td class=3D"f" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20241225144750/http://julien-marchand.fr/blog/using-mega-api-with=
-python-examples/" title=3D"25 Dec 2024"><strong>2024</strong></a></td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class=3D"r" style=3D"display:flex;flex-flow:column nowrap;align-it=
ems:flex-end;justify-content:space-between;">
      <div id=3D"wm-btns" style=3D"text-align:right;height:23px;">
                <span class=3D"xxs">
          <div id=3D"wm-save-snapshot-success">success</div>
          <div id=3D"wm-save-snapshot-fail">fail</div>
          <a id=3D"wm-save-snapshot-open" href=3D"https://web.archive.org/w=
eb/20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-python=
-examples/#" title=3D"Share via My Web Archive" style=3D"display: none;">
            <span class=3D"iconochive-web"></span>
          </a>
          <a href=3D"https://archive.org/account/login.php" title=3D"Sign I=
n" id=3D"wm-sign-in" style=3D"display: inline-block;">
            <span class=3D"iconochive-person"></span>
          </a>
          <span id=3D"wm-save-snapshot-in-progress" class=3D"iconochive-web=
" style=3D"display: none;"></span>
        </span>
                <a class=3D"xxs" href=3D"http://faq.web.archive.org/" title=
=3D"Get some help using the Wayback Machine" style=3D"top:-6px;"><span clas=
s=3D"iconochive-question" style=3D"color:rgb(87,186,244);font-size:160%;"><=
/span></a>
        <a id=3D"wm-tb-close" href=3D"https://web.archive.org/web/202306011=
52626/http://julien-marchand.fr/blog/using-mega-api-with-python-examples/#c=
lose" style=3D"top:-2px;" title=3D"Close the toolbar"><span class=3D"iconoc=
hive-remove-circle" style=3D"color:#888888;font-size:240%;"></span></a>
      </div>
      <div id=3D"wm-share" class=3D"xxs">
        <a href=3D"https://web.archive.org/web/20230601152626/http://web.ar=
chive.org/screenshot/http://julien-marchand.fr/blog/using-mega-api-with-pyt=
hon-examples/" id=3D"wm-screenshot" title=3D"screenshot" style=3D"visibilit=
y: hidden;">
          <span class=3D"wm-icon-screen-shot"></span>
        </a>
        <a href=3D"https://web.archive.org/web/20230601152626/http://julien=
-marchand.fr/blog/using-mega-api-with-python-examples/#" id=3D"wm-video" ti=
tle=3D"video">
          <span class=3D"iconochive-movies"></span>
        </a>
        <a id=3D"wm-share-facebook" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/#" data-url=3D"https://web.archive.org/web/20230601152626/http://julien=
-marchand.fr/blog/using-mega-api-with-python-examples/" title=3D"Share on F=
acebook" style=3D"margin-right:5px;" target=3D"_blank"><span class=3D"icono=
chive-facebook" style=3D"color:#3b5998;font-size:160%;"></span></a>
        <a id=3D"wm-share-twitter" href=3D"https://web.archive.org/web/2023=
0601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-exampl=
es/#" data-url=3D"https://web.archive.org/web/20230601152626/http://julien-=
marchand.fr/blog/using-mega-api-with-python-examples/" title=3D"Share on Tw=
itter" style=3D"margin-right:5px;" target=3D"_blank"><span class=3D"iconoch=
ive-twitter" style=3D"color:#1dcaff;font-size:160%;"></span></a>
      </div>
      <div style=3D"padding-right:2px;text-align:right;white-space:nowrap;"=
>
        <a id=3D"wm-expand" class=3D"wm-btn wm-closed" href=3D"https://web.=
archive.org/web/20230601152626/http://julien-marchand.fr/blog/using-mega-ap=
i-with-python-examples/#expand"><span id=3D"wm-expand-icon" class=3D"iconoc=
hive-down-solid"></span> <span class=3D"xxs" style=3D"font-size:80%;">About=
 this capture</span></a>
      </div>
    </div>
  </div>
    <div id=3D"wm-capinfo" style=3D"border-top:1px solid #777;display:none;=
 overflow: hidden">
        <div id=3D"wm-capinfo-notice" source=3D"api"></div>
                <div id=3D"wm-capinfo-collected-by">
    <div style=3D"background-color:#666;color:#fff;font-weight:bold;text-al=
ign:center">COLLECTED BY</div>
    <div style=3D"padding:3px;position:relative" id=3D"wm-collected-by-cont=
ent">
      <div style=3D"display:inline-block;vertical-align:top;width:49%;">
			<span class=3D"c-logo" style=3D"background-image:url(https://archive.org=
/services/img/commoncrawl)"></span>
		<div>Collection: <a style=3D"color:#33f;" href=3D"https://archive.org/det=
ails/commoncrawl" target=3D"_new"><span class=3D"wm-title">Common Crawl</sp=
an></a></div>
		<div style=3D"max-height:75px;overflow:hidden;position:relative;">
	  <div style=3D"position:absolute;top:0;left:0;width:100%;height:75px;back=
ground:linear-gradient(to bottom,rgba(255,255,255,0) 0%,rgba(255,255,255,0)=
 90%,rgba(255,255,255,255) 100%);"></div>
	  Web crawl data from Common Crawl.
	</div>
	      </div>
    </div>
    </div>
    <div id=3D"wm-capinfo-timestamps">
    <div style=3D"background-color:#666;color:#fff;font-weight:bold;text-al=
ign:center" title=3D"Timestamps for the elements of this page">TIMESTAMPS</=
div>
    <div>
      <div id=3D"wm-capresources" style=3D"margin:0 5px 5px 5px;max-height:=
250px;overflow-y:scroll !important"></div>
      <div id=3D"wm-capresources-loading" style=3D"text-align:left;margin:0=
 20px 5px 5px;display:none"><img src=3D"https://web-static.archive.org/_sta=
tic/images/loading.gif" alt=3D"loading"></div>
    </div>
    </div>
  </div></div></div><link rel=3D"stylesheet" type=3D"text/css" href=3D"http=
s://web-static.archive.org/_static/css/banner-styles.css?v=3Dp7PEIJWi"><lin=
k rel=3D"stylesheet" type=3D"text/css" href=3D"https://web-static.archive.o=
rg/_static/css/iconochive.css?v=3D3PDvdIFv"><div class=3D"wb-autocomplete-s=
uggestions "></div></template>
</div><div id=3D"wm-ipp-print">The Wayback Machine - https://web.archive.or=
g/web/20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-pyt=
hon-examples/</div>

<!-- END WAYBACK TOOLBAR INSERT -->
=20
<div id=3D"page" class=3D"hfeed site">
	<header id=3D"masthead" class=3D"site-header" role=3D"banner">
		<hgroup>
			<h1 class=3D"site-title"><a href=3D"https://web.archive.org/web/20230601=
152626/http://julien-marchand.fr/blog/" title=3D"Julien Marchand =E2=80=A2 =
Dev blog" rel=3D"home">Julien Marchand =E2=80=A2 Dev blog</a></h1>
			<h2 class=3D"site-description">Yet another dev blog</h2>
		</hgroup>

		<nav id=3D"site-navigation" class=3D"main-navigation" role=3D"navigation"=
>
			<h3 class=3D"menu-toggle">Menu</h3>
			<a class=3D"assistive-text" href=3D"https://web.archive.org/web/20230601=
152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examples/#=
content" title=3D"Skip to content">Skip to content</a>
			<div class=3D"nav-menu"><ul><li><a href=3D"https://web.archive.org/web/2=
0230601152626/http://julien-marchand.fr/blog/" title=3D"Home">Home</a></li>=
<li class=3D"page_item page-item-55"><a href=3D"https://web.archive.org/web=
/20230601152626/http://julien-marchand.fr/blog/contact/">Contact</a></li></=
ul></div>
		</nav><!-- #site-navigation -->

			</header><!-- #masthead -->

	<div id=3D"main" class=3D"wrapper">
	<div id=3D"primary" class=3D"site-content">
		<div id=3D"content" role=3D"main">

		=09
			=09
	<article id=3D"post-5" class=3D"post-5 post type-post status-publish forma=
t-standard hentry category-uncategorized">
				<header class=3D"entry-header">
									<h1 class=3D"entry-title">Using the Mega API, with Python examples=
!</h1>
										<div class=3D"comments-link">
					<a href=3D"https://web.archive.org/web/20230601152626/http://julien-ma=
rchand.fr/blog/using-mega-api-with-python-examples/#comments" title=3D"Comm=
ent on Using the Mega API, with Python examples!">40 Replies</a>				</div><=
!-- .comments-link -->
					</header><!-- .entry-header -->

				<div class=3D"entry-content">
			<h1>Introduction</h1>
<p>The new Mega has the great advantage of being built as a service that ca=
n be queried by any client through its API. That means that the community c=
an build shiny new stunning software on top of Mega=E2=80=99s API and take =
advantage of its huge capabilites.</p>
<p>The Mega=E2=80=99s API is documented <a href=3D"https://web.archive.org/=
web/20230601152626/https://mega.co.nz/#developers">here</a>, but since the =
project is still very young, some information might be missing if you want =
to develop your own client from scratch. Never mind, Mega had the great ide=
a to open the source code of its website, so we have all that we need to st=
art coding!</p>
<p>Let=E2=80=99s talk a little bit about the API itself first. It&nbsp;is b=
ased on a simple HTTP/JSON request-response scheme, which makes it really e=
asy to use. Requests are made by POSTing the JSON payload to this URL:</p>
<blockquote><p>https://g.api.mega.co.nz/cs?id=3D<i>sequence_number</i>[&amp=
;sid=3D<i>session_id]</i></p></blockquote>
<p>Where&nbsp;<i>sequence_number</i>&nbsp;is a session-unique number increm=
ented with each request, and&nbsp;<i>session_id&nbsp;</i>is a token identif=
ying the user session.</p>
<p>The JSON payload is an array of commands:</p>
<blockquote><p>[{'a': 'command1', 'param1': 'value1', 'param2': 'value2'}, =
{'a': 'command2', 'param1': 'value1', 'param2': 'value2'}]</p></blockquote>
<p>We will only send one command per request, but we still need to put it i=
n an array. The response is either a numeric error code or an array of per-=
command return objects (JSON-encoded). Since we only send one command, we w=
ill get back an array containing only one return object. Thus, we can write=
 our first two functions.</p>
<p>We will use Python in all the following examples, because it=E2=80=99s a=
 very nice language that allows to experiment things quickly (and because I=
 wanted to learn Python. These are my first steps, so you may see some ugly=
 and un-pythonic things=E2=80=A6 please share all your suggestions for impr=
ovements in the comments! The good news is that if you=E2=80=99re new to Py=
thon, you will likely understand all the code in this article without any p=
roblem <img src=3D"https://web.archive.org/web/20230601152626im_/http://jul=
ien-marchand.fr/blog/wp-includes/images/smilies/icon_smile.gif" alt=3D":-)"=
 class=3D"wp-smiley"> ). We will use <a href=3D"https://web.archive.org/web=
/20230601152626/https://www.dlitz.net/software/pycrypto/">PyCrypto</a> for =
all the crypto-related parts.</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">seqno <span style=3D"color: #66cc=
66;">=3D</span> <span style=3D"color: #dc143c;">random</span>.<span style=
=3D"color: black;">randint</span><span style=3D"color: black;">(</span><spa=
n style=3D"color: #ff4500;">0</span><span style=3D"color: #66cc66;">,</span=
> <span style=3D"color: #ff4500;">0xFFFFFFFF</span><span style=3D"color: bl=
ack;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> api_req<span st=
yle=3D"color: black;">(</span>req<span style=3D"color: black;">)</span>:
&nbsp; <span style=3D"color: #ff7700;font-weight:bold;">global</span> seqno
&nbsp; url <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color:=
 #483d8b;">'https://g.api.mega.co.nz/cs?id=3D%d%s'</span> % <span style=3D"=
color: black;">(</span>seqno<span style=3D"color: #66cc66;">,</span> <span =
style=3D"color: #483d8b;">'&amp;amp;sid=3D%s'</span> % sid <span style=3D"c=
olor: #ff7700;font-weight:bold;">if</span> sid <span style=3D"color: #ff770=
0;font-weight:bold;">else</span> <span style=3D"color: #483d8b;">''</span><=
span style=3D"color: black;">)</span>
&nbsp; seqno +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"col=
or: #ff4500;">1</span>
&nbsp; <span style=3D"color: #ff7700;font-weight:bold;">return</span> json.=
<span style=3D"color: black;">loads</span><span style=3D"color: black;">(</=
span>post<span style=3D"color: black;">(</span>url<span style=3D"color: #66=
cc66;">,</span> json.<span style=3D"color: black;">dumps</span><span style=
=3D"color: black;">(</span><span style=3D"color: black;">[</span>req<span s=
tyle=3D"color: black;">]</span><span style=3D"color: black;">)</span><span =
style=3D"color: black;">)</span><span style=3D"color: black;">)</span><span=
 style=3D"color: black;">[</span><span style=3D"color: #ff4500;">0</span><s=
pan style=3D"color: black;">]</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> post<span style=
=3D"color: black;">(</span>url<span style=3D"color: #66cc66;">,</span> data=
<span style=3D"color: black;">)</span>:
&nbsp; <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span=
 style=3D"color: #dc143c;">urllib</span>.<span style=3D"color: black;">urlo=
pen</span><span style=3D"color: black;">(</span>url<span style=3D"color: #6=
6cc66;">,</span> data<span style=3D"color: black;">)</span>.<span style=3D"=
color: black;">read</span><span style=3D"color: black;">(</span><span style=
=3D"color: black;">)</span></pre></td></tr></tbody></table></div>

<p>You will notice that I=E2=80=99m not doing any kind of error checking <d=
el>because I=E2=80=99m lazy</del>&nbsp;to keep the examples as simple as po=
ssible. The imports are not included, but you will find them in the complet=
e listing at the end of this article. In the following, we will often need =
to base64 encode/decode data, and to convert byte strings to arrays of 32 b=
it integers and vice versa (for encryption and hash calculation). The utili=
ty functions that deal with this work are also given in the complete listin=
g.</p>
<p>Now, we are ready to start!</p>
<h1>Logging in</h1>
<p>First, we need to log in. This will give us a session token to include i=
n all subsequent requests, and the master key used to encrypt all node-spec=
ific keys. According to the Mega=E2=80=99s developer guide:</p>
<blockquote><p>Each user account uses a symmetric master key to ECB-encrypt=
 all keys of the nodes it keeps in its own trees. This master key is stored=
 on MEGA=E2=80=99s servers, encrypted with a hash derived from the user=E2=
=80=99s login password.</p>
<p>Each login starts a new session. For complete accounts, this involves th=
e server generating a random session token and encrypting it to the user=E2=
=80=99s private key. The user password is considered verified if it success=
fully decrypts the private key, which then successfully decrypts the sessio=
n token.</p></blockquote>
<p>To log in, we need to provide the server our email and a hash derived fr=
om our email and password. The hash is computed as follows (see <a href=3D"=
https://web.archive.org/web/20230601152626/http://g.static.mega.co.nz/crypt=
o.js">stringhash() and prepare_key() in Mega=E2=80=99s crypto.js</a>, and <=
a href=3D"https://web.archive.org/web/20230601152626/http://g.static.mega.c=
o.nz/pages/login.js">postlogin() in Mega=E2=80=99s login.js</a>):</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">password_aes <span style=3D"color=
: #66cc66;">=3D</span> prepare_key<span style=3D"color: black;">(</span>str=
_to_a32<span style=3D"color: black;">(</span>password<span style=3D"color: =
black;">)</span><span style=3D"color: black;">)</span>
uh <span style=3D"color: #66cc66;">=3D</span> stringhash<span style=3D"colo=
r: black;">(</span><span style=3D"color: #dc143c;">email</span>.<span style=
=3D"color: black;">lower</span><span style=3D"color: black;">(</span><span =
style=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span> pa=
ssword_aes<span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> stringhash<span=
 style=3D"color: black;">(</span>s<span style=3D"color: #66cc66;">,</span> =
aeskey<span style=3D"color: black;">)</span>:
  s32 <span style=3D"color: #66cc66;">=3D</span> str_to_a32<span style=3D"c=
olor: black;">(</span>s<span style=3D"color: black;">)</span>
  h32 <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: blac=
k;">[</span><span style=3D"color: #ff4500;">0</span><span style=3D"color: #=
66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span style=3D"co=
lor: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span style=
=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span=
 style=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> i <span style=
=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #0080=
00;">xrange</span><span style=3D"color: black;">(</span><span style=3D"colo=
r: #008000;">len</span><span style=3D"color: black;">(</span>s32<span style=
=3D"color: black;">)</span><span style=3D"color: black;">)</span>:
    h32<span style=3D"color: black;">[</span>i % <span style=3D"color: #ff4=
500;">4</span><span style=3D"color: black;">]</span> ^<span style=3D"color:=
 #66cc66;">=3D</span> s32<span style=3D"color: black;">[</span>i<span style=
=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> _ <span style=
=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #0080=
00;">xrange</span><span style=3D"color: black;">(</span><span style=3D"colo=
r: #ff4500;">0x4000</span><span style=3D"color: black;">)</span>:
    h32 <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_a32<span=
 style=3D"color: black;">(</span>h32<span style=3D"color: #66cc66;">,</span=
> aeskey<span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> a32_to_bas=
e64<span style=3D"color: black;">(</span><span style=3D"color: black;">(</s=
pan>h32<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;=
">0</span><span style=3D"color: black;">]</span><span style=3D"color: #66cc=
66;">,</span> h32<span style=3D"color: black;">[</span><span style=3D"color=
: #ff4500;">2</span><span style=3D"color: black;">]</span><span style=3D"co=
lor: black;">)</span><span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> prepare_key<spa=
n style=3D"color: black;">(</span>a<span style=3D"color: black;">)</span>:
  pkey <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: bla=
ck;">[</span><span style=3D"color: #ff4500;">0x93C467E3</span><span style=
=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0x7DB0C7A4</s=
pan><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;=
">0xD1BE3F81</span><span style=3D"color: #66cc66;">,</span> <span style=3D"=
color: #ff4500;">0x0152CB56</span><span style=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> _ <span style=
=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #0080=
00;">xrange</span><span style=3D"color: black;">(</span><span style=3D"colo=
r: #ff4500;">0x10000</span><span style=3D"color: black;">)</span>:
    <span style=3D"color: #ff7700;font-weight:bold;">for</span> j <span sty=
le=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #00=
8000;">xrange</span><span style=3D"color: black;">(</span><span style=3D"co=
lor: #ff4500;">0</span><span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #008000;">len</span><span style=3D"color: black;">(</span>a<span=
 style=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span> <=
span style=3D"color: #ff4500;">4</span><span style=3D"color: black;">)</spa=
n>:
      key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: =
black;">[</span><span style=3D"color: #ff4500;">0</span><span style=3D"colo=
r: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span style=
=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span=
 style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span=
><span style=3D"color: black;">]</span>
      <span style=3D"color: #ff7700;font-weight:bold;">for</span> i <span s=
tyle=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #=
008000;">xrange</span><span style=3D"color: black;">(</span><span style=3D"=
color: #ff4500;">4</span><span style=3D"color: black;">)</span>:
        <span style=3D"color: #ff7700;font-weight:bold;">if</span> i + j &a=
mp;lt<span style=3D"color: #66cc66;">;</span> <span style=3D"color: #008000=
;">len</span><span style=3D"color: black;">(</span>a<span style=3D"color: b=
lack;">)</span>:
          key<span style=3D"color: black;">[</span>i<span style=3D"color: b=
lack;">]</span> <span style=3D"color: #66cc66;">=3D</span> a<span style=3D"=
color: black;">[</span>i + j<span style=3D"color: black;">]</span>
      pkey <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_a32<s=
pan style=3D"color: black;">(</span>pkey<span style=3D"color: #66cc66;">,</=
span> key<span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> pkey</pre>=
</td></tr></tbody></table></div>

<p>The <em>aes_cbc_encrypt_a32</em> function is given in the complete listi=
ng at the end of this article, as well as the ones dealing with base64 enco=
ding and conversion between strings and integer arrays. Now that we have co=
mputed the hash, we can call the <em>us</em> method of the API:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">res <span style=3D"color: #66cc66=
;">=3D</span> api_req<span style=3D"color: black;">(</span><span style=3D"c=
olor: black;">{</span><span style=3D"color: #483d8b;">'a'</span>: <span sty=
le=3D"color: #483d8b;">'us'</span><span style=3D"color: #66cc66;">,</span> =
<span style=3D"color: #483d8b;">'user'</span>: <span style=3D"color: #dc143=
c;">email</span><span style=3D"color: #66cc66;">,</span> <span style=3D"col=
or: #483d8b;">'uh'</span>: uh<span style=3D"color: black;">}</span><span st=
yle=3D"color: black;">)</span></pre></td></tr></tbody></table></div>

<p>The response contains 3 entries:</p>
<ul>
<li><span style=3D"line-height: 14px;">csid: the session ID, encrypted with=
 our RSA private key ;</span></li>
<li>privk: our RSA private key, encrypted with our master key ;</li>
<li>k: our master key, encrypted with the hash previoulsy computed.</li>
</ul>
<p>All of them are base64-encoded.&nbsp;First, let=E2=80=99s decrypt the ma=
ster key:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">enc_master_key <span style=3D"col=
or: #66cc66;">=3D</span> base64_to_a32<span style=3D"color: black;">(</span=
>res<span style=3D"color: black;">[</span><span style=3D"color: #483d8b;">'=
k'</span><span style=3D"color: black;">]</span><span style=3D"color: black;=
">)</span>
master_key <span style=3D"color: #66cc66;">=3D</span> decrypt_key<span styl=
e=3D"color: black;">(</span>enc_master_key<span style=3D"color: #66cc66;">,=
</span> password_aes<span style=3D"color: black;">)</span></pre></td></tr><=
/tbody></table></div>

<p>Then, we can decrypt our RSA private key:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">enc_rsa_priv_key <span style=3D"c=
olor: #66cc66;">=3D</span> base64_to_a32<span style=3D"color: black;">(</sp=
an>res<span style=3D"color: black;">[</span><span style=3D"color: #483d8b;"=
>'privk'</span><span style=3D"color: black;">]</span><span style=3D"color: =
black;">)</span>
rsa_priv_key <span style=3D"color: #66cc66;">=3D</span> decrypt_key<span st=
yle=3D"color: black;">(</span>enc_rsa_priv_key<span style=3D"color: #66cc66=
;">,</span> master_key<span style=3D"color: black;">)</span></pre></td></tr=
></tbody></table></div>

<p>The decryption is done by simply concatening all the decrypted AES block=
s (see<a href=3D"https://web.archive.org/web/20230601152626/http://g.static=
.mega.co.nz/crypto.js"> decrypt_key() in Mega=E2=80=99s crypto.js</a>). We =
are calling <em>aes_cbc_decrypt_a32()</em> but CBC doesn=E2=80=99t matter h=
ere, since we are encrypting only one block (4 * 32 =3D 128 bits) each time=
.</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;"><span style=3D"color: #ff7700;fon=
t-weight:bold;">def</span> decrypt_key<span style=3D"color: black;">(</span=
>a<span style=3D"color: #66cc66;">,</span> key<span style=3D"color: black;"=
>)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span styl=
e=3D"color: #008000;">sum</span><span style=3D"color: black;">(</span><span=
 style=3D"color: black;">(</span>aes_cbc_decrypt_a32<span style=3D"color: b=
lack;">(</span>a<span style=3D"color: black;">[</span>i:i+<span style=3D"co=
lor: #ff4500;">4</span><span style=3D"color: black;">]</span><span style=3D=
"color: #66cc66;">,</span> key<span style=3D"color: black;">)</span> <span =
style=3D"color: #ff7700;font-weight:bold;">for</span> i <span style=3D"colo=
r: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #008000;">xra=
nge</span><span style=3D"color: black;">(</span><span style=3D"color: #ff45=
00;">0</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color:=
 #008000;">len</span><span style=3D"color: black;">(</span>a<span style=3D"=
color: black;">)</span><span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #ff4500;">4</span><span style=3D"color: black;">)</span><span st=
yle=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span> <spa=
n style=3D"color: black;">(</span><span style=3D"color: black;">)</span><sp=
an style=3D"color: black;">)</span></pre></td></tr></tbody></table></div>

<p>We now have to decompose it into its 4 components:</p>
<ul>
<li>p: The first factor of n, the RSA modulus ;</li>
<li>q: The second factor of n ;</li>
<li>d: The private exponent ;</li>
<li>u: The&nbsp;CRT coefficient, equals to (1/p) mod q.</li>
</ul>
<p>We will only need p, q and d.&nbsp;For more information about RSA, feel =
free to read <a title=3D"RSA" href=3D"https://web.archive.org/web/202306011=
52626/http://en.wikipedia.org/wiki/RSA_(algorithm)#Operation">this article =
on Wikipedia</a>.</p>
<p>All the components are multiple precision integers (MPI), encoded as a s=
tring where the first two bytes are the length of the number in bits, and t=
he following bytes are the number itself, in big endian order (see <a href=
=3D"https://web.archive.org/web/20230601152626/http://g.static.mega.co.nz/r=
sa.js">mpi2b() and b2mpi() in Mega=E2=80=99s rsa.js</a>).</p>
<p>It=E2=80=99s then easy to convert a MPI to a Python long integer:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;"><span style=3D"color: #ff7700;fon=
t-weight:bold;">def</span> mpi2int<span style=3D"color: black;">(</span>s<s=
pan style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span styl=
e=3D"color: #008000;">int</span><span style=3D"color: black;">(</span><span=
 style=3D"color: #dc143c;">binascii</span>.<span style=3D"color: black;">he=
xlify</span><span style=3D"color: black;">(</span>s<span style=3D"color: bl=
ack;">[</span><span style=3D"color: #ff4500;">2</span>:<span style=3D"color=
: black;">]</span><span style=3D"color: black;">)</span><span style=3D"colo=
r: #66cc66;">,</span> <span style=3D"color: #ff4500;">16</span><span style=
=3D"color: black;">)</span></pre></td></tr></tbody></table></div>

<p>We can now go back to our RSA private key decomposition:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">privk <span style=3D"color: #66cc=
66;">=3D</span> a32_to_str<span style=3D"color: black;">(</span>rsa_priv_ke=
y<span style=3D"color: black;">)</span>
rsa_priv_key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"colo=
r: black;">[</span><span style=3D"color: #ff4500;">0</span><span style=3D"c=
olor: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span styl=
e=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><spa=
n style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</spa=
n><span style=3D"color: black;">]</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">for</span> i <span style=
=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #0080=
00;">xrange</span><span style=3D"color: black;">(</span><span style=3D"colo=
r: #ff4500;">4</span><span style=3D"color: black;">)</span>:
  l <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: black;=
">(</span><span style=3D"color: black;">(</span><span style=3D"color: #0080=
00;">ord</span><span style=3D"color: black;">(</span>privk<span style=3D"co=
lor: black;">[</span><span style=3D"color: #ff4500;">0</span><span style=3D=
"color: black;">]</span><span style=3D"color: black;">)</span> * <span styl=
e=3D"color: #ff4500;">256</span> + <span style=3D"color: #008000;">ord</spa=
n><span style=3D"color: black;">(</span>privk<span style=3D"color: black;">=
[</span><span style=3D"color: #ff4500;">1</span><span style=3D"color: black=
;">]</span><span style=3D"color: black;">)</span> + <span style=3D"color: #=
ff4500;">7</span><span style=3D"color: black;">)</span> / <span style=3D"co=
lor: #ff4500;">8</span><span style=3D"color: black;">)</span> + <span style=
=3D"color: #ff4500;">2</span><span style=3D"color: #66cc66;">;</span>
  rsa_priv_key<span style=3D"color: black;">[</span>i<span style=3D"color: =
black;">]</span> <span style=3D"color: #66cc66;">=3D</span> mpi2int<span st=
yle=3D"color: black;">(</span>privk<span style=3D"color: black;">[</span>:l=
<span style=3D"color: black;">]</span><span style=3D"color: black;">)</span=
>
  privk <span style=3D"color: #66cc66;">=3D</span> privk<span style=3D"colo=
r: black;">[</span>l:<span style=3D"color: black;">]</span></pre></td></tr>=
</tbody></table></div>

<p>Finally, we can decrypt the session id:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">enc_sid <span style=3D"color: #66=
cc66;">=3D</span> mpi2int<span style=3D"color: black;">(</span>base64urldec=
ode<span style=3D"color: black;">(</span>res<span style=3D"color: black;">[=
</span><span style=3D"color: #483d8b;">'csid'</span><span style=3D"color: b=
lack;">]</span><span style=3D"color: black;">)</span><span style=3D"color: =
black;">)</span>
decrypter <span style=3D"color: #66cc66;">=3D</span> RSA.<span style=3D"col=
or: black;">construct</span><span style=3D"color: black;">(</span><span sty=
le=3D"color: black;">(</span>rsa_priv_key<span style=3D"color: black;">[</s=
pan><span style=3D"color: #ff4500;">0</span><span style=3D"color: black;">]=
</span> * rsa_priv_key<span style=3D"color: black;">[</span><span style=3D"=
color: #ff4500;">1</span><span style=3D"color: black;">]</span><span style=
=3D"color: #66cc66;">,</span> 0L<span style=3D"color: #66cc66;">,</span> rs=
a_priv_key<span style=3D"color: black;">[</span><span style=3D"color: #ff45=
00;">2</span><span style=3D"color: black;">]</span><span style=3D"color: #6=
6cc66;">,</span> rsa_priv_key<span style=3D"color: black;">[</span><span st=
yle=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span><span=
 style=3D"color: #66cc66;">,</span> rsa_priv_key<span style=3D"color: black=
;">[</span><span style=3D"color: #ff4500;">1</span><span style=3D"color: bl=
ack;">]</span><span style=3D"color: black;">)</span><span style=3D"color: b=
lack;">)</span>
sid <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #483d8=
b;">'%x'</span> % decrypter.<span style=3D"color: black;">key</span>._decry=
pt<span style=3D"color: black;">(</span>enc_sid<span style=3D"color: black;=
">)</span>
sid <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #dc143=
c;">binascii</span>.<span style=3D"color: black;">unhexlify</span><span sty=
le=3D"color: black;">(</span><span style=3D"color: #483d8b;">'0'</span> + s=
id <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=
=3D"color: #008000;">len</span><span style=3D"color: black;">(</span>sid<sp=
an style=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">2</sp=
an> <span style=3D"color: #ff7700;font-weight:bold;">else</span> sid<span s=
tyle=3D"color: black;">)</span>
sid <span style=3D"color: #66cc66;">=3D</span> base64urlencode<span style=
=3D"color: black;">(</span>sid<span style=3D"color: black;">[</span>:<span =
style=3D"color: #ff4500;">43</span><span style=3D"color: black;">]</span><s=
pan style=3D"color: black;">)</span></pre></td></tr></tbody></table></div>

<p>PyCrypto uses a blinding step that involves&nbsp;<em>e</em>, the public =
exponent of the RSA key, during the decryption. Since we don=E2=80=99t know=
&nbsp;<em>e</em>, we simply bypass this step by calling&nbsp;<em>key._decry=
pt()</em>&nbsp;from PyCrypto=E2=80=99s private API.&nbsp;The final sid is t=
he base64 encoding of the first 43 characters of the decrypted csid (<a hre=
f=3D"https://web.archive.org/web/20230601152626/http://g.static.mega.co.nz/=
crypto.js">see api_getsid2() in Mega=E2=80=99s crypto.js</a>).</p>
<p>We now have all that we need to query the API=E2=80=A6 so let=E2=80=99s =
get the list of our files!</p>
<h1>Listing the files</h1>
<p>First, let=E2=80=99s quote the Mega=E2=80=99s developer reference about =
their storage model:</p>
<blockquote><p>MEGA=E2=80=99s filesystem uses the standard hierarchical fil=
e/folder paradigm. Each file and folder node points to a parent folder node=
, with the exception of three parent-less root folder nodes per user accoun=
t =E2=80=93 one for his personal files, one inbox for secure unauthenticate=
d file delivery, and one rubbish bin.</p>
<p>Each general filesystem node (files/folders) has an encrypted attributes=
 object attached to it, which typically contains just the filename, but wil=
l soon be used to transport user-to-user messages to augment MEGA=E2=80=99s=
 secure online collaboration capabilities.</p></blockquote>
<p>We can retrieve the list of all our nodes by calling the API <em>f</em> =
method:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">files <span style=3D"color: #66cc=
66;">=3D</span> api_req<span style=3D"color: black;">(</span><span style=3D=
"color: black;">{</span><span style=3D"color: #483d8b;">'a'</span>: <span s=
tyle=3D"color: #483d8b;">'f'</span><span style=3D"color: #66cc66;">,</span>=
 <span style=3D"color: #483d8b;">'c'</span>: <span style=3D"color: #ff4500;=
">1</span><span style=3D"color: black;">}</span><span style=3D"color: black=
;">)</span></pre></td></tr></tbody></table></div>

<p>The result contains, for each node, the the following informations:</p>
<ul>
<li><span style=3D"line-height: 14px;">h: The ID of the node ;</span></li>
<li>p: The ID of the parent node (directory) ;</li>
<li>u: The owner of the node ;</li>
<li>t: The type of the node:
<ul>
<li>0: File</li>
<li>1: Directory</li>
<li>2: Special node: Root (=E2=80=9CCloud Drive=E2=80=9D)</li>
<li>3: Special node: Inbox</li>
<li>4: Special node: Trash Bin</li>
</ul>
</li>
<li>a: The attributes of the node. Currently only contains its name.</li>
<li>k: The key of the node (used to encrypt its content and its attributes)=
 ;</li>
<li>s: The size of the node ;</li>
<li>ts: The time of the last modification of the node.</li>
</ul>
<p>Let=E2=80=99s talk a little more about the key.&nbsp;As explained by the=
 Mega developer=E2=80=99s guide:</p>
<blockquote><p>All symmetric cryptographic operations are based on AES-128.=
 It operates in cipher block chaining mode for the file and folder attribut=
e blocks and in counter mode for the actual file data. Each file and each f=
older node uses its own randomly generated 128 bit key. File nodes use the =
same key for the attribute block and the file data, plus a 64 bit random co=
unter start value and a 64 bit meta MAC to verify the file=E2=80=99s integr=
ity.</p></blockquote>
<p>So, for directory nodes, the key&nbsp;<em>key</em> is just a 128 bit AES=
 key used to encrypt the attributes of the directory (for now, just its nam=
e). But for file nodes, <em>key</em> is 256 bits long and actually contains=
 3 components. If we see <em>key</em>&nbsp;as a list of 8 32 bit integers, =
then:</p>
<ul>
<li><em>(key[0] XOR key[4], key[1] XOR key[5], key[2] XOR key[6], key[3] XO=
R key[7])</em> is the 128 bit AES key <em>k</em> used to encrypt the file c=
ontents and its attributes ;</li>
<li><em>(key[4], key[5])</em>&nbsp;is the initialization vector for AES-CTR=
, that is, the upper 64 bit&nbsp;<em>n</em>&nbsp;of the counter start value=
 used to encrypt the file contents. The lower 64 bit are starting at 0 and =
incrementing by 1 for each AES block of 16 bytes.</li>
<li><em>(key[6], key[7])</em> is a 64 bit meta-MAC&nbsp;<em>m</em>&nbsp;for=
 file integrity.</li>
</ul>
<p>Now, we have all the keys to list the names of our files! First, let=E2=
=80=99s write a function to decrypt file attributes. They are JSON-encoded =
(e.g. <em>{=E2=80=98n=E2=80=99: =E2=80=98filename.ext=E2=80=99}</em>), pref=
ixed with the string =E2=80=9CMEGA=E2=80=9D (<em>MEGA{=E2=80=98n=E2=80=99: =
=E2=80=98filename.ext=E2=80=99}</em>):</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;"><span style=3D"color: #ff7700;fon=
t-weight:bold;">def</span> dec_attr<span style=3D"color: black;">(</span>at=
tr<span style=3D"color: #66cc66;">,</span> key<span style=3D"color: black;"=
>)</span>:
  attr <span style=3D"color: #66cc66;">=3D</span> aes_cbc_decrypt<span styl=
e=3D"color: black;">(</span>attr<span style=3D"color: #66cc66;">,</span> a3=
2_to_str<span style=3D"color: black;">(</span>key<span style=3D"color: blac=
k;">)</span><span style=3D"color: black;">)</span>.<span style=3D"color: bl=
ack;">rstrip</span><span style=3D"color: black;">(</span><span style=3D"col=
or: #483d8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span>=
'</span><span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> json.<span=
 style=3D"color: black;">loads</span><span style=3D"color: black;">(</span>=
attr<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">4=
</span>:<span style=3D"color: black;">]</span><span style=3D"color: black;"=
>)</span> <span style=3D"color: #ff7700;font-weight:bold;">if</span> attr<s=
pan style=3D"color: black;">[</span>:<span style=3D"color: #ff4500;">6</spa=
n><span style=3D"color: black;">]</span> <span style=3D"color: #66cc66;">=
=3D=3D</span> <span style=3D"color: #483d8b;">'MEGA{"'</span> <span style=
=3D"color: #ff7700;font-weight:bold;">else</span> <span style=3D"color: #00=
8000;">False</span></pre></td></tr></tbody></table></div>

<p>Then, our main loop:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;"><span style=3D"color: #ff7700;fon=
t-weight:bold;">for</span> <span style=3D"color: #008000;">file</span> <spa=
n style=3D"color: #ff7700;font-weight:bold;">in</span> files<span style=3D"=
color: black;">[</span><span style=3D"color: #483d8b;">'f'</span><span styl=
e=3D"color: black;">]</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=3D=
"color: #008000;">file</span><span style=3D"color: black;">[</span><span st=
yle=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</span> <s=
pan style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #ff4500;"=
>0</span> <span style=3D"color: #ff7700;font-weight:bold;">or</span> <span =
style=3D"color: #008000;">file</span><span style=3D"color: black;">[</span>=
<span style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</=
span> <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #=
ff4500;">1</span>:
    key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #0=
08000;">file</span><span style=3D"color: black;">[</span><span style=3D"col=
or: #483d8b;">'k'</span><span style=3D"color: black;">]</span><span style=
=3D"color: black;">[</span><span style=3D"color: #008000;">file</span><span=
 style=3D"color: black;">[</span><span style=3D"color: #483d8b;">'k'</span>=
<span style=3D"color: black;">]</span>.<span style=3D"color: black;">index<=
/span><span style=3D"color: black;">(</span><span style=3D"color: #483d8b;"=
>':'</span><span style=3D"color: black;">)</span> + <span style=3D"color: #=
ff4500;">1</span>:<span style=3D"color: black;">]</span>
    key <span style=3D"color: #66cc66;">=3D</span> decrypt_key<span style=
=3D"color: black;">(</span>base64_to_a32<span style=3D"color: black;">(</sp=
an>key<span style=3D"color: black;">)</span><span style=3D"color: #66cc66;"=
>,</span> master_key<span style=3D"color: black;">)</span>
    <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=
=3D"color: #008000;">file</span><span style=3D"color: black;">[</span><span=
 style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</span>=
 <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #ff450=
0;">0</span>: <span style=3D"color: #808080; font-style: italic;"># File</s=
pan>
      k <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: bl=
ack;">(</span>key<span style=3D"color: black;">[</span><span style=3D"color=
: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ key<span style=
=3D"color: black;">[</span><span style=3D"color: #ff4500;">4</span><span st=
yle=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> key<=
span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</spa=
n><span style=3D"color: black;">]</span> ^ key<span style=3D"color: black;"=
>[</span><span style=3D"color: #ff4500;">5</span><span style=3D"color: blac=
k;">]</span><span style=3D"color: #66cc66;">,</span> key<span style=3D"colo=
r: black;">[</span><span style=3D"color: #ff4500;">2</span><span style=3D"c=
olor: black;">]</span> ^ key<span style=3D"color: black;">[</span><span sty=
le=3D"color: #ff4500;">6</span><span style=3D"color: black;">]</span><span =
style=3D"color: #66cc66;">,</span> key<span style=3D"color: black;">[</span=
><span style=3D"color: #ff4500;">3</span><span style=3D"color: black;">]</s=
pan> ^ key<span style=3D"color: black;">[</span><span style=3D"color: #ff45=
00;">7</span><span style=3D"color: black;">]</span><span style=3D"color: bl=
ack;">)</span>
      iv <span style=3D"color: #66cc66;">=3D</span> key<span style=3D"color=
: black;">[</span><span style=3D"color: #ff4500;">4</span>:<span style=3D"c=
olor: #ff4500;">6</span><span style=3D"color: black;">]</span> + <span styl=
e=3D"color: black;">(</span><span style=3D"color: #ff4500;">0</span><span s=
tyle=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><=
span style=3D"color: black;">)</span>
      meta_mac <span style=3D"color: #66cc66;">=3D</span> key<span style=3D=
"color: black;">[</span><span style=3D"color: #ff4500;">6</span>:<span styl=
e=3D"color: #ff4500;">8</span><span style=3D"color: black;">]</span>
    <span style=3D"color: #ff7700;font-weight:bold;">else</span>: <span sty=
le=3D"color: #808080; font-style: italic;"># Directory</span>
      k <span style=3D"color: #66cc66;">=3D</span> key
    attributes <span style=3D"color: #66cc66;">=3D</span> base64urldecode<s=
pan style=3D"color: black;">(</span><span style=3D"color: #008000;">file</s=
pan><span style=3D"color: black;">[</span><span style=3D"color: #483d8b;">'=
a'</span><span style=3D"color: black;">]</span><span style=3D"color: black;=
">)</span>
    attributes <span style=3D"color: #66cc66;">=3D</span> dec_attr<span sty=
le=3D"color: black;">(</span>attributes<span style=3D"color: #66cc66;">,</s=
pan> k<span style=3D"color: black;">)</span>
    <span style=3D"color: #ff7700;font-weight:bold;">print</span> attribute=
s<span style=3D"color: black;">[</span><span style=3D"color: #483d8b;">'n'<=
/span><span style=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">elif</span> <span style=
=3D"color: #008000;">file</span><span style=3D"color: black;">[</span><span=
 style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</span>=
 <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #ff450=
0;">2</span>:
    root_id <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color=
: #008000;">file</span><span style=3D"color: black;">[</span><span style=3D=
"color: #483d8b;">'h'</span><span style=3D"color: black;">]</span> <span st=
yle=3D"color: #808080; font-style: italic;"># Root ("Cloud Drive")</span>
  <span style=3D"color: #ff7700;font-weight:bold;">elif</span> <span style=
=3D"color: #008000;">file</span><span style=3D"color: black;">[</span><span=
 style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</span>=
 <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #ff450=
0;">3</span>:
    inbox_id <span style=3D"color: #66cc66;">=3D</span> <span style=3D"colo=
r: #008000;">file</span><span style=3D"color: black;">[</span><span style=
=3D"color: #483d8b;">'h'</span><span style=3D"color: black;">]</span> <span=
 style=3D"color: #808080; font-style: italic;"># Inbox</span>
  <span style=3D"color: #ff7700;font-weight:bold;">elif</span> <span style=
=3D"color: #008000;">file</span><span style=3D"color: black;">[</span><span=
 style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</span>=
 <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #ff450=
0;">4</span>:
    trashbin_id <span style=3D"color: #66cc66;">=3D</span> <span style=3D"c=
olor: #008000;">file</span><span style=3D"color: black;">[</span><span styl=
e=3D"color: #483d8b;">'h'</span><span style=3D"color: black;">]</span> <spa=
n style=3D"color: #808080; font-style: italic;"># Trash Bin</span></pre></t=
d></tr></tbody></table></div>

<p>Ta-dah! We are now able to list all our files, and decrypt their names.<=
/p>
<h1>Downloading a file</h1>
<p>To download a file, we first need to get a temporary download URL for th=
is file from the API. This is done with the <em>g</em> method of the API:</=
p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">dl_url <span style=3D"color: #66c=
c66;">=3D</span> api_req<span style=3D"color: black;">(</span><span style=
=3D"color: black;">{</span><span style=3D"color: #483d8b;">'a'</span>: <spa=
n style=3D"color: #483d8b;">'g'</span><span style=3D"color: #66cc66;">,</sp=
an> <span style=3D"color: #483d8b;">'g'</span>: <span style=3D"color: #ff45=
00;">1</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color:=
 #483d8b;">'n'</span>: <span style=3D"color: #008000;">file</span><span sty=
le=3D"color: black;">[</span><span style=3D"color: #483d8b;">'h'</span><spa=
n style=3D"color: black;">]</span><span style=3D"color: black;">}</span><sp=
an style=3D"color: black;">)</span><span style=3D"color: black;">[</span><s=
pan style=3D"color: #483d8b;">'g'</span><span style=3D"color: black;">]</sp=
an></pre></td></tr></tbody></table></div>

<p>A simple GET request on this URL will give us the encrypted file. We can=
 either download the whole file first, and then decrypt it, or decrypt it o=
n the fly during the download. The latter seems to be the best solution if =
we want to check the file=E2=80=99s integrity, since the MAC has to be comp=
uted chunk by chunk:</p>
<blockquote><p>File integrity is verified using chunked CBC-MAC. Chunk size=
s start at 128 KB and increase to 1 MB, which is a reasonable balance betwe=
en space required to store the chunk MACs and the average overhead for inte=
grity-checking partial reads.</p></blockquote>
<p>According to the developer=E2=80=99s guide, chunk boundaries are located=
 at the following positions:</p>
<blockquote><p>0 / 128K / 384K / 768K / 1280K / 1920K / 2688K / 3584K / 460=
8K / =E2=80=A6 (every 1024 KB) / EOF</p></blockquote>
<p>And a chunk MAC is computed as follows:</p>
<blockquote><p>h :=3D (n &lt;&lt; 64) + n // Reminder: n =3D 64 upper bits =
of the counter start value</p>
<p>For each AES block d: h :=3D AES(k,h XOR d)</p></blockquote>
<p>The whole file MAC is obtained by applying the same algorithm to the res=
ulting block MACs, with a start value of 0. The 64 bit meta-MAC is then def=
ined as:</p>
<blockquote><p>((bits 0-31 XOR bits 32-63) &lt;&lt; 64) + (bits 64-95 XOR b=
its 96-127)</p></blockquote>
<p>We now have all that we need to download a file, so=E2=80=A6 let=E2=80=
=99s go! The <em>get_chunks()</em> function is given in the complete listin=
g. It simply gives the list of chunks for a given size, according to the sp=
ecification discussed above. Since it actually returns a dict <em>{chunk_st=
art: chunk_length}</em> of all the chunks, we need to iterate over it in so=
rted order.</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">infile <span style=3D"color: #66c=
c66;">=3D</span> <span style=3D"color: #dc143c;">urllib</span>.<span style=
=3D"color: black;">urlopen</span><span style=3D"color: black;">(</span>dl_u=
rl<span style=3D"color: black;">)</span>
outfile <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #0=
08000;">open</span><span style=3D"color: black;">(</span>attributes<span st=
yle=3D"color: black;">[</span><span style=3D"color: #483d8b;">'n'</span><sp=
an style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span>=
 <span style=3D"color: #483d8b;">'wb'</span><span style=3D"color: black;">)=
</span>
decryptor <span style=3D"color: #66cc66;">=3D</span> AES.<span style=3D"col=
or: #dc143c;">new</span><span style=3D"color: black;">(</span>a32_to_str<sp=
an style=3D"color: black;">(</span>k<span style=3D"color: black;">)</span><=
span style=3D"color: #66cc66;">,</span> AES.<span style=3D"color: black;">M=
ODE_CTR</span><span style=3D"color: #66cc66;">,</span> counter <span style=
=3D"color: #66cc66;">=3D</span> Counter.<span style=3D"color: #dc143c;">new=
</span><span style=3D"color: black;">(</span><span style=3D"color: #ff4500;=
">128</span><span style=3D"color: #66cc66;">,</span> initial_value <span st=
yle=3D"color: #66cc66;">=3D</span> <span style=3D"color: black;">(</span><s=
pan style=3D"color: black;">(</span>iv<span style=3D"color: black;">[</span=
><span style=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</s=
pan> &amp;lt<span style=3D"color: #66cc66;">;</span>&amp;lt<span style=3D"c=
olor: #66cc66;">;</span> <span style=3D"color: #ff4500;">32</span><span sty=
le=3D"color: black;">)</span> + iv<span style=3D"color: black;">[</span><sp=
an style=3D"color: #ff4500;">1</span><span style=3D"color: black;">]</span>=
<span style=3D"color: black;">)</span> &amp;lt<span style=3D"color: #66cc66=
;">;</span>&amp;lt<span style=3D"color: #66cc66;">;</span> <span style=3D"c=
olor: #ff4500;">64</span><span style=3D"color: black;">)</span><span style=
=3D"color: black;">)</span>
&nbsp;
file_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: b=
lack;">[</span><span style=3D"color: #ff4500;">0</span><span style=3D"color=
: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span style=3D=
"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span st=
yle=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><s=
pan style=3D"color: black;">]</span>
<span style=3D"color: #ff7700;font-weight:bold;">for</span> chunk_start<spa=
n style=3D"color: #66cc66;">,</span> chunk_size <span style=3D"color: #ff77=
00;font-weight:bold;">in</span> <span style=3D"color: #008000;">sorted</spa=
n><span style=3D"color: black;">(</span>get_chunks<span style=3D"color: bla=
ck;">(</span><span style=3D"color: #008000;">file</span><span style=3D"colo=
r: black;">[</span><span style=3D"color: #483d8b;">'s'</span><span style=3D=
"color: black;">]</span><span style=3D"color: black;">)</span>.<span style=
=3D"color: black;">items</span><span style=3D"color: black;">(</span><span =
style=3D"color: black;">)</span><span style=3D"color: black;">)</span>:
  <span style=3D"color: #dc143c;">chunk</span> <span style=3D"color: #66cc6=
6;">=3D</span> infile.<span style=3D"color: black;">read</span><span style=
=3D"color: black;">(</span>chunk_size<span style=3D"color: black;">)</span>
  <span style=3D"color: #808080; font-style: italic;"># Decrypt and upload =
the chunk</span>
  <span style=3D"color: #dc143c;">chunk</span> <span style=3D"color: #66cc6=
6;">=3D</span> decryptor.<span style=3D"color: black;">decrypt</span><span =
style=3D"color: black;">(</span><span style=3D"color: #dc143c;">chunk</span=
><span style=3D"color: black;">)</span>
  outfile.<span style=3D"color: black;">write</span><span style=3D"color: b=
lack;">(</span><span style=3D"color: #dc143c;">chunk</span><span style=3D"c=
olor: black;">)</span>
&nbsp;
  <span style=3D"color: #808080; font-style: italic;"># Compute the chunk's=
 MAC</span>
  chunk_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color=
: black;">[</span>iv<span style=3D"color: black;">[</span><span style=3D"co=
lor: #ff4500;">0</span><span style=3D"color: black;">]</span><span style=3D=
"color: #66cc66;">,</span> iv<span style=3D"color: black;">[</span><span st=
yle=3D"color: #ff4500;">1</span><span style=3D"color: black;">]</span><span=
 style=3D"color: #66cc66;">,</span> iv<span style=3D"color: black;">[</span=
><span style=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</s=
pan><span style=3D"color: #66cc66;">,</span> iv<span style=3D"color: black;=
">[</span><span style=3D"color: #ff4500;">1</span><span style=3D"color: bla=
ck;">]</span><span style=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> i <span style=
=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #0080=
00;">xrange</span><span style=3D"color: black;">(</span><span style=3D"colo=
r: #ff4500;">0</span><span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #008000;">len</span><span style=3D"color: black;">(</span><span =
style=3D"color: #dc143c;">chunk</span><span style=3D"color: black;">)</span=
><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">1=
6</span><span style=3D"color: black;">)</span>:
    block <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: =
#dc143c;">chunk</span><span style=3D"color: black;">[</span>i:i+<span style=
=3D"color: #ff4500;">16</span><span style=3D"color: black;">]</span>
    <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=
=3D"color: #008000;">len</span><span style=3D"color: black;">(</span>block<=
span style=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">16<=
/span>:
      block +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"colo=
r: #483d8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span>'=
</span> * <span style=3D"color: black;">(</span><span style=3D"color: #ff45=
00;">16</span> - <span style=3D"color: black;">(</span><span style=3D"color=
: #008000;">len</span><span style=3D"color: black;">(</span>block<span styl=
e=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">16</span><sp=
an style=3D"color: black;">)</span><span style=3D"color: black;">)</span>
    block <span style=3D"color: #66cc66;">=3D</span> str_to_a32<span style=
=3D"color: black;">(</span>block<span style=3D"color: black;">)</span>
    chunk_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"col=
or: black;">[</span>chunk_mac<span style=3D"color: black;">[</span><span st=
yle=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ bl=
ock<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">0<=
/span><span style=3D"color: black;">]</span><span style=3D"color: #66cc66;"=
>,</span> chunk_mac<span style=3D"color: black;">[</span><span style=3D"col=
or: #ff4500;">1</span><span style=3D"color: black;">]</span> ^ block<span s=
tyle=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</span><spa=
n style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> =
chunk_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff450=
0;">2</span><span style=3D"color: black;">]</span> ^ block<span style=3D"co=
lor: black;">[</span><span style=3D"color: #ff4500;">2</span><span style=3D=
"color: black;">]</span><span style=3D"color: #66cc66;">,</span> chunk_mac<=
span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">3</spa=
n><span style=3D"color: black;">]</span> ^ block<span style=3D"color: black=
;">[</span><span style=3D"color: #ff4500;">3</span><span style=3D"color: bl=
ack;">]</span><span style=3D"color: black;">]</span>
    chunk_mac <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_a3=
2<span style=3D"color: black;">(</span>chunk_mac<span style=3D"color: #66cc=
66;">,</span> k<span style=3D"color: black;">)</span>
&nbsp;
  <span style=3D"color: #808080; font-style: italic;"># Update the file's M=
AC</span>
  file_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color:=
 black;">[</span>file_mac<span style=3D"color: black;">[</span><span style=
=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ chunk=
_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">0=
</span><span style=3D"color: black;">]</span><span style=3D"color: #66cc66;=
">,</span> file_mac<span style=3D"color: black;">[</span><span style=3D"col=
or: #ff4500;">1</span><span style=3D"color: black;">]</span> ^ chunk_mac<sp=
an style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</span>=
<span style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</sp=
an> file_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff=
4500;">2</span><span style=3D"color: black;">]</span> ^ chunk_mac<span styl=
e=3D"color: black;">[</span><span style=3D"color: #ff4500;">2</span><span s=
tyle=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> fil=
e_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">=
3</span><span style=3D"color: black;">]</span> ^ chunk_mac<span style=3D"co=
lor: black;">[</span><span style=3D"color: #ff4500;">3</span><span style=3D=
"color: black;">]</span><span style=3D"color: black;">]</span>
  file_mac <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_a32<s=
pan style=3D"color: black;">(</span>file_mac<span style=3D"color: #66cc66;"=
>,</span> k<span style=3D"color: black;">)</span>
&nbsp;
outfile.<span style=3D"color: black;">close</span><span style=3D"color: bla=
ck;">(</span><span style=3D"color: black;">)</span>
infile.<span style=3D"color: black;">close</span><span style=3D"color: blac=
k;">(</span><span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #808080; font-style: italic;"># Integrity check</span=
>
<span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=3D"c=
olor: black;">(</span>file_mac<span style=3D"color: black;">[</span><span s=
tyle=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ f=
ile_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;=
">1</span><span style=3D"color: black;">]</span><span style=3D"color: #66cc=
66;">,</span> file_mac<span style=3D"color: black;">[</span><span style=3D"=
color: #ff4500;">2</span><span style=3D"color: black;">]</span> ^ file_mac<=
span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">3</spa=
n><span style=3D"color: black;">]</span><span style=3D"color: black;">)</sp=
an> <span style=3D"color: #66cc66;">!=3D</span> meta_mac:
  <span style=3D"color: #ff7700;font-weight:bold;">print</span> <span style=
=3D"color: #483d8b;">"MAC mismatch"</span></pre></td></tr></tbody></table><=
/div>

<p>We can now list our files and download them. How about adding new files?=
</p>
<h1>Uploading a file</h1>
<p>Uploading a file requires two steps. First, we need to request a upload =
URL, which is done by calling the <em>u</em> method of the API and requires=
 to specify the file size:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">infile <span style=3D"color: #66c=
c66;">=3D</span> <span style=3D"color: #008000;">open</span><span style=3D"=
color: black;">(</span>filename<span style=3D"color: #66cc66;">,</span> <sp=
an style=3D"color: #483d8b;">'rb'</span><span style=3D"color: black;">)</sp=
an>
size <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #dc14=
3c;">os</span>.<span style=3D"color: black;">path</span>.<span style=3D"col=
or: black;">getsize</span><span style=3D"color: black;">(</span>filename<sp=
an style=3D"color: black;">)</span>
ul_url <span style=3D"color: #66cc66;">=3D</span> api_req<span style=3D"col=
or: black;">(</span><span style=3D"color: black;">{</span><span style=3D"co=
lor: #483d8b;">'a'</span>: <span style=3D"color: #483d8b;">'u'</span><span =
style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d8b;">'s'</spa=
n>: size<span style=3D"color: black;">}</span><span style=3D"color: black;"=
>)</span><span style=3D"color: black;">[</span><span style=3D"color: #483d8=
b;">'p'</span><span style=3D"color: black;">]</span></pre></td></tr></tbody=
></table></div>

<p>We can then generate a random 128 bit AES key for the file, and the uppe=
r 64 bits of the counter start value (initialization vector). With these tw=
o values, we can encrypt the file and start the upload by simply POSTing th=
e file contents to the upload URL!</p>
<p>The upload is done chunk by chunk, in order to compute on the fly the ch=
unk MACs that we will need later to get the meta-MAC. To upload the chunk s=
tarting at offset <em>x</em>, we simply append <em>/x</em> to the upload UR=
L.</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">infile <span style=3D"color: #66c=
c66;">=3D</span> <span style=3D"color: #008000;">open</span><span style=3D"=
color: black;">(</span>filename<span style=3D"color: #66cc66;">,</span> <sp=
an style=3D"color: #483d8b;">'rb'</span><span style=3D"color: black;">)</sp=
an>
size <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #dc14=
3c;">os</span>.<span style=3D"color: black;">path</span>.<span style=3D"col=
or: black;">getsize</span><span style=3D"color: black;">(</span>filename<sp=
an style=3D"color: black;">)</span>
ul_url <span style=3D"color: #66cc66;">=3D</span> api_req<span style=3D"col=
or: black;">(</span><span style=3D"color: black;">{</span><span style=3D"co=
lor: #483d8b;">'a'</span>: <span style=3D"color: #483d8b;">'u'</span><span =
style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d8b;">'s'</spa=
n>: size<span style=3D"color: black;">}</span><span style=3D"color: black;"=
>)</span><span style=3D"color: black;">[</span><span style=3D"color: #483d8=
b;">'p'</span><span style=3D"color: black;">]</span>
&nbsp;
ul_key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: bla=
ck;">[</span><span style=3D"color: #dc143c;">random</span>.<span style=3D"c=
olor: black;">randint</span><span style=3D"color: black;">(</span><span sty=
le=3D"color: #ff4500;">0</span><span style=3D"color: #66cc66;">,</span> <sp=
an style=3D"color: #ff4500;">0xFFFFFFFF</span><span style=3D"color: black;"=
>)</span> <span style=3D"color: #ff7700;font-weight:bold;">for</span> _ <sp=
an style=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"colo=
r: #008000;">xrange</span><span style=3D"color: black;">(</span><span style=
=3D"color: #ff4500;">6</span><span style=3D"color: black;">)</span><span st=
yle=3D"color: black;">]</span>
encryptor <span style=3D"color: #66cc66;">=3D</span> AES.<span style=3D"col=
or: #dc143c;">new</span><span style=3D"color: black;">(</span>a32_to_str<sp=
an style=3D"color: black;">(</span>ul_key<span style=3D"color: black;">[</s=
pan>:<span style=3D"color: #ff4500;">4</span><span style=3D"color: black;">=
]</span><span style=3D"color: black;">)</span><span style=3D"color: #66cc66=
;">,</span> AES.<span style=3D"color: black;">MODE_CTR</span><span style=3D=
"color: #66cc66;">,</span> counter <span style=3D"color: #66cc66;">=3D</spa=
n> Counter.<span style=3D"color: #dc143c;">new</span><span style=3D"color: =
black;">(</span><span style=3D"color: #ff4500;">128</span><span style=3D"co=
lor: #66cc66;">,</span> initial_value <span style=3D"color: #66cc66;">=3D</=
span> <span style=3D"color: black;">(</span><span style=3D"color: black;">(=
</span>ul_key<span style=3D"color: black;">[</span><span style=3D"color: #f=
f4500;">4</span><span style=3D"color: black;">]</span> &amp;lt<span style=
=3D"color: #66cc66;">;</span>&amp;lt<span style=3D"color: #66cc66;">;</span=
> <span style=3D"color: #ff4500;">32</span><span style=3D"color: black;">)<=
/span> + ul_key<span style=3D"color: black;">[</span><span style=3D"color: =
#ff4500;">5</span><span style=3D"color: black;">]</span><span style=3D"colo=
r: black;">)</span> &amp;lt<span style=3D"color: #66cc66;">;</span>&amp;lt<=
span style=3D"color: #66cc66;">;</span> <span style=3D"color: #ff4500;">64<=
/span><span style=3D"color: black;">)</span><span style=3D"color: black;">)=
</span>
&nbsp;
file_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: b=
lack;">[</span><span style=3D"color: #ff4500;">0</span><span style=3D"color=
: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span style=3D=
"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span st=
yle=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><s=
pan style=3D"color: black;">]</span>
<span style=3D"color: #ff7700;font-weight:bold;">for</span> chunk_start<spa=
n style=3D"color: #66cc66;">,</span> chunk_size <span style=3D"color: #ff77=
00;font-weight:bold;">in</span> <span style=3D"color: #008000;">sorted</spa=
n><span style=3D"color: black;">(</span>get_chunks<span style=3D"color: bla=
ck;">(</span>size<span style=3D"color: black;">)</span>.<span style=3D"colo=
r: black;">items</span><span style=3D"color: black;">(</span><span style=3D=
"color: black;">)</span><span style=3D"color: black;">)</span>:
  <span style=3D"color: #dc143c;">chunk</span> <span style=3D"color: #66cc6=
6;">=3D</span> infile.<span style=3D"color: black;">read</span><span style=
=3D"color: black;">(</span>chunk_size<span style=3D"color: black;">)</span>
&nbsp;
  <span style=3D"color: #808080; font-style: italic;"># Compute the chunk's=
 MAC</span>
  chunk_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color=
: black;">[</span>ul_key<span style=3D"color: black;">[</span><span style=
=3D"color: #ff4500;">4</span><span style=3D"color: black;">]</span><span st=
yle=3D"color: #66cc66;">,</span> ul_key<span style=3D"color: black;">[</spa=
n><span style=3D"color: #ff4500;">5</span><span style=3D"color: black;">]</=
span><span style=3D"color: #66cc66;">,</span> ul_key<span style=3D"color: b=
lack;">[</span><span style=3D"color: #ff4500;">4</span><span style=3D"color=
: black;">]</span><span style=3D"color: #66cc66;">,</span> ul_key<span styl=
e=3D"color: black;">[</span><span style=3D"color: #ff4500;">5</span><span s=
tyle=3D"color: black;">]</span><span style=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> i <span style=
=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #0080=
00;">xrange</span><span style=3D"color: black;">(</span><span style=3D"colo=
r: #ff4500;">0</span><span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #008000;">len</span><span style=3D"color: black;">(</span><span =
style=3D"color: #dc143c;">chunk</span><span style=3D"color: black;">)</span=
><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">1=
6</span><span style=3D"color: black;">)</span>:
    block <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: =
#dc143c;">chunk</span><span style=3D"color: black;">[</span>i:i+<span style=
=3D"color: #ff4500;">16</span><span style=3D"color: black;">]</span>
    <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=
=3D"color: #008000;">len</span><span style=3D"color: black;">(</span>block<=
span style=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">16<=
/span>:
      block +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"colo=
r: #483d8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span>'=
</span> * <span style=3D"color: black;">(</span><span style=3D"color: #ff45=
00;">16</span> - <span style=3D"color: #008000;">len</span><span style=3D"c=
olor: black;">(</span>block<span style=3D"color: black;">)</span> % <span s=
tyle=3D"color: #ff4500;">16</span><span style=3D"color: black;">)</span>
    block <span style=3D"color: #66cc66;">=3D</span> str_to_a32<span style=
=3D"color: black;">(</span>block<span style=3D"color: black;">)</span>
    chunk_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"col=
or: black;">[</span>chunk_mac<span style=3D"color: black;">[</span><span st=
yle=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ bl=
ock<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">0<=
/span><span style=3D"color: black;">]</span><span style=3D"color: #66cc66;"=
>,</span> chunk_mac<span style=3D"color: black;">[</span><span style=3D"col=
or: #ff4500;">1</span><span style=3D"color: black;">]</span> ^ block<span s=
tyle=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</span><spa=
n style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> =
chunk_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff450=
0;">2</span><span style=3D"color: black;">]</span> ^ block<span style=3D"co=
lor: black;">[</span><span style=3D"color: #ff4500;">2</span><span style=3D=
"color: black;">]</span><span style=3D"color: #66cc66;">,</span> chunk_mac<=
span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">3</spa=
n><span style=3D"color: black;">]</span> ^ block<span style=3D"color: black=
;">[</span><span style=3D"color: #ff4500;">3</span><span style=3D"color: bl=
ack;">]</span><span style=3D"color: black;">]</span>
    chunk_mac <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_a3=
2<span style=3D"color: black;">(</span>chunk_mac<span style=3D"color: #66cc=
66;">,</span> ul_key<span style=3D"color: black;">[</span>:<span style=3D"c=
olor: #ff4500;">4</span><span style=3D"color: black;">]</span><span style=
=3D"color: black;">)</span>
&nbsp;
  <span style=3D"color: #808080; font-style: italic;"># Update the file's M=
AC</span>
  file_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color:=
 black;">[</span>file_mac<span style=3D"color: black;">[</span><span style=
=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ chunk=
_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">0=
</span><span style=3D"color: black;">]</span><span style=3D"color: #66cc66;=
">,</span> file_mac<span style=3D"color: black;">[</span><span style=3D"col=
or: #ff4500;">1</span><span style=3D"color: black;">]</span> ^ chunk_mac<sp=
an style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</span>=
<span style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</sp=
an> file_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff=
4500;">2</span><span style=3D"color: black;">]</span> ^ chunk_mac<span styl=
e=3D"color: black;">[</span><span style=3D"color: #ff4500;">2</span><span s=
tyle=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> fil=
e_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">=
3</span><span style=3D"color: black;">]</span> ^ chunk_mac<span style=3D"co=
lor: black;">[</span><span style=3D"color: #ff4500;">3</span><span style=3D=
"color: black;">]</span><span style=3D"color: black;">]</span>
  file_mac <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_a32<s=
pan style=3D"color: black;">(</span>file_mac<span style=3D"color: #66cc66;"=
>,</span> ul_key<span style=3D"color: black;">[</span>:<span style=3D"color=
: #ff4500;">4</span><span style=3D"color: black;">]</span><span style=3D"co=
lor: black;">)</span>
&nbsp;
  <span style=3D"color: #808080; font-style: italic;"># Encrypt and upload =
the chunk</span>
  <span style=3D"color: #dc143c;">chunk</span> <span style=3D"color: #66cc6=
6;">=3D</span> encryptor.<span style=3D"color: black;">encrypt</span><span =
style=3D"color: black;">(</span><span style=3D"color: #dc143c;">chunk</span=
><span style=3D"color: black;">)</span>
  outfile <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: =
#dc143c;">urllib</span>.<span style=3D"color: black;">urlopen</span><span s=
tyle=3D"color: black;">(</span>ul_url + <span style=3D"color: #483d8b;">"/"=
</span> + <span style=3D"color: #008000;">str</span><span style=3D"color: b=
lack;">(</span>chunk_start<span style=3D"color: black;">)</span><span style=
=3D"color: #66cc66;">,</span> <span style=3D"color: #dc143c;">chunk</span><=
span style=3D"color: black;">)</span>
  completion_handle <span style=3D"color: #66cc66;">=3D</span> outfile.<spa=
n style=3D"color: black;">read</span><span style=3D"color: black;">(</span>=
<span style=3D"color: black;">)</span>
  outfile.<span style=3D"color: black;">close</span><span style=3D"color: b=
lack;">(</span><span style=3D"color: black;">)</span>
&nbsp;
infile.<span style=3D"color: black;">close</span><span style=3D"color: blac=
k;">(</span><span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #808080; font-style: italic;"># Compute the meta-MAC<=
/span>
meta_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: b=
lack;">(</span>file_mac<span style=3D"color: black;">[</span><span style=3D=
"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ file_mac=
<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</sp=
an><span style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,<=
/span> file_mac<span style=3D"color: black;">[</span><span style=3D"color: =
#ff4500;">2</span><span style=3D"color: black;">]</span> ^ file_mac<span st=
yle=3D"color: black;">[</span><span style=3D"color: #ff4500;">3</span><span=
 style=3D"color: black;">]</span><span style=3D"color: black;">)</span></pr=
e></td></tr></tbody></table></div>

<p>Now that the upload is done, we have to actually create the new node on =
our filesystem. Notice that we saved the response of the POST to the upload=
 URL: it is a completion handle that we will give to the API to create a ne=
w node corresponding to the completed upload.</p>
<p>This is done by calling the <em>p</em> method of the API. It requires:</=
p>
<ul>
<li>The ID of the target node (the parent directory of our new node) ;</li>
<li>The completion handle discussed above ;</li>
<li>The type of the new node (0 for a file) ;</li>
<li>The attributes of the new node (for now, just its name), encrypted with=
 the node key ;</li>
<li>The key of the node (encrypted with the master key), in the format disc=
ussed in the previous section, which means we need to XOR the key randomly =
generated above with the initialization vector and the meta-MAC.</li>
</ul>
<p>So we first need two functions: one to encrypt the attributes (analogous=
 to <em>dec_attr()</em> defined before), and the other to encrypt the key (=
similar to <em>decrypt_key()</em>):</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;"><span style=3D"color: #ff7700;fon=
t-weight:bold;">def</span> enc_attr<span style=3D"color: black;">(</span>at=
tr<span style=3D"color: #66cc66;">,</span> key<span style=3D"color: black;"=
>)</span>:
  attr <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #48=
3d8b;">'MEGA'</span> + json.<span style=3D"color: black;">dumps</span><span=
 style=3D"color: black;">(</span>attr<span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=3D=
"color: #008000;">len</span><span style=3D"color: black;">(</span>attr<span=
 style=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">16</spa=
n>: <span style=3D"color: #808080; font-style: italic;"># Add padding for A=
ES encryption</span>
    attr +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: =
#483d8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span>'</s=
pan> * <span style=3D"color: black;">(</span><span style=3D"color: #ff4500;=
">16</span> - <span style=3D"color: #008000;">len</span><span style=3D"colo=
r: black;">(</span>attr<span style=3D"color: black;">)</span> % <span style=
=3D"color: #ff4500;">16</span><span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> aes_cbc_en=
crypt<span style=3D"color: black;">(</span>attr<span style=3D"color: #66cc6=
6;">,</span> a32_to_str<span style=3D"color: black;">(</span>key<span style=
=3D"color: black;">)</span><span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> encrypt_key<spa=
n style=3D"color: black;">(</span>a<span style=3D"color: #66cc66;">,</span>=
 key<span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span styl=
e=3D"color: #008000;">sum</span><span style=3D"color: black;">(</span><span=
 style=3D"color: black;">(</span>aes_cbc_encrypt_a32<span style=3D"color: b=
lack;">(</span>a<span style=3D"color: black;">[</span>i:i+<span style=3D"co=
lor: #ff4500;">4</span><span style=3D"color: black;">]</span><span style=3D=
"color: #66cc66;">,</span> key<span style=3D"color: black;">)</span> <span =
style=3D"color: #ff7700;font-weight:bold;">for</span> i <span style=3D"colo=
r: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #008000;">xra=
nge</span><span style=3D"color: black;">(</span><span style=3D"color: #ff45=
00;">0</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color:=
 #008000;">len</span><span style=3D"color: black;">(</span>a<span style=3D"=
color: black;">)</span><span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #ff4500;">4</span><span style=3D"color: black;">)</span><span st=
yle=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span> <spa=
n style=3D"color: black;">(</span><span style=3D"color: black;">)</span><sp=
an style=3D"color: black;">)</span></pre></td></tr></tbody></table></div>

<p>We can now create the new node:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;">attributes <span style=3D"color: =
#66cc66;">=3D</span> <span style=3D"color: black;">{</span><span style=3D"c=
olor: #483d8b;">'n'</span>: <span style=3D"color: #dc143c;">os</span>.<span=
 style=3D"color: black;">path</span>.<span style=3D"color: black;">basename=
</span><span style=3D"color: black;">(</span>filename<span style=3D"color: =
black;">)</span><span style=3D"color: black;">}</span>
enc_attributes <span style=3D"color: #66cc66;">=3D</span> enc_attr<span sty=
le=3D"color: black;">(</span>attributes<span style=3D"color: #66cc66;">,</s=
pan> ul_key<span style=3D"color: black;">[</span>:<span style=3D"color: #ff=
4500;">4</span><span style=3D"color: black;">]</span><span style=3D"color: =
black;">)</span>
key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: black;=
">[</span>ul_key<span style=3D"color: black;">[</span><span style=3D"color:=
 #ff4500;">0</span><span style=3D"color: black;">]</span> ^ ul_key<span sty=
le=3D"color: black;">[</span><span style=3D"color: #ff4500;">4</span><span =
style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> ul=
_key<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1=
</span><span style=3D"color: black;">]</span> ^ ul_key<span style=3D"color:=
 black;">[</span><span style=3D"color: #ff4500;">5</span><span style=3D"col=
or: black;">]</span><span style=3D"color: #66cc66;">,</span> ul_key<span st=
yle=3D"color: black;">[</span><span style=3D"color: #ff4500;">2</span><span=
 style=3D"color: black;">]</span> ^ meta_mac<span style=3D"color: black;">[=
</span><span style=3D"color: #ff4500;">0</span><span style=3D"color: black;=
">]</span><span style=3D"color: #66cc66;">,</span> ul_key<span style=3D"col=
or: black;">[</span><span style=3D"color: #ff4500;">3</span><span style=3D"=
color: black;">]</span> ^ meta_mac<span style=3D"color: black;">[</span><sp=
an style=3D"color: #ff4500;">1</span><span style=3D"color: black;">]</span>=
<span style=3D"color: #66cc66;">,</span> ul_key<span style=3D"color: black;=
">[</span><span style=3D"color: #ff4500;">4</span><span style=3D"color: bla=
ck;">]</span><span style=3D"color: #66cc66;">,</span> ul_key<span style=3D"=
color: black;">[</span><span style=3D"color: #ff4500;">5</span><span style=
=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> meta_ma=
c<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">0</s=
pan><span style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,=
</span> meta_mac<span style=3D"color: black;">[</span><span style=3D"color:=
 #ff4500;">1</span><span style=3D"color: black;">]</span><span style=3D"col=
or: black;">]</span>
api_req<span style=3D"color: black;">(</span><span style=3D"color: black;">=
{</span><span style=3D"color: #483d8b;">'a'</span>: <span style=3D"color: #=
483d8b;">'p'</span><span style=3D"color: #66cc66;">,</span> <span style=3D"=
color: #483d8b;">'t'</span>: root_id<span style=3D"color: #66cc66;">,</span=
> <span style=3D"color: #483d8b;">'n'</span>: <span style=3D"color: black;"=
>[</span><span style=3D"color: black;">{</span><span style=3D"color: #483d8=
b;">'h'</span>: completion_handle<span style=3D"color: #66cc66;">,</span> <=
span style=3D"color: #483d8b;">'t'</span>: <span style=3D"color: #ff4500;">=
0</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #483=
d8b;">'a'</span>: base64urlencode<span style=3D"color: black;">(</span>enc_=
attributes<span style=3D"color: black;">)</span><span style=3D"color: #66cc=
66;">,</span> <span style=3D"color: #483d8b;">'k'</span>: a32_to_base64<spa=
n style=3D"color: black;">(</span>encrypt_key<span style=3D"color: black;">=
(</span>key<span style=3D"color: #66cc66;">,</span> master_key<span style=
=3D"color: black;">)</span><span style=3D"color: black;">)</span><span styl=
e=3D"color: black;">}</span><span style=3D"color: black;">]</span><span sty=
le=3D"color: black;">}</span><span style=3D"color: black;">)</span></pre></=
td></tr></tbody></table></div>

<p>The API confirms the creation of the new node by returning all the infor=
mations given in the previous section (=E2=80=9CListing the files=E2=80=9D)=
: ID, parent ID, owner, type, attributes, key, size and last modification t=
ime (creation time in our case). The new file now appears in the list of ou=
r files. We are all done!</p>
<h1>Conclusion</h1>
<p>We have seen that with a few lines of code, we can build our own Mega cl=
ient pretty quickly. I=E2=80=99m currently working on a FUSE filesystem, to=
 mount Mega on Linux, and will share it shortly on GitHub. But in the meant=
ime, here is the complete listing for all the examples of this article. Hop=
e you liked it!</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"python" style=3D"font-family:monospace;"><span style=3D"color: #ff7700;fon=
t-weight:bold;">from</span> Crypto.<span style=3D"color: black;">Cipher</sp=
an> <span style=3D"color: #ff7700;font-weight:bold;">import</span> AES
<span style=3D"color: #ff7700;font-weight:bold;">from</span> Crypto.<span s=
tyle=3D"color: black;">PublicKey</span> <span style=3D"color: #ff7700;font-=
weight:bold;">import</span> RSA
<span style=3D"color: #ff7700;font-weight:bold;">from</span> Crypto.<span s=
tyle=3D"color: black;">Util</span> <span style=3D"color: #ff7700;font-weigh=
t:bold;">import</span> Counter
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">import</span> <span style=
=3D"color: #dc143c;">base64</span>
<span style=3D"color: #ff7700;font-weight:bold;">import</span> <span style=
=3D"color: #dc143c;">binascii</span>
<span style=3D"color: #ff7700;font-weight:bold;">import</span> json
<span style=3D"color: #ff7700;font-weight:bold;">import</span> <span style=
=3D"color: #dc143c;">os</span>
<span style=3D"color: #ff7700;font-weight:bold;">import</span> <span style=
=3D"color: #dc143c;">random</span>
<span style=3D"color: #ff7700;font-weight:bold;">import</span> <span style=
=3D"color: #dc143c;">struct</span>
<span style=3D"color: #ff7700;font-weight:bold;">import</span> <span style=
=3D"color: #dc143c;">sys</span>
<span style=3D"color: #ff7700;font-weight:bold;">import</span> <span style=
=3D"color: #dc143c;">urllib</span>
&nbsp;
sid <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #483d8=
b;">''</span>
seqno <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #dc1=
43c;">random</span>.<span style=3D"color: black;">randint</span><span style=
=3D"color: black;">(</span><span style=3D"color: #ff4500;">0</span><span st=
yle=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0xFFFFFFFF=
</span><span style=3D"color: black;">)</span>
&nbsp;
master_key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color:=
 #483d8b;">''</span>
rsa_priv_key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"colo=
r: #483d8b;">''</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> base64urldecode=
<span style=3D"color: black;">(</span>data<span style=3D"color: black;">)</=
span>:
  data +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #4=
83d8b;">'=3D=3D'</span><span style=3D"color: black;">[</span><span style=3D=
"color: black;">(</span><span style=3D"color: #ff4500;">2</span> - <span st=
yle=3D"color: #008000;">len</span><span style=3D"color: black;">(</span>dat=
a<span style=3D"color: black;">)</span> * <span style=3D"color: #ff4500;">3=
</span><span style=3D"color: black;">)</span> % <span style=3D"color: #ff45=
00;">4</span>:<span style=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> search<span s=
tyle=3D"color: #66cc66;">,</span> replace <span style=3D"color: #ff7700;fon=
t-weight:bold;">in</span> <span style=3D"color: black;">(</span><span style=
=3D"color: black;">(</span><span style=3D"color: #483d8b;">'-'</span><span =
style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d8b;">'+'</spa=
n><span style=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</=
span> <span style=3D"color: black;">(</span><span style=3D"color: #483d8b;"=
>'_'</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #=
483d8b;">'/'</span><span style=3D"color: black;">)</span><span style=3D"col=
or: #66cc66;">,</span> <span style=3D"color: black;">(</span><span style=3D=
"color: #483d8b;">','</span><span style=3D"color: #66cc66;">,</span> <span =
style=3D"color: #483d8b;">''</span><span style=3D"color: black;">)</span><s=
pan style=3D"color: black;">)</span>:
    data <span style=3D"color: #66cc66;">=3D</span> data.<span style=3D"col=
or: black;">replace</span><span style=3D"color: black;">(</span>search<span=
 style=3D"color: #66cc66;">,</span> replace<span style=3D"color: black;">)<=
/span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span styl=
e=3D"color: #dc143c;">base64</span>.<span style=3D"color: black;">b64decode=
</span><span style=3D"color: black;">(</span>data<span style=3D"color: blac=
k;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> base64urlencode=
<span style=3D"color: black;">(</span>data<span style=3D"color: black;">)</=
span>:
  data <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #dc=
143c;">base64</span>.<span style=3D"color: black;">b64encode</span><span st=
yle=3D"color: black;">(</span>data<span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> search<span s=
tyle=3D"color: #66cc66;">,</span> replace <span style=3D"color: #ff7700;fon=
t-weight:bold;">in</span> <span style=3D"color: black;">(</span><span style=
=3D"color: black;">(</span><span style=3D"color: #483d8b;">'+'</span><span =
style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d8b;">'-'</spa=
n><span style=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</=
span> <span style=3D"color: black;">(</span><span style=3D"color: #483d8b;"=
>'/'</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #=
483d8b;">'_'</span><span style=3D"color: black;">)</span><span style=3D"col=
or: #66cc66;">,</span> <span style=3D"color: black;">(</span><span style=3D=
"color: #483d8b;">'=3D'</span><span style=3D"color: #66cc66;">,</span> <spa=
n style=3D"color: #483d8b;">''</span><span style=3D"color: black;">)</span>=
<span style=3D"color: black;">)</span>:
    data <span style=3D"color: #66cc66;">=3D</span> data.<span style=3D"col=
or: black;">replace</span><span style=3D"color: black;">(</span>search<span=
 style=3D"color: #66cc66;">,</span> replace<span style=3D"color: black;">)<=
/span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> data
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> a32_to_str<span=
 style=3D"color: black;">(</span>a<span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span styl=
e=3D"color: #dc143c;">struct</span>.<span style=3D"color: black;">pack</spa=
n><span style=3D"color: black;">(</span><span style=3D"color: #483d8b;">'&a=
mp;gt;%dI'</span> % <span style=3D"color: #008000;">len</span><span style=
=3D"color: black;">(</span>a<span style=3D"color: black;">)</span><span sty=
le=3D"color: #66cc66;">,</span> *a<span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> a32_to_base64<s=
pan style=3D"color: black;">(</span>a<span style=3D"color: black;">)</span>=
:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> base64urle=
ncode<span style=3D"color: black;">(</span>a32_to_str<span style=3D"color: =
black;">(</span>a<span style=3D"color: black;">)</span><span style=3D"color=
: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> str_to_a32<span=
 style=3D"color: black;">(</span>b<span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=3D=
"color: #008000;">len</span><span style=3D"color: black;">(</span>b<span st=
yle=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">4</span>: =
<span style=3D"color: #808080; font-style: italic;"># Add padding, we need =
a string with a length multiple of 4</span>
    b +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #48=
3d8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span>'</span=
> * <span style=3D"color: black;">(</span><span style=3D"color: #ff4500;">4=
</span> - <span style=3D"color: #008000;">len</span><span style=3D"color: b=
lack;">(</span>b<span style=3D"color: black;">)</span> % <span style=3D"col=
or: #ff4500;">4</span><span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span styl=
e=3D"color: #dc143c;">struct</span>.<span style=3D"color: black;">unpack</s=
pan><span style=3D"color: black;">(</span><span style=3D"color: #483d8b;">'=
&amp;gt;%dI'</span> % <span style=3D"color: black;">(</span><span style=3D"=
color: #008000;">len</span><span style=3D"color: black;">(</span>b<span sty=
le=3D"color: black;">)</span> / <span style=3D"color: #ff4500;">4</span><sp=
an style=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span>=
 b<span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> base64_to_a32<s=
pan style=3D"color: black;">(</span>s<span style=3D"color: black;">)</span>=
:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> str_to_a32=
<span style=3D"color: black;">(</span>base64urldecode<span style=3D"color: =
black;">(</span>s<span style=3D"color: black;">)</span><span style=3D"color=
: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> aes_cbc_encrypt=
<span style=3D"color: black;">(</span>data<span style=3D"color: #66cc66;">,=
</span> key<span style=3D"color: black;">)</span>:
  encryptor <span style=3D"color: #66cc66;">=3D</span> AES.<span style=3D"c=
olor: #dc143c;">new</span><span style=3D"color: black;">(</span>key<span st=
yle=3D"color: #66cc66;">,</span> AES.<span style=3D"color: black;">MODE_CBC=
</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d=
8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span>'</span> =
* <span style=3D"color: #ff4500;">16</span><span style=3D"color: black;">)<=
/span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> encryptor.=
<span style=3D"color: black;">encrypt</span><span style=3D"color: black;">(=
</span>data<span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> aes_cbc_decrypt=
<span style=3D"color: black;">(</span>data<span style=3D"color: #66cc66;">,=
</span> key<span style=3D"color: black;">)</span>:
  decryptor <span style=3D"color: #66cc66;">=3D</span> AES.<span style=3D"c=
olor: #dc143c;">new</span><span style=3D"color: black;">(</span>key<span st=
yle=3D"color: #66cc66;">,</span> AES.<span style=3D"color: black;">MODE_CBC=
</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d=
8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span>'</span> =
* <span style=3D"color: #ff4500;">16</span><span style=3D"color: black;">)<=
/span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> decryptor.=
<span style=3D"color: black;">decrypt</span><span style=3D"color: black;">(=
</span>data<span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> aes_cbc_encrypt=
_a32<span style=3D"color: black;">(</span>data<span style=3D"color: #66cc66=
;">,</span> key<span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> str_to_a32=
<span style=3D"color: black;">(</span>aes_cbc_encrypt<span style=3D"color: =
black;">(</span>a32_to_str<span style=3D"color: black;">(</span>data<span s=
tyle=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span> a32=
_to_str<span style=3D"color: black;">(</span>key<span style=3D"color: black=
;">)</span><span style=3D"color: black;">)</span><span style=3D"color: blac=
k;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> aes_cbc_decrypt=
_a32<span style=3D"color: black;">(</span>data<span style=3D"color: #66cc66=
;">,</span> key<span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> str_to_a32=
<span style=3D"color: black;">(</span>aes_cbc_decrypt<span style=3D"color: =
black;">(</span>a32_to_str<span style=3D"color: black;">(</span>data<span s=
tyle=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span> a32=
_to_str<span style=3D"color: black;">(</span>key<span style=3D"color: black=
;">)</span><span style=3D"color: black;">)</span><span style=3D"color: blac=
k;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> stringhash<span=
 style=3D"color: black;">(</span>s<span style=3D"color: #66cc66;">,</span> =
aeskey<span style=3D"color: black;">)</span>:
  s32 <span style=3D"color: #66cc66;">=3D</span> str_to_a32<span style=3D"c=
olor: black;">(</span>s<span style=3D"color: black;">)</span>
  h32 <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: blac=
k;">[</span><span style=3D"color: #ff4500;">0</span><span style=3D"color: #=
66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span style=3D"co=
lor: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span style=
=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span=
 style=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> i <span style=
=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #0080=
00;">xrange</span><span style=3D"color: black;">(</span><span style=3D"colo=
r: #008000;">len</span><span style=3D"color: black;">(</span>s32<span style=
=3D"color: black;">)</span><span style=3D"color: black;">)</span>:
    h32<span style=3D"color: black;">[</span>i % <span style=3D"color: #ff4=
500;">4</span><span style=3D"color: black;">]</span> ^<span style=3D"color:=
 #66cc66;">=3D</span> s32<span style=3D"color: black;">[</span>i<span style=
=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> _ <span style=
=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #0080=
00;">xrange</span><span style=3D"color: black;">(</span><span style=3D"colo=
r: #ff4500;">0x4000</span><span style=3D"color: black;">)</span>:
    h32 <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_a32<span=
 style=3D"color: black;">(</span>h32<span style=3D"color: #66cc66;">,</span=
> aeskey<span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> a32_to_bas=
e64<span style=3D"color: black;">(</span><span style=3D"color: black;">(</s=
pan>h32<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;=
">0</span><span style=3D"color: black;">]</span><span style=3D"color: #66cc=
66;">,</span> h32<span style=3D"color: black;">[</span><span style=3D"color=
: #ff4500;">2</span><span style=3D"color: black;">]</span><span style=3D"co=
lor: black;">)</span><span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> prepare_key<spa=
n style=3D"color: black;">(</span>a<span style=3D"color: black;">)</span>:
  pkey <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: bla=
ck;">[</span><span style=3D"color: #ff4500;">0x93C467E3</span><span style=
=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0x7DB0C7A4</s=
pan><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;=
">0xD1BE3F81</span><span style=3D"color: #66cc66;">,</span> <span style=3D"=
color: #ff4500;">0x0152CB56</span><span style=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> _ <span style=
=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #0080=
00;">xrange</span><span style=3D"color: black;">(</span><span style=3D"colo=
r: #ff4500;">0x10000</span><span style=3D"color: black;">)</span>:
    <span style=3D"color: #ff7700;font-weight:bold;">for</span> j <span sty=
le=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #00=
8000;">xrange</span><span style=3D"color: black;">(</span><span style=3D"co=
lor: #ff4500;">0</span><span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #008000;">len</span><span style=3D"color: black;">(</span>a<span=
 style=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span> <=
span style=3D"color: #ff4500;">4</span><span style=3D"color: black;">)</spa=
n>:
      key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: =
black;">[</span><span style=3D"color: #ff4500;">0</span><span style=3D"colo=
r: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span style=
=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span=
 style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span=
><span style=3D"color: black;">]</span>
      <span style=3D"color: #ff7700;font-weight:bold;">for</span> i <span s=
tyle=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #=
008000;">xrange</span><span style=3D"color: black;">(</span><span style=3D"=
color: #ff4500;">4</span><span style=3D"color: black;">)</span>:
        <span style=3D"color: #ff7700;font-weight:bold;">if</span> i + j &a=
mp;lt<span style=3D"color: #66cc66;">;</span> <span style=3D"color: #008000=
;">len</span><span style=3D"color: black;">(</span>a<span style=3D"color: b=
lack;">)</span>:
          key<span style=3D"color: black;">[</span>i<span style=3D"color: b=
lack;">]</span> <span style=3D"color: #66cc66;">=3D</span> a<span style=3D"=
color: black;">[</span>i + j<span style=3D"color: black;">]</span>
      pkey <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_a32<s=
pan style=3D"color: black;">(</span>pkey<span style=3D"color: #66cc66;">,</=
span> key<span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> pkey
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> encrypt_key<spa=
n style=3D"color: black;">(</span>a<span style=3D"color: #66cc66;">,</span>=
 key<span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span styl=
e=3D"color: #008000;">sum</span><span style=3D"color: black;">(</span><span=
 style=3D"color: black;">(</span>aes_cbc_encrypt_a32<span style=3D"color: b=
lack;">(</span>a<span style=3D"color: black;">[</span>i:i+<span style=3D"co=
lor: #ff4500;">4</span><span style=3D"color: black;">]</span><span style=3D=
"color: #66cc66;">,</span> key<span style=3D"color: black;">)</span> <span =
style=3D"color: #ff7700;font-weight:bold;">for</span> i <span style=3D"colo=
r: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #008000;">xra=
nge</span><span style=3D"color: black;">(</span><span style=3D"color: #ff45=
00;">0</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color:=
 #008000;">len</span><span style=3D"color: black;">(</span>a<span style=3D"=
color: black;">)</span><span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #ff4500;">4</span><span style=3D"color: black;">)</span><span st=
yle=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span> <spa=
n style=3D"color: black;">(</span><span style=3D"color: black;">)</span><sp=
an style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> decrypt_key<spa=
n style=3D"color: black;">(</span>a<span style=3D"color: #66cc66;">,</span>=
 key<span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span styl=
e=3D"color: #008000;">sum</span><span style=3D"color: black;">(</span><span=
 style=3D"color: black;">(</span>aes_cbc_decrypt_a32<span style=3D"color: b=
lack;">(</span>a<span style=3D"color: black;">[</span>i:i+<span style=3D"co=
lor: #ff4500;">4</span><span style=3D"color: black;">]</span><span style=3D=
"color: #66cc66;">,</span> key<span style=3D"color: black;">)</span> <span =
style=3D"color: #ff7700;font-weight:bold;">for</span> i <span style=3D"colo=
r: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #008000;">xra=
nge</span><span style=3D"color: black;">(</span><span style=3D"color: #ff45=
00;">0</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color:=
 #008000;">len</span><span style=3D"color: black;">(</span>a<span style=3D"=
color: black;">)</span><span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #ff4500;">4</span><span style=3D"color: black;">)</span><span st=
yle=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span> <spa=
n style=3D"color: black;">(</span><span style=3D"color: black;">)</span><sp=
an style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> mpi2int<span st=
yle=3D"color: black;">(</span>s<span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span styl=
e=3D"color: #008000;">int</span><span style=3D"color: black;">(</span><span=
 style=3D"color: #dc143c;">binascii</span>.<span style=3D"color: black;">he=
xlify</span><span style=3D"color: black;">(</span>s<span style=3D"color: bl=
ack;">[</span><span style=3D"color: #ff4500;">2</span>:<span style=3D"color=
: black;">]</span><span style=3D"color: black;">)</span><span style=3D"colo=
r: #66cc66;">,</span> <span style=3D"color: #ff4500;">16</span><span style=
=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> api_req<span st=
yle=3D"color: black;">(</span>req<span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">global</span> seqno
  url <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #483=
d8b;">'https://g.api.mega.co.nz/cs?id=3D%d%s'</span> % <span style=3D"color=
: black;">(</span>seqno<span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #483d8b;">'&amp;amp;sid=3D%s'</span> % sid <span style=3D"color:=
 #ff7700;font-weight:bold;">if</span> sid <span style=3D"color: #ff7700;fon=
t-weight:bold;">else</span> <span style=3D"color: #483d8b;">''</span><span =
style=3D"color: black;">)</span>
  seqno +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #=
ff4500;">1</span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> json.<span=
 style=3D"color: black;">loads</span><span style=3D"color: black;">(</span>=
post<span style=3D"color: black;">(</span>url<span style=3D"color: #66cc66;=
">,</span> json.<span style=3D"color: black;">dumps</span><span style=3D"co=
lor: black;">(</span><span style=3D"color: black;">[</span>req<span style=
=3D"color: black;">]</span><span style=3D"color: black;">)</span><span styl=
e=3D"color: black;">)</span><span style=3D"color: black;">)</span><span sty=
le=3D"color: black;">[</span><span style=3D"color: #ff4500;">0</span><span =
style=3D"color: black;">]</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> post<span style=
=3D"color: black;">(</span>url<span style=3D"color: #66cc66;">,</span> data=
<span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> <span styl=
e=3D"color: #dc143c;">urllib</span>.<span style=3D"color: black;">urlopen</=
span><span style=3D"color: black;">(</span>url<span style=3D"color: #66cc66=
;">,</span> data<span style=3D"color: black;">)</span>.<span style=3D"color=
: black;">read</span><span style=3D"color: black;">(</span><span style=3D"c=
olor: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> login<span styl=
e=3D"color: black;">(</span><span style=3D"color: #dc143c;">email</span><sp=
an style=3D"color: #66cc66;">,</span> password<span style=3D"color: black;"=
>)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">global</span> sid<span s=
tyle=3D"color: #66cc66;">,</span> master_key<span style=3D"color: #66cc66;"=
>,</span> rsa_priv_key
  password_aes <span style=3D"color: #66cc66;">=3D</span> prepare_key<span =
style=3D"color: black;">(</span>str_to_a32<span style=3D"color: black;">(</=
span>password<span style=3D"color: black;">)</span><span style=3D"color: bl=
ack;">)</span>
  uh <span style=3D"color: #66cc66;">=3D</span> stringhash<span style=3D"co=
lor: black;">(</span><span style=3D"color: #dc143c;">email</span>.<span sty=
le=3D"color: black;">lower</span><span style=3D"color: black;">(</span><spa=
n style=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</span> =
password_aes<span style=3D"color: black;">)</span>
  res <span style=3D"color: #66cc66;">=3D</span> api_req<span style=3D"colo=
r: black;">(</span><span style=3D"color: black;">{</span><span style=3D"col=
or: #483d8b;">'a'</span>: <span style=3D"color: #483d8b;">'us'</span><span =
style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d8b;">'user'</=
span>: <span style=3D"color: #dc143c;">email</span><span style=3D"color: #6=
6cc66;">,</span> <span style=3D"color: #483d8b;">'uh'</span>: uh<span style=
=3D"color: black;">}</span><span style=3D"color: black;">)</span>
&nbsp;
  enc_master_key <span style=3D"color: #66cc66;">=3D</span> base64_to_a32<s=
pan style=3D"color: black;">(</span>res<span style=3D"color: black;">[</spa=
n><span style=3D"color: #483d8b;">'k'</span><span style=3D"color: black;">]=
</span><span style=3D"color: black;">)</span>
  master_key <span style=3D"color: #66cc66;">=3D</span> decrypt_key<span st=
yle=3D"color: black;">(</span>enc_master_key<span style=3D"color: #66cc66;"=
>,</span> password_aes<span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=3D=
"color: #483d8b;">'tsid'</span> <span style=3D"color: #ff7700;font-weight:b=
old;">in</span> res:
    tsid <span style=3D"color: #66cc66;">=3D</span> base64urldecode<span st=
yle=3D"color: black;">(</span>res<span style=3D"color: black;">[</span><spa=
n style=3D"color: #483d8b;">'tsid'</span><span style=3D"color: black;">]</s=
pan><span style=3D"color: black;">)</span>
    <span style=3D"color: #ff7700;font-weight:bold;">if</span> a32_to_str<s=
pan style=3D"color: black;">(</span>encrypt_key<span style=3D"color: black;=
">(</span>str_to_a32<span style=3D"color: black;">(</span>tsid<span style=
=3D"color: black;">[</span>:<span style=3D"color: #ff4500;">16</span><span =
style=3D"color: black;">]</span><span style=3D"color: black;">)</span><span=
 style=3D"color: #66cc66;">,</span> master_key<span style=3D"color: black;"=
>)</span><span style=3D"color: black;">)</span> <span style=3D"color: #66cc=
66;">=3D=3D</span> tsid<span style=3D"color: black;">[</span>-<span style=
=3D"color: #ff4500;">16</span>:<span style=3D"color: black;">]</span>:
      sid <span style=3D"color: #66cc66;">=3D</span> res<span style=3D"colo=
r: black;">[</span><span style=3D"color: #483d8b;">'tsid'</span><span style=
=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">elif</span> <span style=
=3D"color: #483d8b;">'csid'</span> <span style=3D"color: #ff7700;font-weigh=
t:bold;">in</span> res:
    enc_rsa_priv_key <span style=3D"color: #66cc66;">=3D</span> base64_to_a=
32<span style=3D"color: black;">(</span>res<span style=3D"color: black;">[<=
/span><span style=3D"color: #483d8b;">'privk'</span><span style=3D"color: b=
lack;">]</span><span style=3D"color: black;">)</span>
    rsa_priv_key <span style=3D"color: #66cc66;">=3D</span> decrypt_key<spa=
n style=3D"color: black;">(</span>enc_rsa_priv_key<span style=3D"color: #66=
cc66;">,</span> master_key<span style=3D"color: black;">)</span>
&nbsp;
    privk <span style=3D"color: #66cc66;">=3D</span> a32_to_str<span style=
=3D"color: black;">(</span>rsa_priv_key<span style=3D"color: black;">)</spa=
n>
    rsa_priv_key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"=
color: black;">[</span><span style=3D"color: #ff4500;">0</span><span style=
=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span=
 style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span=
><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0=
</span><span style=3D"color: black;">]</span>
&nbsp;
    <span style=3D"color: #ff7700;font-weight:bold;">for</span> i <span sty=
le=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #00=
8000;">xrange</span><span style=3D"color: black;">(</span><span style=3D"co=
lor: #ff4500;">4</span><span style=3D"color: black;">)</span>:=20
      l <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: bl=
ack;">(</span><span style=3D"color: black;">(</span><span style=3D"color: #=
008000;">ord</span><span style=3D"color: black;">(</span>privk<span style=
=3D"color: black;">[</span><span style=3D"color: #ff4500;">0</span><span st=
yle=3D"color: black;">]</span><span style=3D"color: black;">)</span> * <spa=
n style=3D"color: #ff4500;">256</span> + <span style=3D"color: #008000;">or=
d</span><span style=3D"color: black;">(</span>privk<span style=3D"color: bl=
ack;">[</span><span style=3D"color: #ff4500;">1</span><span style=3D"color:=
 black;">]</span><span style=3D"color: black;">)</span> + <span style=3D"co=
lor: #ff4500;">7</span><span style=3D"color: black;">)</span> / <span style=
=3D"color: #ff4500;">8</span><span style=3D"color: black;">)</span> + <span=
 style=3D"color: #ff4500;">2</span><span style=3D"color: #66cc66;">;</span>
      rsa_priv_key<span style=3D"color: black;">[</span>i<span style=3D"col=
or: black;">]</span> <span style=3D"color: #66cc66;">=3D</span> mpi2int<spa=
n style=3D"color: black;">(</span>privk<span style=3D"color: black;">[</spa=
n>:l<span style=3D"color: black;">]</span><span style=3D"color: black;">)</=
span>
      privk <span style=3D"color: #66cc66;">=3D</span> privk<span style=3D"=
color: black;">[</span>l:<span style=3D"color: black;">]</span>
&nbsp;
    enc_sid <span style=3D"color: #66cc66;">=3D</span> mpi2int<span style=
=3D"color: black;">(</span>base64urldecode<span style=3D"color: black;">(</=
span>res<span style=3D"color: black;">[</span><span style=3D"color: #483d8b=
;">'csid'</span><span style=3D"color: black;">]</span><span style=3D"color:=
 black;">)</span><span style=3D"color: black;">)</span>
    decrypter <span style=3D"color: #66cc66;">=3D</span> RSA.<span style=3D=
"color: black;">construct</span><span style=3D"color: black;">(</span><span=
 style=3D"color: black;">(</span>rsa_priv_key<span style=3D"color: black;">=
[</span><span style=3D"color: #ff4500;">0</span><span style=3D"color: black=
;">]</span> * rsa_priv_key<span style=3D"color: black;">[</span><span style=
=3D"color: #ff4500;">1</span><span style=3D"color: black;">]</span><span st=
yle=3D"color: #66cc66;">,</span> 0L<span style=3D"color: #66cc66;">,</span>=
 rsa_priv_key<span style=3D"color: black;">[</span><span style=3D"color: #f=
f4500;">2</span><span style=3D"color: black;">]</span><span style=3D"color:=
 #66cc66;">,</span> rsa_priv_key<span style=3D"color: black;">[</span><span=
 style=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span><s=
pan style=3D"color: #66cc66;">,</span> rsa_priv_key<span style=3D"color: bl=
ack;">[</span><span style=3D"color: #ff4500;">1</span><span style=3D"color:=
 black;">]</span><span style=3D"color: black;">)</span><span style=3D"color=
: black;">)</span>
    sid <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #4=
83d8b;">'%x'</span> % decrypter.<span style=3D"color: black;">key</span>._d=
ecrypt<span style=3D"color: black;">(</span>enc_sid<span style=3D"color: bl=
ack;">)</span>
    sid <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #d=
c143c;">binascii</span>.<span style=3D"color: black;">unhexlify</span><span=
 style=3D"color: black;">(</span><span style=3D"color: #483d8b;">'0'</span>=
 + sid <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span sty=
le=3D"color: #008000;">len</span><span style=3D"color: black;">(</span>sid<=
span style=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">2</=
span> <span style=3D"color: #ff7700;font-weight:bold;">else</span> sid<span=
 style=3D"color: black;">)</span>
    sid <span style=3D"color: #66cc66;">=3D</span> base64urlencode<span sty=
le=3D"color: black;">(</span>sid<span style=3D"color: black;">[</span>:<spa=
n style=3D"color: #ff4500;">43</span><span style=3D"color: black;">]</span>=
<span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> enc_attr<span s=
tyle=3D"color: black;">(</span>attr<span style=3D"color: #66cc66;">,</span>=
 key<span style=3D"color: black;">)</span>:
  attr <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #48=
3d8b;">'MEGA'</span> + json.<span style=3D"color: black;">dumps</span><span=
 style=3D"color: black;">(</span>attr<span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=3D=
"color: #008000;">len</span><span style=3D"color: black;">(</span>attr<span=
 style=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">16</spa=
n>:
    attr +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: =
#483d8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span>'</s=
pan> * <span style=3D"color: black;">(</span><span style=3D"color: #ff4500;=
">16</span> - <span style=3D"color: #008000;">len</span><span style=3D"colo=
r: black;">(</span>attr<span style=3D"color: black;">)</span> % <span style=
=3D"color: #ff4500;">16</span><span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> aes_cbc_en=
crypt<span style=3D"color: black;">(</span>attr<span style=3D"color: #66cc6=
6;">,</span> a32_to_str<span style=3D"color: black;">(</span>key<span style=
=3D"color: black;">)</span><span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> dec_attr<span s=
tyle=3D"color: black;">(</span>attr<span style=3D"color: #66cc66;">,</span>=
 key<span style=3D"color: black;">)</span>:
  attr <span style=3D"color: #66cc66;">=3D</span> aes_cbc_decrypt<span styl=
e=3D"color: black;">(</span>attr<span style=3D"color: #66cc66;">,</span> a3=
2_to_str<span style=3D"color: black;">(</span>key<span style=3D"color: blac=
k;">)</span><span style=3D"color: black;">)</span>.<span style=3D"color: bl=
ack;">rstrip</span><span style=3D"color: black;">(</span><span style=3D"col=
or: #483d8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span>=
'</span><span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> json.<span=
 style=3D"color: black;">loads</span><span style=3D"color: black;">(</span>=
attr<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">4=
</span>:<span style=3D"color: black;">]</span><span style=3D"color: black;"=
>)</span> <span style=3D"color: #ff7700;font-weight:bold;">if</span> attr<s=
pan style=3D"color: black;">[</span>:<span style=3D"color: #ff4500;">6</spa=
n><span style=3D"color: black;">]</span> <span style=3D"color: #66cc66;">=
=3D=3D</span> <span style=3D"color: #483d8b;">'MEGA{"'</span> <span style=
=3D"color: #ff7700;font-weight:bold;">else</span> <span style=3D"color: #00=
8000;">False</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> get_chunks<span=
 style=3D"color: black;">(</span>size<span style=3D"color: black;">)</span>=
:
  chunks <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: b=
lack;">{</span><span style=3D"color: black;">}</span>
  p <span style=3D"color: #66cc66;">=3D</span> pp <span style=3D"color: #66=
cc66;">=3D</span> <span style=3D"color: #ff4500;">0</span>
  i <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #ff450=
0;">1</span>
&nbsp;
  <span style=3D"color: #ff7700;font-weight:bold;">while</span> i &amp;lt<s=
pan style=3D"color: #66cc66;">;=3D</span> <span style=3D"color: #ff4500;">8=
</span> <span style=3D"color: #ff7700;font-weight:bold;">and</span> p &amp;=
lt<span style=3D"color: #66cc66;">;</span> size - i * <span style=3D"color:=
 #ff4500;">0x20000</span>:
    chunks<span style=3D"color: black;">[</span>p<span style=3D"color: blac=
k;">]</span> <span style=3D"color: #66cc66;">=3D</span> i * <span style=3D"=
color: #ff4500;">0x20000</span><span style=3D"color: #66cc66;">;</span>
    pp <span style=3D"color: #66cc66;">=3D</span> p
    p +<span style=3D"color: #66cc66;">=3D</span> chunks<span style=3D"colo=
r: black;">[</span>p<span style=3D"color: black;">]</span>
    i +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #ff=
4500;">1</span>
&nbsp;
  <span style=3D"color: #ff7700;font-weight:bold;">while</span> p &amp;lt<s=
pan style=3D"color: #66cc66;">;</span> size:
    chunks<span style=3D"color: black;">[</span>p<span style=3D"color: blac=
k;">]</span> <span style=3D"color: #66cc66;">=3D</span> <span style=3D"colo=
r: #ff4500;">0x100000</span><span style=3D"color: #66cc66;">;</span>
    pp <span style=3D"color: #66cc66;">=3D</span> p
    p +<span style=3D"color: #66cc66;">=3D</span> chunks<span style=3D"colo=
r: black;">[</span>p<span style=3D"color: black;">]</span>
&nbsp;
  chunks<span style=3D"color: black;">[</span>pp<span style=3D"color: black=
;">]</span> <span style=3D"color: #66cc66;">=3D</span> size - pp
  <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=3D=
"color: #ff7700;font-weight:bold;">not</span> chunks<span style=3D"color: b=
lack;">[</span>pp<span style=3D"color: black;">]</span>:
    <span style=3D"color: #ff7700;font-weight:bold;">del</span> chunks<span=
 style=3D"color: black;">[</span>pp<span style=3D"color: black;">]</span>
&nbsp;
  <span style=3D"color: #ff7700;font-weight:bold;">return</span> chunks
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> uploadfile<span=
 style=3D"color: black;">(</span>filename<span style=3D"color: black;">)</s=
pan>:
  infile <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #=
008000;">open</span><span style=3D"color: black;">(</span>filename<span sty=
le=3D"color: #66cc66;">,</span> <span style=3D"color: #483d8b;">'rb'</span>=
<span style=3D"color: black;">)</span>
  size <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #dc=
143c;">os</span>.<span style=3D"color: black;">path</span>.<span style=3D"c=
olor: black;">getsize</span><span style=3D"color: black;">(</span>filename<=
span style=3D"color: black;">)</span>
  ul_url <span style=3D"color: #66cc66;">=3D</span> api_req<span style=3D"c=
olor: black;">(</span><span style=3D"color: black;">{</span><span style=3D"=
color: #483d8b;">'a'</span>: <span style=3D"color: #483d8b;">'u'</span><spa=
n style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d8b;">'s'</s=
pan>: size<span style=3D"color: black;">}</span><span style=3D"color: black=
;">)</span><span style=3D"color: black;">[</span><span style=3D"color: #483=
d8b;">'p'</span><span style=3D"color: black;">]</span>
&nbsp;
  ul_key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: b=
lack;">[</span><span style=3D"color: #dc143c;">random</span>.<span style=3D=
"color: black;">randint</span><span style=3D"color: black;">(</span><span s=
tyle=3D"color: #ff4500;">0</span><span style=3D"color: #66cc66;">,</span> <=
span style=3D"color: #ff4500;">0xFFFFFFFF</span><span style=3D"color: black=
;">)</span> <span style=3D"color: #ff7700;font-weight:bold;">for</span> _ <=
span style=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"co=
lor: #008000;">xrange</span><span style=3D"color: black;">(</span><span sty=
le=3D"color: #ff4500;">6</span><span style=3D"color: black;">)</span><span =
style=3D"color: black;">]</span>
  encryptor <span style=3D"color: #66cc66;">=3D</span> AES.<span style=3D"c=
olor: #dc143c;">new</span><span style=3D"color: black;">(</span>a32_to_str<=
span style=3D"color: black;">(</span>ul_key<span style=3D"color: black;">[<=
/span>:<span style=3D"color: #ff4500;">4</span><span style=3D"color: black;=
">]</span><span style=3D"color: black;">)</span><span style=3D"color: #66cc=
66;">,</span> AES.<span style=3D"color: black;">MODE_CTR</span><span style=
=3D"color: #66cc66;">,</span> counter <span style=3D"color: #66cc66;">=3D</=
span> Counter.<span style=3D"color: #dc143c;">new</span><span style=3D"colo=
r: black;">(</span><span style=3D"color: #ff4500;">128</span><span style=3D=
"color: #66cc66;">,</span> initial_value <span style=3D"color: #66cc66;">=
=3D</span> <span style=3D"color: black;">(</span><span style=3D"color: blac=
k;">(</span>ul_key<span style=3D"color: black;">[</span><span style=3D"colo=
r: #ff4500;">4</span><span style=3D"color: black;">]</span> &amp;lt<span st=
yle=3D"color: #66cc66;">;</span>&amp;lt<span style=3D"color: #66cc66;">;</s=
pan> <span style=3D"color: #ff4500;">32</span><span style=3D"color: black;"=
>)</span> + ul_key<span style=3D"color: black;">[</span><span style=3D"colo=
r: #ff4500;">5</span><span style=3D"color: black;">]</span><span style=3D"c=
olor: black;">)</span> &amp;lt<span style=3D"color: #66cc66;">;</span>&amp;=
lt<span style=3D"color: #66cc66;">;</span> <span style=3D"color: #ff4500;">=
64</span><span style=3D"color: black;">)</span><span style=3D"color: black;=
">)</span>
&nbsp;
  file_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color:=
 black;">[</span><span style=3D"color: #ff4500;">0</span><span style=3D"col=
or: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span style=
=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span=
 style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span=
><span style=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> chunk_start<s=
pan style=3D"color: #66cc66;">,</span> chunk_size <span style=3D"color: #ff=
7700;font-weight:bold;">in</span> <span style=3D"color: #008000;">sorted</s=
pan><span style=3D"color: black;">(</span>get_chunks<span style=3D"color: b=
lack;">(</span>size<span style=3D"color: black;">)</span>.<span style=3D"co=
lor: black;">items</span><span style=3D"color: black;">(</span><span style=
=3D"color: black;">)</span><span style=3D"color: black;">)</span>:
    <span style=3D"color: #dc143c;">chunk</span> <span style=3D"color: #66c=
c66;">=3D</span> infile.<span style=3D"color: black;">read</span><span styl=
e=3D"color: black;">(</span>chunk_size<span style=3D"color: black;">)</span=
>
&nbsp;
    chunk_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"col=
or: black;">[</span>ul_key<span style=3D"color: black;">[</span><span style=
=3D"color: #ff4500;">4</span><span style=3D"color: black;">]</span><span st=
yle=3D"color: #66cc66;">,</span> ul_key<span style=3D"color: black;">[</spa=
n><span style=3D"color: #ff4500;">5</span><span style=3D"color: black;">]</=
span><span style=3D"color: #66cc66;">,</span> ul_key<span style=3D"color: b=
lack;">[</span><span style=3D"color: #ff4500;">4</span><span style=3D"color=
: black;">]</span><span style=3D"color: #66cc66;">,</span> ul_key<span styl=
e=3D"color: black;">[</span><span style=3D"color: #ff4500;">5</span><span s=
tyle=3D"color: black;">]</span><span style=3D"color: black;">]</span>
    <span style=3D"color: #ff7700;font-weight:bold;">for</span> i <span sty=
le=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #00=
8000;">xrange</span><span style=3D"color: black;">(</span><span style=3D"co=
lor: #ff4500;">0</span><span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #008000;">len</span><span style=3D"color: black;">(</span><span =
style=3D"color: #dc143c;">chunk</span><span style=3D"color: black;">)</span=
><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">1=
6</span><span style=3D"color: black;">)</span>:
      block <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color=
: #dc143c;">chunk</span><span style=3D"color: black;">[</span>i:i+<span sty=
le=3D"color: #ff4500;">16</span><span style=3D"color: black;">]</span>
      <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span styl=
e=3D"color: #008000;">len</span><span style=3D"color: black;">(</span>block=
<span style=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">16=
</span>:
        block +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"co=
lor: #483d8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span=
>'</span> * <span style=3D"color: black;">(</span><span style=3D"color: #ff=
4500;">16</span> - <span style=3D"color: #008000;">len</span><span style=3D=
"color: black;">(</span>block<span style=3D"color: black;">)</span> % <span=
 style=3D"color: #ff4500;">16</span><span style=3D"color: black;">)</span>
      block <span style=3D"color: #66cc66;">=3D</span> str_to_a32<span styl=
e=3D"color: black;">(</span>block<span style=3D"color: black;">)</span>
      chunk_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"c=
olor: black;">[</span>chunk_mac<span style=3D"color: black;">[</span><span =
style=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ =
block<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">=
0</span><span style=3D"color: black;">]</span><span style=3D"color: #66cc66=
;">,</span> chunk_mac<span style=3D"color: black;">[</span><span style=3D"c=
olor: #ff4500;">1</span><span style=3D"color: black;">]</span> ^ block<span=
 style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</span><s=
pan style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span=
> chunk_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4=
500;">2</span><span style=3D"color: black;">]</span> ^ block<span style=3D"=
color: black;">[</span><span style=3D"color: #ff4500;">2</span><span style=
=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> chunk_m=
ac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">3</=
span><span style=3D"color: black;">]</span> ^ block<span style=3D"color: bl=
ack;">[</span><span style=3D"color: #ff4500;">3</span><span style=3D"color:=
 black;">]</span><span style=3D"color: black;">]</span>
      chunk_mac <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_=
a32<span style=3D"color: black;">(</span>chunk_mac<span style=3D"color: #66=
cc66;">,</span> ul_key<span style=3D"color: black;">[</span>:<span style=3D=
"color: #ff4500;">4</span><span style=3D"color: black;">]</span><span style=
=3D"color: black;">)</span>
&nbsp;
    file_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"colo=
r: black;">[</span>file_mac<span style=3D"color: black;">[</span><span styl=
e=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ chun=
k_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">=
0</span><span style=3D"color: black;">]</span><span style=3D"color: #66cc66=
;">,</span> file_mac<span style=3D"color: black;">[</span><span style=3D"co=
lor: #ff4500;">1</span><span style=3D"color: black;">]</span> ^ chunk_mac<s=
pan style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</span=
><span style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</s=
pan> file_mac<span style=3D"color: black;">[</span><span style=3D"color: #f=
f4500;">2</span><span style=3D"color: black;">]</span> ^ chunk_mac<span sty=
le=3D"color: black;">[</span><span style=3D"color: #ff4500;">2</span><span =
style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> fi=
le_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;"=
>3</span><span style=3D"color: black;">]</span> ^ chunk_mac<span style=3D"c=
olor: black;">[</span><span style=3D"color: #ff4500;">3</span><span style=
=3D"color: black;">]</span><span style=3D"color: black;">]</span>
    file_mac <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_a32=
<span style=3D"color: black;">(</span>file_mac<span style=3D"color: #66cc66=
;">,</span> ul_key<span style=3D"color: black;">[</span>:<span style=3D"col=
or: #ff4500;">4</span><span style=3D"color: black;">]</span><span style=3D"=
color: black;">)</span>
&nbsp;
    <span style=3D"color: #dc143c;">chunk</span> <span style=3D"color: #66c=
c66;">=3D</span> encryptor.<span style=3D"color: black;">encrypt</span><spa=
n style=3D"color: black;">(</span><span style=3D"color: #dc143c;">chunk</sp=
an><span style=3D"color: black;">)</span>
    outfile <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color=
: #dc143c;">urllib</span>.<span style=3D"color: black;">urlopen</span><span=
 style=3D"color: black;">(</span>ul_url + <span style=3D"color: #483d8b;">"=
/"</span> + <span style=3D"color: #008000;">str</span><span style=3D"color:=
 black;">(</span>chunk_start<span style=3D"color: black;">)</span><span sty=
le=3D"color: #66cc66;">,</span> <span style=3D"color: #dc143c;">chunk</span=
><span style=3D"color: black;">)</span>
    completion_handle <span style=3D"color: #66cc66;">=3D</span> outfile.<s=
pan style=3D"color: black;">read</span><span style=3D"color: black;">(</spa=
n><span style=3D"color: black;">)</span>
    outfile.<span style=3D"color: black;">close</span><span style=3D"color:=
 black;">(</span><span style=3D"color: black;">)</span>
&nbsp;
  infile.<span style=3D"color: black;">close</span><span style=3D"color: bl=
ack;">(</span><span style=3D"color: black;">)</span>
&nbsp;
  meta_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color:=
 black;">(</span>file_mac<span style=3D"color: black;">[</span><span style=
=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ file_=
mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1<=
/span><span style=3D"color: black;">]</span><span style=3D"color: #66cc66;"=
>,</span> file_mac<span style=3D"color: black;">[</span><span style=3D"colo=
r: #ff4500;">2</span><span style=3D"color: black;">]</span> ^ file_mac<span=
 style=3D"color: black;">[</span><span style=3D"color: #ff4500;">3</span><s=
pan style=3D"color: black;">]</span><span style=3D"color: black;">)</span>
&nbsp;
  attributes <span style=3D"color: #66cc66;">=3D</span> <span style=3D"colo=
r: black;">{</span><span style=3D"color: #483d8b;">'n'</span>: <span style=
=3D"color: #dc143c;">os</span>.<span style=3D"color: black;">path</span>.<s=
pan style=3D"color: black;">basename</span><span style=3D"color: black;">(<=
/span>filename<span style=3D"color: black;">)</span><span style=3D"color: b=
lack;">}</span>
  enc_attributes <span style=3D"color: #66cc66;">=3D</span> enc_attr<span s=
tyle=3D"color: black;">(</span>attributes<span style=3D"color: #66cc66;">,<=
/span> ul_key<span style=3D"color: black;">[</span>:<span style=3D"color: #=
ff4500;">4</span><span style=3D"color: black;">]</span><span style=3D"color=
: black;">)</span>
  key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: blac=
k;">[</span>ul_key<span style=3D"color: black;">[</span><span style=3D"colo=
r: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ ul_key<span s=
tyle=3D"color: black;">[</span><span style=3D"color: #ff4500;">4</span><spa=
n style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> =
ul_key<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;"=
>1</span><span style=3D"color: black;">]</span> ^ ul_key<span style=3D"colo=
r: black;">[</span><span style=3D"color: #ff4500;">5</span><span style=3D"c=
olor: black;">]</span><span style=3D"color: #66cc66;">,</span> ul_key<span =
style=3D"color: black;">[</span><span style=3D"color: #ff4500;">2</span><sp=
an style=3D"color: black;">]</span> ^ meta_mac<span style=3D"color: black;"=
>[</span><span style=3D"color: #ff4500;">0</span><span style=3D"color: blac=
k;">]</span><span style=3D"color: #66cc66;">,</span> ul_key<span style=3D"c=
olor: black;">[</span><span style=3D"color: #ff4500;">3</span><span style=
=3D"color: black;">]</span> ^ meta_mac<span style=3D"color: black;">[</span=
><span style=3D"color: #ff4500;">1</span><span style=3D"color: black;">]</s=
pan><span style=3D"color: #66cc66;">,</span> ul_key<span style=3D"color: bl=
ack;">[</span><span style=3D"color: #ff4500;">4</span><span style=3D"color:=
 black;">]</span><span style=3D"color: #66cc66;">,</span> ul_key<span style=
=3D"color: black;">[</span><span style=3D"color: #ff4500;">5</span><span st=
yle=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> meta=
_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">0=
</span><span style=3D"color: black;">]</span><span style=3D"color: #66cc66;=
">,</span> meta_mac<span style=3D"color: black;">[</span><span style=3D"col=
or: #ff4500;">1</span><span style=3D"color: black;">]</span><span style=3D"=
color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">print</span> api_req<spa=
n style=3D"color: black;">(</span><span style=3D"color: black;">{</span><sp=
an style=3D"color: #483d8b;">'a'</span>: <span style=3D"color: #483d8b;">'p=
'</span><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #483=
d8b;">'t'</span>: root_id<span style=3D"color: #66cc66;">,</span> <span sty=
le=3D"color: #483d8b;">'n'</span>: <span style=3D"color: black;">[</span><s=
pan style=3D"color: black;">{</span><span style=3D"color: #483d8b;">'h'</sp=
an>: completion_handle<span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #483d8b;">'t'</span>: <span style=3D"color: #ff4500;">0</span><s=
pan style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d8b;">'a'<=
/span>: base64urlencode<span style=3D"color: black;">(</span>enc_attributes=
<span style=3D"color: black;">)</span><span style=3D"color: #66cc66;">,</sp=
an> <span style=3D"color: #483d8b;">'k'</span>: a32_to_base64<span style=3D=
"color: black;">(</span>encrypt_key<span style=3D"color: black;">(</span>ke=
y<span style=3D"color: #66cc66;">,</span> master_key<span style=3D"color: b=
lack;">)</span><span style=3D"color: black;">)</span><span style=3D"color: =
black;">}</span><span style=3D"color: black;">]</span><span style=3D"color:=
 black;">}</span><span style=3D"color: black;">)</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> downloadfile<sp=
an style=3D"color: black;">(</span><span style=3D"color: #008000;">file</sp=
an><span style=3D"color: #66cc66;">,</span> attributes<span style=3D"color:=
 #66cc66;">,</span> k<span style=3D"color: #66cc66;">,</span> iv<span style=
=3D"color: #66cc66;">,</span> meta_mac<span style=3D"color: black;">)</span=
>:
  dl_url <span style=3D"color: #66cc66;">=3D</span> api_req<span style=3D"c=
olor: black;">(</span><span style=3D"color: black;">{</span><span style=3D"=
color: #483d8b;">'a'</span>: <span style=3D"color: #483d8b;">'g'</span><spa=
n style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d8b;">'g'</s=
pan>: <span style=3D"color: #ff4500;">1</span><span style=3D"color: #66cc66=
;">,</span> <span style=3D"color: #483d8b;">'n'</span>: <span style=3D"colo=
r: #008000;">file</span><span style=3D"color: black;">[</span><span style=
=3D"color: #483d8b;">'h'</span><span style=3D"color: black;">]</span><span =
style=3D"color: black;">}</span><span style=3D"color: black;">)</span><span=
 style=3D"color: black;">[</span><span style=3D"color: #483d8b;">'g'</span>=
<span style=3D"color: black;">]</span>
&nbsp;
  infile <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: #=
dc143c;">urllib</span>.<span style=3D"color: black;">urlopen</span><span st=
yle=3D"color: black;">(</span>dl_url<span style=3D"color: black;">)</span>
  outfile <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: =
#008000;">open</span><span style=3D"color: black;">(</span>attributes<span =
style=3D"color: black;">[</span><span style=3D"color: #483d8b;">'n'</span><=
span style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</spa=
n> <span style=3D"color: #483d8b;">'wb'</span><span style=3D"color: black;"=
>)</span>
  decryptor <span style=3D"color: #66cc66;">=3D</span> AES.<span style=3D"c=
olor: #dc143c;">new</span><span style=3D"color: black;">(</span>a32_to_str<=
span style=3D"color: black;">(</span>k<span style=3D"color: black;">)</span=
><span style=3D"color: #66cc66;">,</span> AES.<span style=3D"color: black;"=
>MODE_CTR</span><span style=3D"color: #66cc66;">,</span> counter <span styl=
e=3D"color: #66cc66;">=3D</span> Counter.<span style=3D"color: #dc143c;">ne=
w</span><span style=3D"color: black;">(</span><span style=3D"color: #ff4500=
;">128</span><span style=3D"color: #66cc66;">,</span> initial_value <span s=
tyle=3D"color: #66cc66;">=3D</span> <span style=3D"color: black;">(</span><=
span style=3D"color: black;">(</span>iv<span style=3D"color: black;">[</spa=
n><span style=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</=
span> &amp;lt<span style=3D"color: #66cc66;">;</span>&amp;lt<span style=3D"=
color: #66cc66;">;</span> <span style=3D"color: #ff4500;">32</span><span st=
yle=3D"color: black;">)</span> + iv<span style=3D"color: black;">[</span><s=
pan style=3D"color: #ff4500;">1</span><span style=3D"color: black;">]</span=
><span style=3D"color: black;">)</span> &amp;lt<span style=3D"color: #66cc6=
6;">;</span>&amp;lt<span style=3D"color: #66cc66;">;</span> <span style=3D"=
color: #ff4500;">64</span><span style=3D"color: black;">)</span><span style=
=3D"color: black;">)</span>
&nbsp;
  file_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color:=
 black;">[</span><span style=3D"color: #ff4500;">0</span><span style=3D"col=
or: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span style=
=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span><span=
 style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span=
><span style=3D"color: black;">]</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> chunk_start<s=
pan style=3D"color: #66cc66;">,</span> chunk_size <span style=3D"color: #ff=
7700;font-weight:bold;">in</span> <span style=3D"color: #008000;">sorted</s=
pan><span style=3D"color: black;">(</span>get_chunks<span style=3D"color: b=
lack;">(</span><span style=3D"color: #008000;">file</span><span style=3D"co=
lor: black;">[</span><span style=3D"color: #483d8b;">'s'</span><span style=
=3D"color: black;">]</span><span style=3D"color: black;">)</span>.<span sty=
le=3D"color: black;">items</span><span style=3D"color: black;">(</span><spa=
n style=3D"color: black;">)</span><span style=3D"color: black;">)</span>:
    <span style=3D"color: #dc143c;">chunk</span> <span style=3D"color: #66c=
c66;">=3D</span> infile.<span style=3D"color: black;">read</span><span styl=
e=3D"color: black;">(</span>chunk_size<span style=3D"color: black;">)</span=
>
    <span style=3D"color: #dc143c;">chunk</span> <span style=3D"color: #66c=
c66;">=3D</span> decryptor.<span style=3D"color: black;">decrypt</span><spa=
n style=3D"color: black;">(</span><span style=3D"color: #dc143c;">chunk</sp=
an><span style=3D"color: black;">)</span>
    outfile.<span style=3D"color: black;">write</span><span style=3D"color:=
 black;">(</span><span style=3D"color: #dc143c;">chunk</span><span style=3D=
"color: black;">)</span>
&nbsp;
    chunk_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"col=
or: black;">[</span>iv<span style=3D"color: black;">[</span><span style=3D"=
color: #ff4500;">0</span><span style=3D"color: black;">]</span><span style=
=3D"color: #66cc66;">,</span> iv<span style=3D"color: black;">[</span><span=
 style=3D"color: #ff4500;">1</span><span style=3D"color: black;">]</span><s=
pan style=3D"color: #66cc66;">,</span> iv<span style=3D"color: black;">[</s=
pan><span style=3D"color: #ff4500;">0</span><span style=3D"color: black;">]=
</span><span style=3D"color: #66cc66;">,</span> iv<span style=3D"color: bla=
ck;">[</span><span style=3D"color: #ff4500;">1</span><span style=3D"color: =
black;">]</span><span style=3D"color: black;">]</span>
    <span style=3D"color: #ff7700;font-weight:bold;">for</span> i <span sty=
le=3D"color: #ff7700;font-weight:bold;">in</span> <span style=3D"color: #00=
8000;">xrange</span><span style=3D"color: black;">(</span><span style=3D"co=
lor: #ff4500;">0</span><span style=3D"color: #66cc66;">,</span> <span style=
=3D"color: #008000;">len</span><span style=3D"color: black;">(</span><span =
style=3D"color: #dc143c;">chunk</span><span style=3D"color: black;">)</span=
><span style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">1=
6</span><span style=3D"color: black;">)</span>:
      block <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color=
: #dc143c;">chunk</span><span style=3D"color: black;">[</span>i:i+<span sty=
le=3D"color: #ff4500;">16</span><span style=3D"color: black;">]</span>
      <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span styl=
e=3D"color: #008000;">len</span><span style=3D"color: black;">(</span>block=
<span style=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">16=
</span>:
        block +<span style=3D"color: #66cc66;">=3D</span> <span style=3D"co=
lor: #483d8b;">'<span style=3D"color: #000099; font-weight: bold;">\0</span=
>'</span> * <span style=3D"color: black;">(</span><span style=3D"color: #ff=
4500;">16</span> - <span style=3D"color: black;">(</span><span style=3D"col=
or: #008000;">len</span><span style=3D"color: black;">(</span>block<span st=
yle=3D"color: black;">)</span> % <span style=3D"color: #ff4500;">16</span><=
span style=3D"color: black;">)</span><span style=3D"color: black;">)</span>
      block <span style=3D"color: #66cc66;">=3D</span> str_to_a32<span styl=
e=3D"color: black;">(</span>block<span style=3D"color: black;">)</span>
      chunk_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"c=
olor: black;">[</span>chunk_mac<span style=3D"color: black;">[</span><span =
style=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ =
block<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">=
0</span><span style=3D"color: black;">]</span><span style=3D"color: #66cc66=
;">,</span> chunk_mac<span style=3D"color: black;">[</span><span style=3D"c=
olor: #ff4500;">1</span><span style=3D"color: black;">]</span> ^ block<span=
 style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</span><s=
pan style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span=
> chunk_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4=
500;">2</span><span style=3D"color: black;">]</span> ^ block<span style=3D"=
color: black;">[</span><span style=3D"color: #ff4500;">2</span><span style=
=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> chunk_m=
ac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">3</=
span><span style=3D"color: black;">]</span> ^ block<span style=3D"color: bl=
ack;">[</span><span style=3D"color: #ff4500;">3</span><span style=3D"color:=
 black;">]</span><span style=3D"color: black;">]</span>
      chunk_mac <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_=
a32<span style=3D"color: black;">(</span>chunk_mac<span style=3D"color: #66=
cc66;">,</span> k<span style=3D"color: black;">)</span>
&nbsp;
    file_mac <span style=3D"color: #66cc66;">=3D</span> <span style=3D"colo=
r: black;">[</span>file_mac<span style=3D"color: black;">[</span><span styl=
e=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ chun=
k_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">=
0</span><span style=3D"color: black;">]</span><span style=3D"color: #66cc66=
;">,</span> file_mac<span style=3D"color: black;">[</span><span style=3D"co=
lor: #ff4500;">1</span><span style=3D"color: black;">]</span> ^ chunk_mac<s=
pan style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</span=
><span style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</s=
pan> file_mac<span style=3D"color: black;">[</span><span style=3D"color: #f=
f4500;">2</span><span style=3D"color: black;">]</span> ^ chunk_mac<span sty=
le=3D"color: black;">[</span><span style=3D"color: #ff4500;">2</span><span =
style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> fi=
le_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;"=
>3</span><span style=3D"color: black;">]</span> ^ chunk_mac<span style=3D"c=
olor: black;">[</span><span style=3D"color: #ff4500;">3</span><span style=
=3D"color: black;">]</span><span style=3D"color: black;">]</span>
    file_mac <span style=3D"color: #66cc66;">=3D</span> aes_cbc_encrypt_a32=
<span style=3D"color: black;">(</span>file_mac<span style=3D"color: #66cc66=
;">,</span> k<span style=3D"color: black;">)</span>
&nbsp;
  outfile.<span style=3D"color: black;">close</span><span style=3D"color: b=
lack;">(</span><span style=3D"color: black;">)</span>
  infile.<span style=3D"color: black;">close</span><span style=3D"color: bl=
ack;">(</span><span style=3D"color: black;">)</span>
&nbsp;
  <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=3D=
"color: black;">(</span>file_mac<span style=3D"color: black;">[</span><span=
 style=3D"color: #ff4500;">0</span><span style=3D"color: black;">]</span> ^=
 file_mac<span style=3D"color: black;">[</span><span style=3D"color: #ff450=
0;">1</span><span style=3D"color: black;">]</span><span style=3D"color: #66=
cc66;">,</span> file_mac<span style=3D"color: black;">[</span><span style=
=3D"color: #ff4500;">2</span><span style=3D"color: black;">]</span> ^ file_=
mac<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">3<=
/span><span style=3D"color: black;">]</span><span style=3D"color: black;">)=
</span> <span style=3D"color: #66cc66;">!=3D</span> meta_mac:
    <span style=3D"color: #ff7700;font-weight:bold;">print</span> <span sty=
le=3D"color: #483d8b;">"MAC mismatch"</span>
&nbsp;
<span style=3D"color: #ff7700;font-weight:bold;">def</span> getfiles<span s=
tyle=3D"color: black;">(</span><span style=3D"color: black;">)</span>:
  <span style=3D"color: #ff7700;font-weight:bold;">global</span> root_id<sp=
an style=3D"color: #66cc66;">,</span> inbox_id<span style=3D"color: #66cc66=
;">,</span> trashbin_id
&nbsp;
  files <span style=3D"color: #66cc66;">=3D</span> api_req<span style=3D"co=
lor: black;">(</span><span style=3D"color: black;">{</span><span style=3D"c=
olor: #483d8b;">'a'</span>: <span style=3D"color: #483d8b;">'f'</span><span=
 style=3D"color: #66cc66;">,</span> <span style=3D"color: #483d8b;">'c'</sp=
an>: <span style=3D"color: #ff4500;">1</span><span style=3D"color: black;">=
}</span><span style=3D"color: black;">)</span>
  <span style=3D"color: #ff7700;font-weight:bold;">for</span> <span style=
=3D"color: #008000;">file</span> <span style=3D"color: #ff7700;font-weight:=
bold;">in</span> files<span style=3D"color: black;">[</span><span style=3D"=
color: #483d8b;">'f'</span><span style=3D"color: black;">]</span>:
    <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span style=
=3D"color: #008000;">file</span><span style=3D"color: black;">[</span><span=
 style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</span>=
 <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #ff450=
0;">0</span> <span style=3D"color: #ff7700;font-weight:bold;">or</span> <sp=
an style=3D"color: #008000;">file</span><span style=3D"color: black;">[</sp=
an><span style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">=
]</span> <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color=
: #ff4500;">1</span>:
      key <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: =
#008000;">file</span><span style=3D"color: black;">[</span><span style=3D"c=
olor: #483d8b;">'k'</span><span style=3D"color: black;">]</span><span style=
=3D"color: black;">[</span><span style=3D"color: #008000;">file</span><span=
 style=3D"color: black;">[</span><span style=3D"color: #483d8b;">'k'</span>=
<span style=3D"color: black;">]</span>.<span style=3D"color: black;">index<=
/span><span style=3D"color: black;">(</span><span style=3D"color: #483d8b;"=
>':'</span><span style=3D"color: black;">)</span> + <span style=3D"color: #=
ff4500;">1</span>:<span style=3D"color: black;">]</span>
      key <span style=3D"color: #66cc66;">=3D</span> decrypt_key<span style=
=3D"color: black;">(</span>base64_to_a32<span style=3D"color: black;">(</sp=
an>key<span style=3D"color: black;">)</span><span style=3D"color: #66cc66;"=
>,</span> master_key<span style=3D"color: black;">)</span>
      <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span styl=
e=3D"color: #008000;">file</span><span style=3D"color: black;">[</span><spa=
n style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</span=
> <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #ff45=
00;">0</span>:
        k <span style=3D"color: #66cc66;">=3D</span> <span style=3D"color: =
black;">(</span>key<span style=3D"color: black;">[</span><span style=3D"col=
or: #ff4500;">0</span><span style=3D"color: black;">]</span> ^ key<span sty=
le=3D"color: black;">[</span><span style=3D"color: #ff4500;">4</span><span =
style=3D"color: black;">]</span><span style=3D"color: #66cc66;">,</span> ke=
y<span style=3D"color: black;">[</span><span style=3D"color: #ff4500;">1</s=
pan><span style=3D"color: black;">]</span> ^ key<span style=3D"color: black=
;">[</span><span style=3D"color: #ff4500;">5</span><span style=3D"color: bl=
ack;">]</span><span style=3D"color: #66cc66;">,</span> key<span style=3D"co=
lor: black;">[</span><span style=3D"color: #ff4500;">2</span><span style=3D=
"color: black;">]</span> ^ key<span style=3D"color: black;">[</span><span s=
tyle=3D"color: #ff4500;">6</span><span style=3D"color: black;">]</span><spa=
n style=3D"color: #66cc66;">,</span> key<span style=3D"color: black;">[</sp=
an><span style=3D"color: #ff4500;">3</span><span style=3D"color: black;">]<=
/span> ^ key<span style=3D"color: black;">[</span><span style=3D"color: #ff=
4500;">7</span><span style=3D"color: black;">]</span><span style=3D"color: =
black;">)</span>
        iv <span style=3D"color: #66cc66;">=3D</span> key<span style=3D"col=
or: black;">[</span><span style=3D"color: #ff4500;">4</span>:<span style=3D=
"color: #ff4500;">6</span><span style=3D"color: black;">]</span> + <span st=
yle=3D"color: black;">(</span><span style=3D"color: #ff4500;">0</span><span=
 style=3D"color: #66cc66;">,</span> <span style=3D"color: #ff4500;">0</span=
><span style=3D"color: black;">)</span>
        meta_mac <span style=3D"color: #66cc66;">=3D</span> key<span style=
=3D"color: black;">[</span><span style=3D"color: #ff4500;">6</span>:<span s=
tyle=3D"color: #ff4500;">8</span><span style=3D"color: black;">]</span>
      <span style=3D"color: #ff7700;font-weight:bold;">else</span>:
        k <span style=3D"color: #66cc66;">=3D</span> key
      attributes <span style=3D"color: #66cc66;">=3D</span> base64urldecode=
<span style=3D"color: black;">(</span><span style=3D"color: #008000;">file<=
/span><span style=3D"color: black;">[</span><span style=3D"color: #483d8b;"=
>'a'</span><span style=3D"color: black;">]</span><span style=3D"color: blac=
k;">)</span>
      attributes <span style=3D"color: #66cc66;">=3D</span> dec_attr<span s=
tyle=3D"color: black;">(</span>attributes<span style=3D"color: #66cc66;">,<=
/span> k<span style=3D"color: black;">)</span>
      <span style=3D"color: #ff7700;font-weight:bold;">print</span> attribu=
tes<span style=3D"color: black;">[</span><span style=3D"color: #483d8b;">'n=
'</span><span style=3D"color: black;">]</span>
&nbsp;
      <span style=3D"color: #ff7700;font-weight:bold;">if</span> <span styl=
e=3D"color: #008000;">file</span><span style=3D"color: black;">[</span><spa=
n style=3D"color: #483d8b;">'h'</span><span style=3D"color: black;">]</span=
> <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #483d=
8b;">'0wFEFCTa'</span>:
        downloadfile<span style=3D"color: black;">(</span><span style=3D"co=
lor: #008000;">file</span><span style=3D"color: #66cc66;">,</span> attribut=
es<span style=3D"color: #66cc66;">,</span> k<span style=3D"color: #66cc66;"=
>,</span> iv<span style=3D"color: #66cc66;">,</span> meta_mac<span style=3D=
"color: black;">)</span>
    <span style=3D"color: #ff7700;font-weight:bold;">elif</span> <span styl=
e=3D"color: #008000;">file</span><span style=3D"color: black;">[</span><spa=
n style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</span=
> <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #ff45=
00;">2</span>:
      root_id <span style=3D"color: #66cc66;">=3D</span> <span style=3D"col=
or: #008000;">file</span><span style=3D"color: black;">[</span><span style=
=3D"color: #483d8b;">'h'</span><span style=3D"color: black;">]</span>
    <span style=3D"color: #ff7700;font-weight:bold;">elif</span> <span styl=
e=3D"color: #008000;">file</span><span style=3D"color: black;">[</span><spa=
n style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</span=
> <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #ff45=
00;">3</span>:
      inbox_id <span style=3D"color: #66cc66;">=3D</span> <span style=3D"co=
lor: #008000;">file</span><span style=3D"color: black;">[</span><span style=
=3D"color: #483d8b;">'h'</span><span style=3D"color: black;">]</span>
    <span style=3D"color: #ff7700;font-weight:bold;">elif</span> <span styl=
e=3D"color: #008000;">file</span><span style=3D"color: black;">[</span><spa=
n style=3D"color: #483d8b;">'t'</span><span style=3D"color: black;">]</span=
> <span style=3D"color: #66cc66;">=3D=3D</span> <span style=3D"color: #ff45=
00;">4</span>:
      trashbin_id <span style=3D"color: #66cc66;">=3D</span> <span style=3D=
"color: #008000;">file</span><span style=3D"color: black;">[</span><span st=
yle=3D"color: #483d8b;">'h'</span><span style=3D"color: black;">]</span></p=
re></td></tr></tbody></table></div>

<a rel=3D"author" href=3D"https://web.archive.org/web/20230601152626/https:=
//plus.google.com/117618285514182519110?rel=3Dauthor">Google+</a>					</div=
><!-- .entry-content -->
	=09
		<footer class=3D"entry-meta">
			This entry was posted in <a href=3D"https://web.archive.org/web/20230601=
152626/http://julien-marchand.fr/blog/category/uncategorized/" title=3D"Vie=
w all posts in Uncategorized" rel=3D"category tag">Uncategorized</a> on <a =
href=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.f=
r/blog/using-mega-api-with-python-examples/" title=3D"2:30 am" rel=3D"bookm=
ark"><time class=3D"entry-date" datetime=3D"2013-01-28T02:30:39+00:00">Janu=
ary 28, 2013</time></a><span class=3D"by-author"> by <span class=3D"author =
vcard"><a class=3D"url fn n" href=3D"https://web.archive.org/web/2023060115=
2626/http://julien-marchand.fr/blog/author/julienm/" title=3D"View all post=
s by Julien Marchand" rel=3D"author">Julien Marchand</a></span></span>.				=
				</footer><!-- .entry-meta -->
	</article><!-- #post -->

				<nav class=3D"nav-single">
					<h3 class=3D"assistive-text">Post navigation</h3>
					<span class=3D"nav-previous"></span>
					<span class=3D"nav-next"><a href=3D"https://web.archive.org/web/202306=
01152626/http://julien-marchand.fr/blog/megafs-a-fuse-filesystem-wrapper-fo=
r-mega-part-1-listing-files/" rel=3D"next">MegaFS, a FUSE filesystem wrappe=
r for Mega. Part 1: Listing files. <span class=3D"meta-nav">=E2=86=92</span=
></a></span>
				</nav><!-- .nav-single -->

			=09
<div id=3D"comments" class=3D"comments-area">

=09
			<h2 class=3D"comments-title">
			40 thoughts on =E2=80=9C<span>Using the Mega API, with Python examples!<=
/span>=E2=80=9D		</h2>

		<ol class=3D"commentlist">
				<li class=3D"comment even thread-even depth-1" id=3D"li-comment-2">
		<article id=3D"comment-2" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de2dd564dea21a669cbe92e545618101?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">lucho </cite><a href=3D"https://web.archive.org/web/2023=
0601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-exampl=
es/#comment-2"><time datetime=3D"2013-01-29T04:36:02+00:00">January 29, 201=
3 at 4:36 am</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>This is very interesting! Thanks for sharing <img src=3D"https://web=
.archive.org/web/20230601152626im_/http://julien-marchand.fr/blog/wp-includ=
es/images/smilies/icon_biggrin.gif" alt=3D":D" class=3D"wp-smiley"> </p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D2#respond">Reply</a> <span>=E2=86=93</span>			</div><!-- =
.reply -->
		</article><!-- #comment-## -->
	</li>
	<li class=3D"comment odd alt thread-odd thread-alt depth-1" id=3D"li-comme=
nt-3">
		<article id=3D"comment-3" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/88a4ba98f92826066be642aeea2f56d5?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">AoEmaster </cite><a href=3D"https://web.archive.org/web/=
20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-ex=
amples/#comment-3"><time datetime=3D"2013-01-29T11:07:56+00:00">January 29,=
 2013 at 11:07 am</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Hi.</p>
<p>Can you please help me with the mega api ?<br>
I=E2=80=99m trying to just get file size and file name with a knowed url. (=
in PHP)</p>
<p>Here is my code :<br>
<a href=3D"https://web.archive.org/web/20230601152626/http://pastebin.com/R=
DwG6Pf6" rel=3D"nofollow">http://pastebin.com/RDwG6Pf6</a></p>
<p>I don=E2=80=99t unterstand how to decrypt the =E2=80=9Cat=E2=80=9D attri=
bute of the response. Is it really the filename ?</p>
<p>It would very nice if you could help me <img src=3D"https://web.archive.=
org/web/20230601152626im_/http://julien-marchand.fr/blog/wp-includes/images=
/smilies/icon_smile.gif" alt=3D":)" class=3D"wp-smiley"> </p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D3#respond">Reply</a> <span>=E2=86=93</span>			</div><!-- =
.reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment byuser comment-author-julienm bypostauthor even depth=
-2" id=3D"li-comment-7">
		<article id=3D"comment-7" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Julien Marchand <span> Post author</span></cite><a href=
=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.fr/bl=
og/using-mega-api-with-python-examples/#comment-7"><time datetime=3D"2013-0=
1-29T13:11:07+00:00">January 29, 2013 at 1:11 pm</time></a>			</header><!--=
 .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>I think it=E2=80=99s the attributes of the file, so yeap, its filena=
me. You can decrypt it with the dec_attr() function <img src=3D"https://web=
.archive.org/web/20230601152626im_/http://julien-marchand.fr/blog/wp-includ=
es/images/smilies/icon_smile.gif" alt=3D":)" class=3D"wp-smiley"> </p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D7#respond">Reply</a> <span>=E2=86=93</span>			</div><!-- =
.reply -->
		</article><!-- #comment-## -->
	</li>
	<li class=3D"comment byuser comment-author-julienm bypostauthor odd alt de=
pth-2" id=3D"li-comment-8">
		<article id=3D"comment-8" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Julien Marchand <span> Post author</span></cite><a href=
=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.fr/bl=
og/using-mega-api-with-python-examples/#comment-8"><time datetime=3D"2013-0=
1-29T13:14:41+00:00">January 29, 2013 at 1:14 pm</time></a>			</header><!--=
 .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>In PHP:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"php" style=3D"font-family:monospace;"><span style=3D"color: #000000; font-=
weight: bold;">function</span> dec_attr<span style=3D"color: #009900;">(</s=
pan><span style=3D"color: #000088;">$attr</span><span style=3D"color: #3399=
33;">,</span> <span style=3D"color: #000088;">$key</span><span style=3D"col=
or: #009900;">)</span> <span style=3D"color: #009900;">{</span>
  <span style=3D"color: #000088;">$b</span> <span style=3D"color: #339933;"=
>=3D</span> <span style=3D"color: #990000;">trim</span><span style=3D"color=
: #009900;">(</span>aes128_cbc_decrypt<span style=3D"color: #009900;">(</sp=
an><span style=3D"color: #000088;">$attr</span><span style=3D"color: #33993=
3;">,</span> a32_to_str<span style=3D"color: #009900;">(</span><span style=
=3D"color: #000088;">$key</span><span style=3D"color: #009900;">)</span><sp=
an style=3D"color: #009900;">)</span><span style=3D"color: #009900;">)</spa=
n><span style=3D"color: #339933;">;</span>
  <span style=3D"color: #b1b100;">if</span> <span style=3D"color: #009900;"=
>(</span><span style=3D"color: #990000;">substr</span><span style=3D"color:=
 #009900;">(</span><span style=3D"color: #000088;">$b</span><span style=3D"=
color: #339933;">,</span> <span style=3D"color: #cc66cc;">0</span><span sty=
le=3D"color: #339933;">,</span> <span style=3D"color: #cc66cc;">6</span><sp=
an style=3D"color: #009900;">)</span> <span style=3D"color: #339933;">!=3D<=
/span> <span style=3D"color: #0000ff;">'MEGA{"'</span><span style=3D"color:=
 #009900;">)</span> <span style=3D"color: #b1b100;">return</span> <span sty=
le=3D"color: #009900; font-weight: bold;">false</span><span style=3D"color:=
 #339933;">;</span>
  <span style=3D"color: #b1b100;">return</span> <span style=3D"color: #9900=
00;">json_decode</span><span style=3D"color: #009900;">(</span><span style=
=3D"color: #990000;">substr</span><span style=3D"color: #009900;">(</span><=
span style=3D"color: #000088;">$b</span><span style=3D"color: #339933;">,</=
span> <span style=3D"color: #cc66cc;">4</span><span style=3D"color: #009900=
;">)</span><span style=3D"color: #009900;">)</span><span style=3D"color: #3=
39933;">;</span>
<span style=3D"color: #009900;">}</span></pre></td></tr></tbody></table></d=
iv>

<p>And I use mcrypt for AES encryption/decryption:</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"php" style=3D"font-family:monospace;"><span style=3D"color: #000000; font-=
weight: bold;">function</span> aes128_cbc_decrypt<span style=3D"color: #009=
900;">(</span><span style=3D"color: #000088;">$data</span><span style=3D"co=
lor: #339933;">,</span> <span style=3D"color: #000088;">$key</span><span st=
yle=3D"color: #009900;">)</span> <span style=3D"color: #009900;">{</span>
  <span style=3D"color: #b1b100;">return</span> <span style=3D"color: #9900=
00;">mcrypt_decrypt</span><span style=3D"color: #009900;">(</span>
    MCRYPT_RIJNDAEL_128<span style=3D"color: #339933;">,</span>
    <span style=3D"color: #000088;">$key</span><span style=3D"color: #33993=
3;">,</span> <span style=3D"color: #000088;">$data</span><span style=3D"col=
or: #339933;">,</span>
    MCRYPT_MODE_CBC<span style=3D"color: #339933;">,</span>
    <span style=3D"color: #0000ff;">"<span style=3D"color: #660099; font-we=
ight: bold;">\0</span><span style=3D"color: #660099; font-weight: bold;">\0=
</span><span style=3D"color: #660099; font-weight: bold;">\0</span><span st=
yle=3D"color: #660099; font-weight: bold;">\0</span><span style=3D"color: #=
660099; font-weight: bold;">\0</span><span style=3D"color: #660099; font-we=
ight: bold;">\0</span><span style=3D"color: #660099; font-weight: bold;">\0=
</span><span style=3D"color: #660099; font-weight: bold;">\0</span><span st=
yle=3D"color: #660099; font-weight: bold;">\0</span><span style=3D"color: #=
660099; font-weight: bold;">\0</span><span style=3D"color: #660099; font-we=
ight: bold;">\0</span><span style=3D"color: #660099; font-weight: bold;">\0=
</span><span style=3D"color: #660099; font-weight: bold;">\0</span><span st=
yle=3D"color: #660099; font-weight: bold;">\0</span><span style=3D"color: #=
660099; font-weight: bold;">\0</span><span style=3D"color: #660099; font-we=
ight: bold;">\0</span>"</span>
  <span style=3D"color: #009900;">)</span><span style=3D"color: #339933;">;=
</span>
<span style=3D"color: #009900;">}</span></pre></td></tr></tbody></table></d=
iv>

<p>a32_to_str() is implemented with pack():</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"php" style=3D"font-family:monospace;"><span style=3D"color: #000000; font-=
weight: bold;">function</span> a32_to_str<span style=3D"color: #009900;">(<=
/span><span style=3D"color: #000088;">$hex</span><span style=3D"color: #009=
900;">)</span> <span style=3D"color: #009900;">{</span>
  <span style=3D"color: #b1b100;">return</span> <span style=3D"color: #9900=
00;">call_user_func_array</span><span style=3D"color: #009900;">(</span><sp=
an style=3D"color: #0000ff;">"pack"</span><span style=3D"color: #339933;">,=
</span> <span style=3D"color: #990000;">array_merge</span><span style=3D"co=
lor: #009900;">(</span><span style=3D"color: #990000;">array</span><span st=
yle=3D"color: #009900;">(</span><span style=3D"color: #0000ff;">"N*"</span>=
<span style=3D"color: #009900;">)</span><span style=3D"color: #339933;">,</=
span> <span style=3D"color: #000088;">$hex</span><span style=3D"color: #009=
900;">)</span><span style=3D"color: #009900;">)</span><span style=3D"color:=
 #339933;">;</span>
<span style=3D"color: #009900;">}</span></pre></td></tr></tbody></table></d=
iv>

							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D8#respond">Reply</a> <span>=E2=86=93</span>			</div><!-- =
.reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment even depth-3" id=3D"li-comment-10">
		<article id=3D"comment-10" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/88a4ba98f92826066be642aeea2f56d5?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">AoEmaster </cite><a href=3D"https://web.archive.org/web/=
20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-ex=
amples/#comment-10"><time datetime=3D"2013-01-29T17:36:20+00:00">January 29=
, 2013 at 5:36 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Je vois que tu as un .fr et que tu portes un nom bien fran=C3=A7ais,=
 donc je vais parler fran=C3=A7ais vu que je le suis, et j=E2=80=99esp=C3=
=A8re qu=E2=80=99on se comprendra :p</p>
<p>D=C3=A9j=C3=A0, vraiment d=C3=A9sol=C3=A9 mais je n=E2=80=99ai jamais to=
uch=C3=A9 =C3=A0 python de ma vie et j=E2=80=99ai du mal =C3=A0 comprendre =
ton exemple et =C3=A0 faire le lien avec du PHP. J=E2=80=99aimerais r=C3=A9=
ellement r=C3=A9ussir =C3=A0 decrypter l=E2=80=99attribut mais je n=E2=80=
=99y arrive vraiment pas. Ma clef est stock=C3=A9 est stock=C3=A9 dans une =
chaine (la chaine contenu dans l=E2=80=99url) et je ne sais pas comment ada=
pter =C3=A7a avec le code que tu m=E2=80=99as fourni.</p>
<p>Je suis pas un pro mais bon, si tu pouvais essayer de prendre le temps d=
e faire fonctionner mon script, je t=E2=80=99en serais vraiment reconnaissa=
nt car je commence =C3=A0 d=C3=A9s=C3=A9perer. Je m=E2=80=99embrouille trop=
 avec ces fonctions de cryptages, base64, aes 12 bits etc=E2=80=A6</p>
<p>Merci d=E2=80=99avance <img src=3D"https://web.archive.org/web/202306011=
52626im_/http://julien-marchand.fr/blog/wp-includes/images/smilies/icon_smi=
le.gif" alt=3D":)" class=3D"wp-smiley"> </p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D10#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment byuser comment-author-julienm bypostauthor odd alt de=
pth-4" id=3D"li-comment-11">
		<article id=3D"comment-11" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Julien Marchand <span> Post author</span></cite><a href=
=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.fr/bl=
og/using-mega-api-with-python-examples/#comment-11"><time datetime=3D"2013-=
01-29T18:23:48+00:00">January 29, 2013 at 6:23 pm</time></a>			</header><!-=
- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Bonne pioche <img src=3D"https://web.archive.org/web/20230601152626i=
m_/http://julien-marchand.fr/blog/wp-includes/images/smilies/icon_smile.gif=
" alt=3D":-)" class=3D"wp-smiley"> </p>
<p>Donc, tu as d=E2=80=99un c=C3=B4t=C3=A9 l=E2=80=99ID d=E2=80=99un fichie=
r, et de l=E2=80=99autre sa cl=C3=A9 <i>key</i> d=C3=A9j=C3=A0 d=C3=A9chiff=
r=C3=A9e (=C3=A0 l=E2=80=99origine, elle est chiffr=C3=A9e avec la master k=
ey du propri=C3=A9taire du fichier, mais elle est justement distribu=C3=A9e=
 d=C3=A9chiffr=C3=A9e par son propri=C3=A9taire lorsqu=E2=80=99il partage l=
e fichier. C=E2=80=99est elle que l=E2=80=99on voit dans les liens Mega: <a=
 href=3D"https://web.archive.org/web/20230601152626/https://mega.co.nz/#!fi=
le_hash!file_key" rel=3D"nofollow">https://mega.co.nz/#!file_hash!file_key<=
/a>).</p>
<p>Tu peux donc reprendre ce qui est fait par la boucle principale de la fo=
nction <i>getfiles()</i> apr=C3=A8s l=E2=80=99=C3=A9tape de d=C3=A9chiffrem=
ent de la cl=C3=A9.</p>
<p>Tout d=E2=80=99abord, il faut extraire sa composante <i>k</i>, qui a ser=
vi a chiffrer le contenu du fichier et ses attributs: <i>k =3D [key[0] ^ ke=
y[4], key[1] ^ key[5], key[2] ^ key[6], key[3] ^ key[7]]</i>.</p>
<p>Ensuite, on d=C3=A9chiffre simplement les attributs gr=C3=A2ce =C3=A0 ce=
tte cl=C3=A9 (ils ont =C3=A9t=C3=A9 chiffr=C3=A9s en AES-128 mode CBC). Ce =
qui donne, pour reprendre ton code :</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"php" style=3D"font-family:monospace;"><span style=3D"color: #000000; font-=
weight: bold;">function</span> getLinkInfos<span style=3D"color: #009900;">=
(</span><span style=3D"color: #000088;">$file_hash</span><span style=3D"col=
or: #339933;">,</span> <span style=3D"color: #000088;">$file_key</span><spa=
n style=3D"color: #009900;">)</span> <span style=3D"color: #009900;">{</spa=
n>
  <span style=3D"color: #000088;">$sequence_number</span> <span style=3D"co=
lor: #339933;">=3D</span> <span style=3D"color: #990000;">mt_rand</span><sp=
an style=3D"color: #009900;">(</span><span style=3D"color: #cc66cc;">1</spa=
n><span style=3D"color: #339933;">,</span> <span style=3D"color: #cc66cc;">=
99999999999</span><span style=3D"color: #009900;">)</span><span style=3D"co=
lor: #339933;">;</span>
  <span style=3D"color: #000088;">$ch</span> <span style=3D"color: #339933;=
">=3D</span> <span style=3D"color: #990000;">curl_init</span><span style=3D=
"color: #009900;">(</span><span style=3D"color: #0000ff;">'https://g.api.me=
ga.co.nz/cs?id=3D'</span><span style=3D"color: #339933;">.</span><span styl=
e=3D"color: #000088;">$sequence_number</span><span style=3D"color: #009900;=
">)</span><span style=3D"color: #339933;">;</span>
&nbsp;
  <span style=3D"color: #000088;">$data</span> <span style=3D"color: #33993=
3;">=3D</span> <span style=3D"color: #990000;">array</span><span style=3D"c=
olor: #009900;">(</span><span style=3D"color: #990000;">array</span><span s=
tyle=3D"color: #009900;">(</span><span style=3D"color: #0000ff;">'a'</span>=
 <span style=3D"color: #339933;">=3D&gt;</span> <span style=3D"color: #0000=
ff;">'g'</span><span style=3D"color: #339933;">,</span> <span style=3D"colo=
r: #0000ff;">'p'</span> <span style=3D"color: #339933;">=3D&gt;</span> <spa=
n style=3D"color: #000088;">$file_hash</span><span style=3D"color: #009900;=
">)</span><span style=3D"color: #009900;">)</span><span style=3D"color: #33=
9933;">;</span>
  <span style=3D"color: #000088;">$data_string</span> <span style=3D"color:=
 #339933;">=3D</span> <span style=3D"color: #990000;">json_encode</span><sp=
an style=3D"color: #009900;">(</span><span style=3D"color: #000088;">$data<=
/span><span style=3D"color: #009900;">)</span><span style=3D"color: #339933=
;">;</span>
&nbsp;
  <span style=3D"color: #990000;">curl_setopt</span><span style=3D"color: #=
009900;">(</span><span style=3D"color: #000088;">$ch</span><span style=3D"c=
olor: #339933;">,</span> CURLOPT_RETURNTRANSFER<span style=3D"color: #33993=
3;">,</span> <span style=3D"color: #cc66cc;">1</span><span style=3D"color: =
#009900;">)</span><span style=3D"color: #339933;">;</span>
  <span style=3D"color: #990000;">curl_setopt</span><span style=3D"color: #=
009900;">(</span><span style=3D"color: #000088;">$ch</span><span style=3D"c=
olor: #339933;">,</span> CURLOPT_SSL_VERIFYPEER<span style=3D"color: #33993=
3;">,</span> <span style=3D"color: #009900; font-weight: bold;">false</span=
><span style=3D"color: #009900;">)</span><span style=3D"color: #339933;">;<=
/span>
  <span style=3D"color: #990000;">curl_setopt</span><span style=3D"color: #=
009900;">(</span><span style=3D"color: #000088;">$ch</span><span style=3D"c=
olor: #339933;">,</span> CURLOPT_HTTPHEADER<span style=3D"color: #339933;">=
,</span> <span style=3D"color: #990000;">array</span><span style=3D"color: =
#009900;">(</span><span style=3D"color: #0000ff;">'Content-Type: applicatio=
n/json'</span><span style=3D"color: #009900;">)</span><span style=3D"color:=
 #009900;">)</span><span style=3D"color: #339933;">;</span>
  <span style=3D"color: #990000;">curl_setopt</span><span style=3D"color: #=
009900;">(</span><span style=3D"color: #000088;">$ch</span><span style=3D"c=
olor: #339933;">,</span> CURLOPT_VERBOSE<span style=3D"color: #339933;">,</=
span> <span style=3D"color: #cc66cc;">1</span><span style=3D"color: #009900=
;">)</span><span style=3D"color: #339933;">;</span>
  <span style=3D"color: #990000;">curl_setopt</span><span style=3D"color: #=
009900;">(</span><span style=3D"color: #000088;">$ch</span><span style=3D"c=
olor: #339933;">,</span> CURLOPT_POST<span style=3D"color: #339933;">,</spa=
n> <span style=3D"color: #009900; font-weight: bold;">true</span><span styl=
e=3D"color: #009900;">)</span><span style=3D"color: #339933;">;</span>
  <span style=3D"color: #990000;">curl_setopt</span><span style=3D"color: #=
009900;">(</span><span style=3D"color: #000088;">$ch</span><span style=3D"c=
olor: #339933;">,</span> CURLOPT_POSTFIELDS<span style=3D"color: #339933;">=
,</span> <span style=3D"color: #000088;">$data_string</span><span style=3D"=
color: #009900;">)</span><span style=3D"color: #339933;">;</span>
&nbsp;
  <span style=3D"color: #000088;">$output</span> <span style=3D"color: #339=
933;">=3D</span> <span style=3D"color: #990000;">curl_exec</span><span styl=
e=3D"color: #009900;">(</span><span style=3D"color: #000088;">$ch</span><sp=
an style=3D"color: #009900;">)</span><span style=3D"color: #339933;">;</spa=
n>
  <span style=3D"color: #000088;">$res</span> <span style=3D"color: #339933=
;">=3D</span> <span style=3D"color: #990000;">json_decode</span><span style=
=3D"color: #009900;">(</span><span style=3D"color: #000088;">$output</span>=
<span style=3D"color: #339933;">,</span> <span style=3D"color: #009900; fon=
t-weight: bold;">true</span><span style=3D"color: #009900;">)</span><span s=
tyle=3D"color: #339933;">;</span>
&nbsp;
  <span style=3D"color: #b1b100;">if</span> <span style=3D"color: #009900;"=
>(</span><span style=3D"color: #339933;">!</span><span style=3D"color: #990=
000;">isset</span><span style=3D"color: #009900;">(</span><span style=3D"co=
lor: #000088;">$res</span><span style=3D"color: #009900;">[</span><span sty=
le=3D"color: #cc66cc;">0</span><span style=3D"color: #009900;">]</span><spa=
n style=3D"color: #009900;">[</span><span style=3D"color: #0000ff;">'s'</sp=
an><span style=3D"color: #009900;">]</span><span style=3D"color: #009900;">=
)</span> <span style=3D"color: #339933;">||</span> <span style=3D"color: #3=
39933;">!</span><span style=3D"color: #990000;">isset</span><span style=3D"=
color: #009900;">(</span><span style=3D"color: #000088;">$res</span><span s=
tyle=3D"color: #009900;">[</span><span style=3D"color: #cc66cc;">0</span><s=
pan style=3D"color: #009900;">]</span><span style=3D"color: #009900;">[</sp=
an><span style=3D"color: #0000ff;">'at'</span><span style=3D"color: #009900=
;">]</span><span style=3D"color: #009900;">)</span><span style=3D"color: #0=
09900;">)</span> <span style=3D"color: #009900;">{</span>
    <span style=3D"color: #b1b100;">return</span> <span style=3D"color: #00=
9900; font-weight: bold;">false</span><span style=3D"color: #339933;">;</sp=
an>
  <span style=3D"color: #009900;">}</span> <span style=3D"color: #b1b100;">=
else</span> <span style=3D"color: #009900;">{</span>
    <span style=3D"color: #000088;">$key</span> <span style=3D"color: #3399=
33;">=3D</span> base64_to_a32<span style=3D"color: #009900;">(</span><span =
style=3D"color: #000088;">$file_key</span><span style=3D"color: #009900;">)=
</span><span style=3D"color: #339933;">;</span>
    <span style=3D"color: #000088;">$k</span> <span style=3D"color: #339933=
;">=3D</span> <span style=3D"color: #990000;">array</span><span style=3D"co=
lor: #009900;">(</span><span style=3D"color: #000088;">$key</span><span sty=
le=3D"color: #009900;">[</span><span style=3D"color: #cc66cc;">0</span><spa=
n style=3D"color: #009900;">]</span> ^ <span style=3D"color: #000088;">$key=
</span><span style=3D"color: #009900;">[</span><span style=3D"color: #cc66c=
c;">4</span><span style=3D"color: #009900;">]</span><span style=3D"color: #=
339933;">,</span> <span style=3D"color: #000088;">$key</span><span style=3D=
"color: #009900;">[</span><span style=3D"color: #cc66cc;">1</span><span sty=
le=3D"color: #009900;">]</span> ^ <span style=3D"color: #000088;">$key</spa=
n><span style=3D"color: #009900;">[</span><span style=3D"color: #cc66cc;">5=
</span><span style=3D"color: #009900;">]</span><span style=3D"color: #33993=
3;">,</span> <span style=3D"color: #000088;">$key</span><span style=3D"colo=
r: #009900;">[</span><span style=3D"color: #cc66cc;">2</span><span style=3D=
"color: #009900;">]</span> ^ <span style=3D"color: #000088;">$key</span><sp=
an style=3D"color: #009900;">[</span><span style=3D"color: #cc66cc;">6</spa=
n><span style=3D"color: #009900;">]</span><span style=3D"color: #339933;">,=
</span> <span style=3D"color: #000088;">$key</span><span style=3D"color: #0=
09900;">[</span><span style=3D"color: #cc66cc;">3</span><span style=3D"colo=
r: #009900;">]</span> ^ <span style=3D"color: #000088;">$key</span><span st=
yle=3D"color: #009900;">[</span><span style=3D"color: #cc66cc;">7</span><sp=
an style=3D"color: #009900;">]</span><span style=3D"color: #009900;">)</spa=
n><span style=3D"color: #339933;">;</span>
&nbsp;
    <span style=3D"color: #000088;">$enc_attributes</span> <span style=3D"c=
olor: #339933;">=3D</span> base64urldecode<span style=3D"color: #009900;">(=
</span><span style=3D"color: #000088;">$res</span><span style=3D"color: #00=
9900;">[</span><span style=3D"color: #cc66cc;">0</span><span style=3D"color=
: #009900;">]</span><span style=3D"color: #009900;">[</span><span style=3D"=
color: #0000ff;">'at'</span><span style=3D"color: #009900;">]</span><span s=
tyle=3D"color: #009900;">)</span><span style=3D"color: #339933;">;</span>
    <span style=3D"color: #000088;">$attributes</span> <span style=3D"color=
: #339933;">=3D</span> dec_attr<span style=3D"color: #009900;">(</span><spa=
n style=3D"color: #000088;">$enc_attributes</span><span style=3D"color: #33=
9933;">,</span> <span style=3D"color: #000088;">$k</span><span style=3D"col=
or: #009900;">)</span><span style=3D"color: #339933;">;</span>
&nbsp;
    <span style=3D"color: #b1b100;">return</span> <span style=3D"color: #99=
0000;">array</span><span style=3D"color: #009900;">(</span><span style=3D"c=
olor: #0000ff;">'size'</span> <span style=3D"color: #339933;">=3D&gt;</span=
> <span style=3D"color: #000088;">$res</span><span style=3D"color: #009900;=
">[</span><span style=3D"color: #cc66cc;">0</span><span style=3D"color: #00=
9900;">]</span><span style=3D"color: #009900;">[</span><span style=3D"color=
: #0000ff;">'s'</span><span style=3D"color: #009900;">]</span><span style=
=3D"color: #339933;">,</span> <span style=3D"color: #0000ff;">'name'</span>=
 <span style=3D"color: #339933;">=3D&gt;</span> <span style=3D"color: #0000=
88;">$attributes</span><span style=3D"color: #339933;">-&gt;</span><span st=
yle=3D"color: #004000;">n</span><span style=3D"color: #009900;">)</span><sp=
an style=3D"color: #339933;">;</span>
  <span style=3D"color: #009900;">}</span>
<span style=3D"color: #009900;">}</span></pre></td></tr></tbody></table></d=
iv>

<p>La cl=C3=A9 et les attributs du fichiers n=E2=80=99=C3=A9tant rien d=E2=
=80=99autre que des donn=C3=A9es binaires (dont la repr=C3=A9sentation ASCI=
I ne contient pas que des caract=C3=A8res affichables), ils ont =C3=A9t=C3=
=A9 encod=C3=A9s en base64 avant d=E2=80=99=C3=AAtre inclus dans la r=C3=A9=
ponse de l=E2=80=99API, d=E2=80=99o=C3=B9 la pr=C3=A9sence des fonctions <i=
>base64_to_a32()</i> et <i>base64urldecode()</i>.</p>
<p>Et voici les fonctions utilitaires utilis=C3=A9es (les m=C3=AAmes que ce=
lles de l=E2=80=99article, mais impl=C3=A9ment=C3=A9es en PHP) :</p>

<div class=3D"wp_syntax"><table><tbody><tr><td class=3D"code"><pre class=3D=
"php" style=3D"font-family:monospace;"><span style=3D"color: #000000; font-=
weight: bold;">function</span> a32_to_str<span style=3D"color: #009900;">(<=
/span><span style=3D"color: #000088;">$hex</span><span style=3D"color: #009=
900;">)</span> <span style=3D"color: #009900;">{</span>
  <span style=3D"color: #b1b100;">return</span> <span style=3D"color: #9900=
00;">call_user_func_array</span><span style=3D"color: #009900;">(</span><sp=
an style=3D"color: #0000ff;">"pack"</span><span style=3D"color: #339933;">,=
</span> <span style=3D"color: #990000;">array_merge</span><span style=3D"co=
lor: #009900;">(</span><span style=3D"color: #990000;">array</span><span st=
yle=3D"color: #009900;">(</span><span style=3D"color: #0000ff;">"N*"</span>=
<span style=3D"color: #009900;">)</span><span style=3D"color: #339933;">,</=
span> <span style=3D"color: #000088;">$hex</span><span style=3D"color: #009=
900;">)</span><span style=3D"color: #009900;">)</span><span style=3D"color:=
 #339933;">;</span>
<span style=3D"color: #009900;">}</span>
&nbsp;
<span style=3D"color: #000000; font-weight: bold;">function</span> str_to_a=
32<span style=3D"color: #009900;">(</span><span style=3D"color: #000088;">$=
b</span><span style=3D"color: #009900;">)</span> <span style=3D"color: #009=
900;">{</span>
  <span style=3D"color: #b1b100;">return</span> <span style=3D"color: #9900=
00;">array_values</span><span style=3D"color: #009900;">(</span><span style=
=3D"color: #990000;">unpack</span><span style=3D"color: #009900;">(</span><=
span style=3D"color: #0000ff;">'N*'</span><span style=3D"color: #339933;">,=
</span> <span style=3D"color: #000088;">$b</span><span style=3D"color: #009=
900;">)</span><span style=3D"color: #009900;">)</span><span style=3D"color:=
 #339933;">;</span>
<span style=3D"color: #009900;">}</span>  =20
&nbsp;
<span style=3D"color: #000000; font-weight: bold;">function</span> base64ur=
ldecode<span style=3D"color: #009900;">(</span><span style=3D"color: #00008=
8;">$data</span><span style=3D"color: #009900;">)</span> <span style=3D"col=
or: #009900;">{</span>
  <span style=3D"color: #000088;">$data</span> <span style=3D"color: #33993=
3;">.=3D</span> <span style=3D"color: #990000;">substr</span><span style=3D=
"color: #009900;">(</span><span style=3D"color: #0000ff;">'=3D=3D'</span><s=
pan style=3D"color: #339933;">,</span> <span style=3D"color: #009900;">(</s=
pan><span style=3D"color: #cc66cc;">2</span> <span style=3D"color: #339933;=
">-</span> <span style=3D"color: #990000;">strlen</span><span style=3D"colo=
r: #009900;">(</span><span style=3D"color: #000088;">$data</span><span styl=
e=3D"color: #009900;">)</span> <span style=3D"color: #339933;">*</span> <sp=
an style=3D"color: #cc66cc;">3</span><span style=3D"color: #009900;">)</spa=
n> <span style=3D"color: #339933;">%</span> <span style=3D"color: #cc66cc;"=
>4</span><span style=3D"color: #009900;">)</span><span style=3D"color: #339=
933;">;</span>
  <span style=3D"color: #000088;">$data</span> <span style=3D"color: #33993=
3;">=3D</span> <span style=3D"color: #990000;">str_replace</span><span styl=
e=3D"color: #009900;">(</span><span style=3D"color: #990000;">array</span><=
span style=3D"color: #009900;">(</span><span style=3D"color: #0000ff;">'-'<=
/span><span style=3D"color: #339933;">,</span> <span style=3D"color: #0000f=
f;">'_'</span><span style=3D"color: #339933;">,</span> <span style=3D"color=
: #0000ff;">','</span><span style=3D"color: #009900;">)</span><span style=
=3D"color: #339933;">,</span> <span style=3D"color: #990000;">array</span><=
span style=3D"color: #009900;">(</span><span style=3D"color: #0000ff;">'+'<=
/span><span style=3D"color: #339933;">,</span> <span style=3D"color: #0000f=
f;">'/'</span><span style=3D"color: #339933;">,</span> <span style=3D"color=
: #0000ff;">''</span><span style=3D"color: #009900;">)</span><span style=3D=
"color: #339933;">,</span> <span style=3D"color: #000088;">$data</span><spa=
n style=3D"color: #009900;">)</span><span style=3D"color: #339933;">;</span=
>
  <span style=3D"color: #b1b100;">return</span> <span style=3D"color: #9900=
00;">base64_decode</span><span style=3D"color: #009900;">(</span><span styl=
e=3D"color: #000088;">$data</span><span style=3D"color: #009900;">)</span><=
span style=3D"color: #339933;">;</span>
<span style=3D"color: #009900;">}</span>
&nbsp;
<span style=3D"color: #000000; font-weight: bold;">function</span> base64_t=
o_a32<span style=3D"color: #009900;">(</span><span style=3D"color: #000088;=
">$s</span><span style=3D"color: #009900;">)</span> <span style=3D"color: #=
009900;">{</span>
  <span style=3D"color: #b1b100;">return</span> str_to_a32<span style=3D"co=
lor: #009900;">(</span>base64urldecode<span style=3D"color: #009900;">(</sp=
an><span style=3D"color: #000088;">$s</span><span style=3D"color: #009900;"=
>)</span><span style=3D"color: #009900;">)</span><span style=3D"color: #339=
933;">;</span>
<span style=3D"color: #009900;">}</span>=20
&nbsp;
<span style=3D"color: #000000; font-weight: bold;">function</span> dec_attr=
<span style=3D"color: #009900;">(</span><span style=3D"color: #000088;">$at=
tr</span><span style=3D"color: #339933;">,</span> <span style=3D"color: #00=
0088;">$key</span><span style=3D"color: #009900;">)</span> <span style=3D"c=
olor: #009900;">{</span>
  <span style=3D"color: #000088;">$b</span> <span style=3D"color: #339933;"=
>=3D</span> <span style=3D"color: #990000;">trim</span><span style=3D"color=
: #009900;">(</span>aes128_cbc_decrypt<span style=3D"color: #009900;">(</sp=
an><span style=3D"color: #000088;">$attr</span><span style=3D"color: #33993=
3;">,</span> a32_to_str<span style=3D"color: #009900;">(</span><span style=
=3D"color: #000088;">$key</span><span style=3D"color: #009900;">)</span><sp=
an style=3D"color: #009900;">)</span><span style=3D"color: #009900;">)</spa=
n><span style=3D"color: #339933;">;</span>
  <span style=3D"color: #b1b100;">if</span> <span style=3D"color: #009900;"=
>(</span><span style=3D"color: #990000;">substr</span><span style=3D"color:=
 #009900;">(</span><span style=3D"color: #000088;">$b</span><span style=3D"=
color: #339933;">,</span> <span style=3D"color: #cc66cc;">0</span><span sty=
le=3D"color: #339933;">,</span> <span style=3D"color: #cc66cc;">6</span><sp=
an style=3D"color: #009900;">)</span> <span style=3D"color: #339933;">!=3D<=
/span> <span style=3D"color: #0000ff;">'MEGA{"'</span><span style=3D"color:=
 #009900;">)</span> <span style=3D"color: #b1b100;">return</span> <span sty=
le=3D"color: #009900; font-weight: bold;">false</span><span style=3D"color:=
 #339933;">;</span>
  <span style=3D"color: #b1b100;">return</span> <span style=3D"color: #9900=
00;">json_decode</span><span style=3D"color: #009900;">(</span><span style=
=3D"color: #990000;">substr</span><span style=3D"color: #009900;">(</span><=
span style=3D"color: #000088;">$b</span><span style=3D"color: #339933;">,</=
span> <span style=3D"color: #cc66cc;">4</span><span style=3D"color: #009900=
;">)</span><span style=3D"color: #009900;">)</span><span style=3D"color: #3=
39933;">;</span>
<span style=3D"color: #009900;">}</span>=20
&nbsp;
<span style=3D"color: #000000; font-weight: bold;">function</span> aes128_c=
bc_decrypt<span style=3D"color: #009900;">(</span><span style=3D"color: #00=
0088;">$data</span><span style=3D"color: #339933;">,</span> <span style=3D"=
color: #000088;">$key</span><span style=3D"color: #009900;">)</span> <span =
style=3D"color: #009900;">{</span>
  <span style=3D"color: #b1b100;">return</span> <span style=3D"color: #9900=
00;">mcrypt_decrypt</span><span style=3D"color: #009900;">(</span>
    MCRYPT_RIJNDAEL_128<span style=3D"color: #339933;">,</span>
    <span style=3D"color: #000088;">$key</span><span style=3D"color: #33993=
3;">,</span> <span style=3D"color: #000088;">$data</span><span style=3D"col=
or: #339933;">,</span>
    MCRYPT_MODE_CBC<span style=3D"color: #339933;">,</span>
    <span style=3D"color: #0000ff;">"<span style=3D"color: #660099; font-we=
ight: bold;">\0</span><span style=3D"color: #660099; font-weight: bold;">\0=
</span><span style=3D"color: #660099; font-weight: bold;">\0</span><span st=
yle=3D"color: #660099; font-weight: bold;">\0</span><span style=3D"color: #=
660099; font-weight: bold;">\0</span><span style=3D"color: #660099; font-we=
ight: bold;">\0</span><span style=3D"color: #660099; font-weight: bold;">\0=
</span><span style=3D"color: #660099; font-weight: bold;">\0</span><span st=
yle=3D"color: #660099; font-weight: bold;">\0</span><span style=3D"color: #=
660099; font-weight: bold;">\0</span><span style=3D"color: #660099; font-we=
ight: bold;">\0</span><span style=3D"color: #660099; font-weight: bold;">\0=
</span><span style=3D"color: #660099; font-weight: bold;">\0</span><span st=
yle=3D"color: #660099; font-weight: bold;">\0</span><span style=3D"color: #=
660099; font-weight: bold;">\0</span><span style=3D"color: #660099; font-we=
ight: bold;">\0</span>"</span>
  <span style=3D"color: #009900;">)</span><span style=3D"color: #339933;">;=
</span>
<span style=3D"color: #009900;">}</span></pre></td></tr></tbody></table></d=
iv>

<p>On obtient bien la taille et le nom du fichier <img src=3D"https://web.a=
rchive.org/web/20230601152626im_/http://julien-marchand.fr/blog/wp-includes=
/images/smilies/icon_smile.gif" alt=3D":-)" class=3D"wp-smiley"> </p>
<pre>array(2) {
  ["size"]=3D&gt;
  int(6468441)
  ["name"]=3D&gt;
  string(25) "Darktek-Krize Kardiak.mp3"
}</pre>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D11#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment even depth-5" id=3D"li-comment-12">
		<article id=3D"comment-12" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/88a4ba98f92826066be642aeea2f56d5?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">AoEmaster </cite><a href=3D"https://web.archive.org/web/=
20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-ex=
amples/#comment-12"><time datetime=3D"2013-01-29T18:55:00+00:00">January 29=
, 2013 at 6:55 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>OH MON DIEU MERCI !!!!!!!!!!!<br>
Ca fonctionne enfin !!! des jours que je me bat. Je n=E2=80=99aurais jamais=
 r=C3=A9ussi seul.</p>
<p>Par contre, comment bien utiliser le sequence number ?</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li>
	<li class=3D"comment byuser comment-author-julienm bypostauthor odd alt de=
pth-5" id=3D"li-comment-16">
		<article id=3D"comment-16" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Julien Marchand <span> Post author</span></cite><a href=
=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.fr/bl=
og/using-mega-api-with-python-examples/#comment-16"><time datetime=3D"2013-=
01-29T22:10:39+00:00">January 29, 2013 at 10:10 pm</time></a>			</header><!=
-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>De rien <img src=3D"https://web.archive.org/web/20230601152626im_/ht=
tp://julien-marchand.fr/blog/wp-includes/images/smilies/icon_smile.gif" alt=
=3D":)" class=3D"wp-smiley">  Le sequence number doit =C3=AAtre initialis=
=C3=A9 al=C3=A9atoirement (mega.co.nz l=E2=80=99initialise entre 0 et 0xFFF=
FFFFF) et incr=C3=A9ment=C3=A9 =C3=A0 chaque requ=C3=AAte. Plus pr=C3=A9cis=
=C3=A9ment, =C3=A0 chaque requ=C3=AAte *diff=C3=A9rente* : je ne fais ici a=
ucune reprise sur erreur, mais si tu renvoies une requ=C3=AAte qui a =C3=A9=
chou=C3=A9 (code d=E2=80=99erreur EAGAIN de l=E2=80=99API), il faut garder =
le m=C3=AAme sequence number.</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li>
</ol>
</li>
</ol>
</li>
	<li class=3D"comment even depth-3" id=3D"li-comment-845">
		<article id=3D"comment-845" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/12ef0e0d0048a3ff2da6e09879faad15?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Robin Houtevelts </cite><a href=3D"https://web.archive.o=
rg/web/20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-py=
thon-examples/#comment-845"><time datetime=3D"2013-03-11T21:10:02+00:00">Ma=
rch 11, 2013 at 9:10 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Loving it!</p>
<p>Thanks for not only providing the code but also a great explanation!<br>
You sir, are AWESOME!</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D845#respond">Reply</a> <span>=E2=86=93</span>			</div><!-=
- .reply -->
		</article><!-- #comment-## -->
	</li>
</ol>
</li>
</ol>
</li>
	<li class=3D"comment odd alt thread-even depth-1" id=3D"li-comment-4">
		<article id=3D"comment-4" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/d5caedac7dc0eef89f007eafdfbbbc45?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn"><a href=3D"https://web.archive.org/web/20230601152626/ht=
tp://b1ueprint.com/" rel=3D"external nofollow" class=3D"url">Baron</a> </ci=
te><a href=3D"https://web.archive.org/web/20230601152626/http://julien-marc=
hand.fr/blog/using-mega-api-with-python-examples/#comment-4"><time datetime=
=3D"2013-01-29T11:45:31+00:00">January 29, 2013 at 11:45 am</time></a>			</=
header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>You need to pad out the password with null characters to make its le=
ngth a multiple of 4.</p>
<p>  password =3D password.ljust(int(math.ceil(len(password) / 4.0)) * 4,=
=E2=80=9D)<br>
  password_aes =3D prepare_key(str_to_a32(password))</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D4#respond">Reply</a> <span>=E2=86=93</span>			</div><!-- =
.reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment even depth-2" id=3D"li-comment-5">
		<article id=3D"comment-5" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/d5caedac7dc0eef89f007eafdfbbbc45?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn"><a href=3D"https://web.archive.org/web/20230601152626/ht=
tp://b1ueprint.com/" rel=3D"external nofollow" class=3D"url">Baron</a> </ci=
te><a href=3D"https://web.archive.org/web/20230601152626/http://julien-marc=
hand.fr/blog/using-mega-api-with-python-examples/#comment-5"><time datetime=
=3D"2013-01-29T11:47:07+00:00">January 29, 2013 at 11:47 am</time></a>			</=
header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>The formatting has stripped out some characters<br>
password =3D password.ljust(int(math.ceil(len(password) / 4.0)) * 4,=E2=80=
=9D#backslash zero#=E2=80=9D)</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D5#respond">Reply</a> <span>=E2=86=93</span>			</div><!-- =
.reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment byuser comment-author-julienm bypostauthor odd alt de=
pth-3" id=3D"li-comment-6">
		<article id=3D"comment-6" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Julien Marchand <span> Post author</span></cite><a href=
=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.fr/bl=
og/using-mega-api-with-python-examples/#comment-6"><time datetime=3D"2013-0=
1-29T12:45:40+00:00">January 29, 2013 at 12:45 pm</time></a>			</header><!-=
- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Thanks! My password length is already a multiple of 4, so I didn=E2=
=80=99t notice that=E2=80=A6 <img src=3D"https://web.archive.org/web/202306=
01152626im_/http://julien-marchand.fr/blog/wp-includes/images/smilies/icon_=
smile.gif" alt=3D":-)" class=3D"wp-smiley">  By the way, we also need it fo=
r the email. In fact, we need it for any string we pass to str_to_a32=E2=80=
=A6 so I added the padding there.</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D6#respond">Reply</a> <span>=E2=86=93</span>			</div><!-- =
.reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment even depth-4" id=3D"li-comment-21">
		<article id=3D"comment-21" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/d5caedac7dc0eef89f007eafdfbbbc45?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn"><a href=3D"https://web.archive.org/web/20230601152626/ht=
tp://b1ueprint.com/" rel=3D"external nofollow" class=3D"url">Baron</a> </ci=
te><a href=3D"https://web.archive.org/web/20230601152626/http://julien-marc=
hand.fr/blog/using-mega-api-with-python-examples/#comment-21"><time datetim=
e=3D"2013-01-31T14:26:56+00:00">January 31, 2013 at 2:26 pm</time></a>			</=
header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Cheers <img src=3D"https://web.archive.org/web/20230601152626im_/htt=
p://julien-marchand.fr/blog/wp-includes/images/smilies/icon_smile.gif" alt=
=3D":-)" class=3D"wp-smiley"> </p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D21#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
	<li class=3D"pingback odd alt thread-odd thread-alt depth-1" id=3D"comment=
-9">
		<p>Pingback: <a href=3D"https://web.archive.org/web/20230601152626/http:/=
/julien-marchand.fr/blog/megafs-a-fuse-filesystem-wrapper-for-mega-part-1-l=
isting-files/" rel=3D"external nofollow" class=3D"url">MegaFS, a FUSE files=
ystem wrapper for Mega. Part 1: Listing files. | Julien Marchand =E2=80=A2 =
Dev blog</a> </p>
	</li>
	<li class=3D"comment even thread-even depth-1" id=3D"li-comment-13">
		<article id=3D"comment-13" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/43c2e0b983999af318cd65199b72cab5?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">foobar </cite><a href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/#comment-13"><time datetime=3D"2013-01-29T19:55:59+00:00">January 29, 2=
013 at 7:55 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Files links can be shared to non-mega users via links with an embedd=
ed encryption key. Does the API support these non-user accounts? Are these =
the =E2=80=9Cephemeral accounts=E2=80=9D specified in the API docs? If so, =
how would your example be modified since those users don=E2=80=99t have use=
r/pass to authenticate with.</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D13#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment byuser comment-author-julienm bypostauthor odd alt de=
pth-2" id=3D"li-comment-15">
		<article id=3D"comment-15" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Julien Marchand <span> Post author</span></cite><a href=
=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.fr/bl=
og/using-mega-api-with-python-examples/#comment-15"><time datetime=3D"2013-=
01-29T22:08:55+00:00">January 29, 2013 at 10:08 pm</time></a>			</header><!=
-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>You are the second one to ask this question, so I just wrote a littl=
e article to explain that: <a href=3D"https://web.archive.org/web/202306011=
52626/http://julien-marchand.fr/blog/using-the-mega-api-how-to-download-a-p=
ublic-file-or-a-file-you-know-the-key-without-logging-in/" rel=3D"nofollow"=
>http://julien-marchand.fr/blog/using-the-mega-api-how-to-download-a-public=
-file-or-a-file-you-know-the-key-without-logging-in/</a></p>
<p>It=E2=80=99s just a matter of a parameter name in the API <i>g</i> metho=
d <img src=3D"https://web.archive.org/web/20230601152626im_/http://julien-m=
archand.fr/blog/wp-includes/images/smilies/icon_smile.gif" alt=3D":)" class=
=3D"wp-smiley">  And it doesn=E2=80=99t involve the ephemeral accounts ment=
ionned in the API docs, you don=E2=80=99t have to have an account at all (a=
nd no account is created for that).</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D15#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	</li>
</ol>
</li>
	<li class=3D"pingback even thread-odd thread-alt depth-1" id=3D"comment-14=
">
		<p>Pingback: <a href=3D"https://web.archive.org/web/20230601152626/http:/=
/julien-marchand.fr/blog/using-the-mega-api-how-to-download-a-public-file-o=
r-a-file-you-know-the-key-without-logging-in/" rel=3D"external nofollow" cl=
ass=3D"url">Using the Mega API: how to download a public file (or a file yo=
u know the key), without logging in | Julien Marchand =E2=80=A2 Dev blog</a=
> </p>
	</li>
	<li class=3D"comment odd alt thread-even depth-1" id=3D"li-comment-17">
		<article id=3D"comment-17" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/43c2e0b983999af318cd65199b72cab5?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">foobar </cite><a href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/#comment-17"><time datetime=3D"2013-01-30T01:26:30+00:00">January 30, 2=
013 at 1:26 am</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Thank you for your previous reply.</p>
<p>I noticed that you use urlopen().read() directly on the dl_url which dow=
nloads the entire file at once. Is there a reason you didn=E2=80=99t downlo=
ad the chunks separately?</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D17#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment byuser comment-author-julienm bypostauthor even depth=
-2" id=3D"li-comment-66">
		<article id=3D"comment-66" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Julien Marchand <span> Post author</span></cite><a href=
=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.fr/bl=
og/using-mega-api-with-python-examples/#comment-66"><time datetime=3D"2013-=
02-06T00:33:08+00:00">February 6, 2013 at 12:33 am</time></a>			</header><!=
-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Sorry for the late answer. I=E2=80=99m actually doing <i>infile =3D =
urllib.urlopen(dl_url)</i> and then <i>chunk =3D infile.read(chunk_size)</i=
>, so I=E2=80=99m reading the file chunk by chunk (I have to do that in ord=
er to compute the meta-MAC, because it=E2=80=99s based on the chunk MACs. I=
 could also download the whole file at once and then read it chunk by chunk=
 to compute the meta-MAC, but it=E2=80=99s just easier to directly download=
 it chunk by chunk).</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D66#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	</li>
</ol>
</li>
	<li class=3D"comment odd alt thread-odd thread-alt depth-1" id=3D"li-comme=
nt-31">
		<article id=3D"comment-31" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/62ae43c772b97e3d6a99987df6c9e186?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">wink </cite><a href=3D"https://web.archive.org/web/20230=
601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-example=
s/#comment-31"><time datetime=3D"2013-02-01T16:07:08+00:00">February 1, 201=
3 at 4:07 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Bonjour Julien,</p>
<p>J=E2=80=99aimerai avoir, si posible une traduction des fonctions utilita=
ires que tu as fait en commentaire ci-dessous mais en langage Java. Je n=E2=
=80=99ai pas un niveau suffisant en php ou python pour lire/comprendre ces =
code.</p>
<p>Merci d=E2=80=99avance pour ton aide.</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D31#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment byuser comment-author-julienm bypostauthor even depth=
-2" id=3D"li-comment-67">
		<article id=3D"comment-67" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Julien Marchand <span> Post author</span></cite><a href=
=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.fr/bl=
og/using-mega-api-with-python-examples/#comment-67"><time datetime=3D"2013-=
02-06T00:34:22+00:00">February 6, 2013 at 12:34 am</time></a>			</header><!=
-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Je vais essayer de trouver le temps d=E2=80=99en faire une version J=
ava dans pas longtemps <img src=3D"https://web.archive.org/web/202306011526=
26im_/http://julien-marchand.fr/blog/wp-includes/images/smilies/icon_smile.=
gif" alt=3D":)" class=3D"wp-smiley"> </p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D67#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	</li>
</ol>
</li>
	<li class=3D"comment odd alt thread-even depth-1" id=3D"li-comment-33">
		<article id=3D"comment-33" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/8338639e5a3c21955d414ac4b4943b6d?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">j-muller </cite><a href=3D"https://web.archive.org/web/2=
0230601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-exa=
mples/#comment-33"><time datetime=3D"2013-02-01T21:05:42+00:00">February 1,=
 2013 at 9:05 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Bonjour Julien,</p>
<p>Ton post est tr=C3=A8s instructif. J=E2=80=99aimerais toutefois savoir s=
i il y a une m=C3=A9thode de l=E2=80=99API (je n=E2=80=99en ai pas trouv=C3=
=A9 personnellement) qui me permettrait de r=C3=A9cup=C3=A9rer la clef d=E2=
=80=99un fichier donn=C3=A9 (la clef qui est dans l=E2=80=99URL lorsqu=E2=
=80=99on t=C3=A9l=C3=A9charge un fichier).<br>
Si il n=E2=80=99existe pas de m=C3=A9thode, connais-tu un moyen de la d=C3=
=A9crypter ? </p>
<p>Merci d=E2=80=99avance. <img src=3D"https://web.archive.org/web/20230601=
152626im_/http://julien-marchand.fr/blog/wp-includes/images/smilies/icon_sm=
ile.gif" alt=3D":-)" class=3D"wp-smiley"> </p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D33#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment byuser comment-author-julienm bypostauthor even depth=
-2" id=3D"li-comment-65">
		<article id=3D"comment-65" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Julien Marchand <span> Post author</span></cite><a href=
=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.fr/bl=
og/using-mega-api-with-python-examples/#comment-65"><time datetime=3D"2013-=
02-06T00:29:21+00:00">February 6, 2013 at 12:29 am</time></a>			</header><!=
-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Hello !</p>
<p>Il n=E2=80=99en existe pas <img src=3D"https://web.archive.org/web/20230=
601152626im_/http://julien-marchand.fr/blog/wp-includes/images/smilies/icon=
_smile.gif" alt=3D":-)" class=3D"wp-smiley">  L=E2=80=99int=C3=A9r=C3=AAt d=
e Mega est justement que tous tes fichiers sont chiffr=C3=A9s, donc =C3=A0 =
moins que tu ne d=C3=A9cides toi m=C3=AAme de les publier et de partager le=
ur cl=C3=A9, personne ne pourra le t=C3=A9l=C3=A9charger (ou plus exactemen=
t, le d=C3=A9chiffrer).</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D65#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	</li>
</ol>
</li>
	<li class=3D"comment odd alt thread-odd thread-alt depth-1" id=3D"li-comme=
nt-41">
		<article id=3D"comment-41" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/fe8cf00ed069f493201587d6094354ba?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Jos=C3=A9 Iba=C3=B1ez </cite><a href=3D"https://web.arch=
ive.org/web/20230601152626/http://julien-marchand.fr/blog/using-mega-api-wi=
th-python-examples/#comment-41"><time datetime=3D"2013-02-02T22:03:37+00:00=
">February 2, 2013 at 10:03 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Great job! Thanks for share</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D41#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	</li>
	<li class=3D"pingback even thread-even depth-1" id=3D"comment-43">
		<p>Pingback: <a href=3D"https://web.archive.org/web/20230601152626/http:/=
/julien-marchand.fr/blog/megafs-a-fuse-filesystem-wrapper-for-mega-part-2-r=
eading-and-writing-files/" rel=3D"external nofollow" class=3D"url">MegaFS, =
a FUSE filesystem wrapper for Mega. Part 2: Reading and writing files. | Ju=
lien Marchand =E2=80=A2 Dev blog</a> </p>
	</li>
	<li class=3D"comment odd alt thread-odd thread-alt depth-1" id=3D"li-comme=
nt-61">
		<article id=3D"comment-61" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/3bb45fad7d5f8e39745c1a80bb947a52?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">George </cite><a href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/#comment-61"><time datetime=3D"2013-02-05T17:21:03+00:00">February 5, 2=
013 at 5:21 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Hi,</p>
<p>Has anyone manged a simple upload example using PHP rather than Python?<=
/p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D61#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment byuser comment-author-julienm bypostauthor even depth=
-2" id=3D"li-comment-64">
		<article id=3D"comment-64" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Julien Marchand <span> Post author</span></cite><a href=
=3D"https://web.archive.org/web/20230601152626/http://julien-marchand.fr/bl=
og/using-mega-api-with-python-examples/#comment-64"><time datetime=3D"2013-=
02-06T00:27:18+00:00">February 6, 2013 at 12:27 am</time></a>			</header><!=
-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Since I=E2=80=99m new to Python, I=E2=80=99ve actually written all t=
he examples of the blog in PHP first to get more familiar with the API. I=
=E2=80=99ll clean them up and post them by the end of tomorrow <img src=3D"=
https://web.archive.org/web/20230601152626im_/http://julien-marchand.fr/blo=
g/wp-includes/images/smilies/icon_smile.gif" alt=3D":-)" class=3D"wp-smiley=
"> </p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D64#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment odd alt depth-3" id=3D"li-comment-84">
		<article id=3D"comment-84" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/385fcade3c3ef825e89533e1e3ee0323?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">DinoEO </cite><a href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/#comment-84"><time datetime=3D"2013-02-07T18:39:16+00:00">February 7, 2=
013 at 6:39 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Ok cool merci pour ton travail</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D84#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	</li>
	<li class=3D"comment even depth-3" id=3D"li-comment-86">
		<article id=3D"comment-86" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/b9ca5c2e89e987fb809da1511da8806c?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Chris </cite><a href=3D"https://web.archive.org/web/2023=
0601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-exampl=
es/#comment-86"><time datetime=3D"2013-02-08T12:40:08+00:00">February 8, 20=
13 at 12:40 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Je suis tr=C3=A8s interress=C3=A9 aussi par ton dev PHP si tu veux b=
ien le mettre =C3=A0 dispo (et du coup met un syst=C3=A8me de donation sur =
ton blog=E2=80=A6)</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D86#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment odd alt depth-4" id=3D"li-comment-90">
		<article id=3D"comment-90" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/385fcade3c3ef825e89533e1e3ee0323?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">DinoEO </cite><a href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/#comment-90"><time datetime=3D"2013-02-08T22:32:36+00:00">February 8, 2=
013 at 10:32 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Sa serait cool si a chaque poste d=C3=A9j=C3=A0 fait </p>
<p>d=E2=80=99ajouter les source PHP</p>
<p>comme sa on aurais la version Python et PHP</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D90#respond">Reply</a> <span>=E2=86=93</span>			</div><!--=
 .reply -->
		</article><!-- #comment-## -->
	</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
	<li class=3D"pingback even thread-even depth-1" id=3D"comment-76">
		<p>Pingback: <a href=3D"https://web.archive.org/web/20230601152626/http:/=
/julien-marchand.fr/blog/using-the-mega-api-how-to-upload-a-file-anonymousl=
y-without-logging-in/" rel=3D"external nofollow" class=3D"url">Using the Me=
ga API: how to upload a file anonymously (without logging in). | Julien Mar=
chand =E2=80=A2 Dev blog</a> </p>
	</li>
	<li class=3D"comment odd alt thread-odd thread-alt depth-1" id=3D"li-comme=
nt-135">
		<article id=3D"comment-135" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/e8798918d0a08ab01de4090e304ece40?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Pierrick HALGAND </cite><a href=3D"https://web.archive.o=
rg/web/20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-py=
thon-examples/#comment-135"><time datetime=3D"2013-02-15T09:05:32+00:00">Fe=
bruary 15, 2013 at 9:05 am</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Bonjour,</p>
<p>Je d=C3=A9couvre cet article avec beaucoup d=E2=80=99attention m=E2=80=
=99int=C3=A9ressant actuellement =C3=A0 l=E2=80=99API Mega.<br>
Tout d=E2=80=99abord merci beaucoup pour toutes ces informations et tout ce=
s exemples de code.</p>
<p>Pour ma part je d=C3=A9veloppe plut=C3=B4t en PHP n=E2=80=99ayant malheu=
reusement que tr=C3=A8s peu utilis=C3=A9 Perl.<br>
J=E2=80=99essaie donc actuellement de porter les exemples Perl en PHP, mais=
 je suis actuellement confront=C3=A9 =C3=A0 un premier probl=C3=A8me, je ne=
 sais traduire en PHP le statement : for _ in xrange(0=C3=9710000) et en pa=
rticulier =C3=A0 quoi correspond ce caract=C3=A8re =E2=80=9C_=E2=80=9D ?</p=
>
<p>Par avance merci pour votre r=C3=A9ponse.</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D135#respond">Reply</a> <span>=E2=86=93</span>			</div><!-=
- .reply -->
		</article><!-- #comment-## -->
	</li>
	<li class=3D"pingback even thread-even depth-1" id=3D"comment-155">
		<p>Pingback: <a href=3D"https://web.archive.org/web/20230601152626/http:/=
/julien-marchand.fr/blog/using-the-mega-api-with-php-examples/" rel=3D"exte=
rnal nofollow" class=3D"url">Using the Mega API, with PHP examples! | Julie=
n Marchand =E2=80=A2 Dev blog</a> </p>
	</li>
	<li class=3D"comment odd alt thread-odd thread-alt depth-1" id=3D"li-comme=
nt-206">
		<article id=3D"comment-206" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/7d7ea926d9c8f659a63ec4f7db0a4e59?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">uten </cite><a href=3D"https://web.archive.org/web/20230=
601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-example=
s/#comment-206"><time datetime=3D"2013-02-20T23:32:01+00:00">February 20, 2=
013 at 11:32 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Nice work!<br>
I=E2=80=99m really looking forward to read your articles about fuse and meg=
a. I might even try to find some time to learn Pyton so I can follow the co=
de and test it properly.</p>
<p>To anyone trying out the code. Copying the code gave some easy to find h=
tml formating errors like &lt;, but also a harder to find $amp;sid inside a=
 string witch is valid code but gives an ( unhandled ..;o ) error from api_=
req( =E2=80=A6 ). I got -15 &lt;&gt; returned rather than the expected data=
.</p>
<p>Thanks for your time and effort on this Julien.<br>
Best regards<br>
Uten</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D206#respond">Reply</a> <span>=E2=86=93</span>			</div><!-=
- .reply -->
		</article><!-- #comment-## -->
	</li>
	<li class=3D"comment even thread-even depth-1" id=3D"li-comment-221">
		<article id=3D"comment-221" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/ad301912e7de321c6ecbfb86cf552589?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">Nima </cite><a href=3D"https://web.archive.org/web/20230=
601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-example=
s/#comment-221"><time datetime=3D"2013-02-21T16:45:37+00:00">February 21, 2=
013 at 4:45 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>hello<br>
thanks for this article!! it helped me a lot!<br>
I trying to write an uploader in php. my only problem is encryption.<br>
I=E2=80=99m using this php class:<br>
<a href=3D"https://web.archive.org/web/20230601152626/http://www.phpclasses=
.org/package/4238-PHP-Encrypt-and-decrypt-data-with-AES-in-pure-PHP.html" r=
el=3D"nofollow">http://www.phpclasses.org/package/4238-PHP-Encrypt-and-decr=
ypt-data-with-AES-in-pure-PHP.html</a><br>
but it=E2=80=99s not working!<br>
what is cbc_mode? I know nothing about AES. can you help me plz?!!?</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D221#respond">Reply</a> <span>=E2=86=93</span>			</div><!-=
- .reply -->
		</article><!-- #comment-## -->
	</li>
	<li class=3D"comment odd alt thread-odd thread-alt depth-1" id=3D"li-comme=
nt-439">
		<article id=3D"comment-439" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/0d02f30bf8f58f6344ea19fd8e26ad6b?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">ibk </cite><a href=3D"https://web.archive.org/web/202306=
01152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examples=
/#comment-439"><time datetime=3D"2013-03-05T00:20:59+00:00">March 5, 2013 a=
t 12:20 am</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Hi,<br>
I can=E2=80=99t find crypto.js in <a href=3D"https://web.archive.org/web/20=
230601152626/http://g.static.mega.co.nz/crypto.js" rel=3D"nofollow">http://=
g.static.mega.co.nz/crypto.js</a></p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D439#respond">Reply</a> <span>=E2=86=93</span>			</div><!-=
- .reply -->
		</article><!-- #comment-## -->
	<ol class=3D"children">
	<li class=3D"comment even depth-2" id=3D"li-comment-779">
		<article id=3D"comment-779" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/4b2cda783136bc4975dbc228f63bdba3?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">geomorilllo </cite><a href=3D"https://web.archive.org/we=
b/20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-=
examples/#comment-779"><time datetime=3D"2013-03-11T00:23:04+00:00">March 1=
1, 2013 at 12:23 am</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>I think the new address is <a href=3D"https://web.archive.org/web/20=
230601152626/https://eu.static.mega.co.nz/crypto_15.js" rel=3D"nofollow">ht=
tps://eu.static.mega.co.nz/crypto_15.js</a></p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D779#respond">Reply</a> <span>=E2=86=93</span>			</div><!-=
- .reply -->
		</article><!-- #comment-## -->
	</li>
</ol>
</li>
	<li class=3D"comment odd alt thread-even depth-1" id=3D"li-comment-2072">
		<article id=3D"comment-2072" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://1.gravatar.com/avatar/3aee3478d65182bdde7a9420326253a8?s=3D44&amp;d=3Dht=
tp%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">nlaa </cite><a href=3D"https://web.archive.org/web/20230=
601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-example=
s/#comment-2072"><time datetime=3D"2013-03-19T19:02:46+00:00">March 19, 201=
3 at 7:02 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>I tried some fast servers to upload from to mega, it takes very long=
=E2=80=A6 did you know about it?</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D2072#respond">Reply</a> <span>=E2=86=93</span>			</div><!=
-- .reply -->
		</article><!-- #comment-## -->
	</li>
	<li class=3D"comment even thread-odd thread-alt depth-1" id=3D"li-comment-=
3901">
		<article id=3D"comment-3901" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/0bd77f2af46c5d8930d6d91e7f18e76c?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn"><a href=3D"https://web.archive.org/web/20230601152626/ht=
tp://www.bumxu.com/" rel=3D"external nofollow" class=3D"url">Juande</a> </c=
ite><a href=3D"https://web.archive.org/web/20230601152626/http://julien-mar=
chand.fr/blog/using-mega-api-with-python-examples/#comment-3901"><time date=
time=3D"2013-04-02T22:33:43+00:00">April 2, 2013 at 10:33 pm</time></a>			<=
/header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>Hi, you=E2=80=99re a genius, you make everything look really easy, I=
 tried to pass =E2=80=9Ccrypto.js=E2=80=9D and =E2=80=9Crsa.js=E2=80=9D a p=
ython and the result was not good.<br>
I was surprised that is also relatively manejabe with PHP, thanks for posti=
ng these articles.</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D3901#respond">Reply</a> <span>=E2=86=93</span>			</div><!=
-- .reply -->
		</article><!-- #comment-## -->
	</li>
	<li class=3D"comment odd alt thread-even depth-1" id=3D"li-comment-4160">
		<article id=3D"comment-4160" class=3D"comment">
			<header class=3D"comment-meta comment-author vcard">
				<img alt=3D"" src=3D"https://web.archive.org/web/20230601152626im_/http=
://0.gravatar.com/avatar/82d5184cff0daf2f33051b2778334c9c?s=3D44&amp;d=3Dht=
tp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3=
D44&amp;r=3DG" class=3D"avatar avatar-44 photo" height=3D"44" width=3D"44">=
<cite class=3D"fn">christelle ledroit </cite><a href=3D"https://web.archive=
.org/web/20230601152626/http://julien-marchand.fr/blog/using-mega-api-with-=
python-examples/#comment-4160"><time datetime=3D"2013-04-04T19:59:47+00:00"=
>April 4, 2013 at 7:59 pm</time></a>			</header><!-- .comment-meta -->

		=09
			<section class=3D"comment-content comment">
				<p>how to deal with partial download ? i can=E2=80=99t figure out</p>
							</section><!-- .comment-content -->

			<div class=3D"reply">
				<a class=3D"comment-reply-link" href=3D"https://web.archive.org/web/202=
30601152626/http://julien-marchand.fr/blog/using-mega-api-with-python-examp=
les/?replytocom=3D4160#respond">Reply</a> <span>=E2=86=93</span>			</div><!=
-- .reply -->
		</article><!-- #comment-## -->
	</li>
		</ol><!-- .commentlist -->

	=09
	=09
=09
									<div id=3D"respond">
				<h3 id=3D"reply-title">Leave a Reply <small><a rel=3D"nofollow" id=3D"c=
ancel-comment-reply-link" href=3D"https://web.archive.org/web/2023060115262=
6/http://julien-marchand.fr/blog/using-mega-api-with-python-examples/#respo=
nd" style=3D"display:none;">Cancel reply</a></small></h3>
									<form action=3D"https://web.archive.org/web/20230601152626/http://=
julien-marchand.fr/blog/wp-comments-post.php" method=3D"post" id=3D"comment=
form">
																			<p class=3D"comment-notes">Your email address will not b=
e published. Required fields are marked <span class=3D"required">*</span></=
p>							<p class=3D"comment-form-author"><label for=3D"author">Name <span =
class=3D"required">*</span></label> <input id=3D"author" name=3D"author" ty=
pe=3D"text" value=3D"" size=3D"30" aria-required=3D"true"></p>
<p class=3D"comment-form-email"><label for=3D"email">Email <span class=3D"r=
equired">*</span></label> <input id=3D"email" name=3D"email" type=3D"text" =
value=3D"" size=3D"30" aria-required=3D"true"></p>
<p class=3D"comment-form-url"><label for=3D"url">Website</label><input id=
=3D"url" name=3D"url" type=3D"text" value=3D"" size=3D"30"></p>
												<p class=3D"comment-form-comment"><label for=3D"comment">Commen=
t</label><textarea id=3D"comment" name=3D"comment" cols=3D"45" rows=3D"8" a=
ria-required=3D"true"></textarea></p>						<p class=3D"form-allowed-tags">Y=
ou may use these <abbr title=3D"HyperText Markup Language">HTML</abbr> tags=
 and attributes:  <code>&lt;a href=3D"" title=3D""&gt; &lt;abbr title=3D""&=
gt; &lt;acronym title=3D""&gt; &lt;b&gt; &lt;blockquote cite=3D""&gt; &lt;c=
ite&gt; &lt;code&gt; &lt;del datetime=3D""&gt; &lt;em&gt; &lt;i&gt; &lt;q c=
ite=3D""&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class=3D"for=
m-submit">
							<input name=3D"submit" type=3D"submit" id=3D"submit" value=3D"Post C=
omment">
						=09

						</p>
						<p style=3D"display: none;"></p>					</form>
							</div><!-- #respond -->
					=09
</div><!-- #comments .comments-area -->
		=09
		</div><!-- #content -->
	</div><!-- #primary -->


			<div id=3D"secondary" class=3D"widget-area" role=3D"complementary">
			<aside id=3D"search-2" class=3D"widget widget_search"><form role=3D"sear=
ch" method=3D"get" id=3D"searchform" action=3D"https://web.archive.org/web/=
20230601152626/http://julien-marchand.fr/blog/">
	<div><label class=3D"screen-reader-text" for=3D"s">Search for:</label>
	<input type=3D"text" value=3D"" name=3D"s" id=3D"s">
	<input type=3D"submit" id=3D"searchsubmit" value=3D"Search">
	</div>
	</form></aside>		<aside id=3D"recent-posts-2" class=3D"widget widget_recen=
t_entries">		<h3 class=3D"widget-title">Recent Posts</h3>		<ul>
					<li>
				<a href=3D"https://web.archive.org/web/20230601152626/http://julien-mar=
chand.fr/blog/using-the-mega-api-with-php-examples/" title=3D"Using the Meg=
a API, with PHP examples!">Using the Mega API, with PHP examples!</a>
						</li>
					<li>
				<a href=3D"https://web.archive.org/web/20230601152626/http://julien-mar=
chand.fr/blog/using-the-mega-api-how-to-upload-a-file-anonymously-without-l=
ogging-in/" title=3D"Using the Mega API: how to upload a file anonymously (=
without logging in).">Using the Mega API: how to upload a file anonymously =
(without logging in).</a>
						</li>
					<li>
				<a href=3D"https://web.archive.org/web/20230601152626/http://julien-mar=
chand.fr/blog/megafs-a-fuse-filesystem-wrapper-for-mega-part-2-reading-and-=
writing-files/" title=3D"MegaFS, a FUSE filesystem wrapper for Mega. Part 2=
: Reading and writing files.">MegaFS, a FUSE filesystem wrapper for Mega. P=
art 2: Reading and writing files.</a>
						</li>
					<li>
				<a href=3D"https://web.archive.org/web/20230601152626/http://julien-mar=
chand.fr/blog/using-the-mega-api-how-to-download-a-public-file-or-a-file-yo=
u-know-the-key-without-logging-in/" title=3D"Using the Mega API: how to dow=
nload a public file (or a file you know the key), without logging in.">Usin=
g the Mega API: how to download a public file (or a file you know the key),=
 without logging in.</a>
						</li>
					<li>
				<a href=3D"https://web.archive.org/web/20230601152626/http://julien-mar=
chand.fr/blog/megafs-a-fuse-filesystem-wrapper-for-mega-part-1-listing-file=
s/" title=3D"MegaFS, a FUSE filesystem wrapper for Mega. Part 1: Listing fi=
les.">MegaFS, a FUSE filesystem wrapper for Mega. Part 1: Listing files.</a=
>
						</li>
				</ul>
		</aside><aside id=3D"recent-comments-2" class=3D"widget widget_recent_com=
ments"><h3 class=3D"widget-title">Recent Comments</h3><ul id=3D"recentcomme=
nts"><li class=3D"recentcomments">Daan on <a href=3D"https://web.archive.or=
g/web/20230601152626/http://julien-marchand.fr/blog/megafs-a-fuse-filesyste=
m-wrapper-for-mega-part-1-listing-files/#comment-5454">MegaFS, a FUSE files=
ystem wrapper for Mega. Part 1: Listing files.</a></li><li class=3D"recentc=
omments">Seid on <a href=3D"https://web.archive.org/web/20230601152626/http=
://julien-marchand.fr/blog/using-the-mega-api-with-php-examples/#comment-53=
89">Using the Mega API, with PHP examples!</a></li><li class=3D"recentcomme=
nts">Seid on <a href=3D"https://web.archive.org/web/20230601152626/http://j=
ulien-marchand.fr/blog/using-the-mega-api-with-php-examples/#comment-4960">=
Using the Mega API, with PHP examples!</a></li><li class=3D"recentcomments"=
>gregor on <a href=3D"https://web.archive.org/web/20230601152626/http://jul=
ien-marchand.fr/blog/using-the-mega-api-with-php-examples/#comment-4879">Us=
ing the Mega API, with PHP examples!</a></li><li class=3D"recentcomments">I=
ngo Marsch on <a href=3D"https://web.archive.org/web/20230601152626/http://=
julien-marchand.fr/blog/megafs-a-fuse-filesystem-wrapper-for-mega-part-2-re=
ading-and-writing-files/#comment-4533">MegaFS, a FUSE filesystem wrapper fo=
r Mega. Part 2: Reading and writing files.</a></li></ul></aside><aside id=
=3D"archives-2" class=3D"widget widget_archive"><h3 class=3D"widget-title">=
Archives</h3>		<ul>
			<li><a href=3D"https://web.archive.org/web/20230601152626/http://julien-=
marchand.fr/blog/2013/02/" title=3D"February 2013">February 2013</a></li>
	<li><a href=3D"https://web.archive.org/web/20230601152626/http://julien-ma=
rchand.fr/blog/2013/01/" title=3D"January 2013">January 2013</a></li>
		</ul>
</aside><aside id=3D"categories-2" class=3D"widget widget_categories"><h3 c=
lass=3D"widget-title">Categories</h3>		<ul>
	<li class=3D"cat-item cat-item-1"><a href=3D"https://web.archive.org/web/2=
0230601152626/http://julien-marchand.fr/blog/category/uncategorized/" title=
=3D"View all posts filed under Uncategorized">Uncategorized</a>
</li>
		</ul>
</aside><aside id=3D"meta-2" class=3D"widget widget_meta"><h3 class=3D"widg=
et-title">Meta</h3>			<ul>
						<li><a href=3D"https://web.archive.org/web/20230601152626/http://juli=
en-marchand.fr/blog/wp-login.php">Log in</a></li>
			<li><a href=3D"https://web.archive.org/web/20230601152626/http://julien-=
marchand.fr/blog/feed/" title=3D"Syndicate this site using RSS 2.0">Entries=
 <abbr title=3D"Really Simple Syndication">RSS</abbr></a></li>
			<li><a href=3D"https://web.archive.org/web/20230601152626/http://julien-=
marchand.fr/blog/comments/feed/" title=3D"The latest comments to all posts =
in RSS">Comments <abbr title=3D"Really Simple Syndication">RSS</abbr></a></=
li>
			<li><a href=3D"https://web.archive.org/web/20230601152626/http://wordpre=
ss.org/" title=3D"Powered by WordPress, state-of-the-art semantic personal =
publishing platform.">WordPress.org</a></li>
						</ul>
</aside>		</div><!-- #secondary -->
		</div><!-- #main .wrapper -->
	<footer id=3D"colophon" role=3D"contentinfo">
		<div class=3D"site-info">
						<a href=3D"https://web.archive.org/web/20230601152626/http://wordpres=
s.org/" title=3D"Semantic Personal Publishing Platform">Proudly powered by =
WordPress</a>
		</div><!-- .site-info -->
	</footer><!-- #colophon -->
</div><!-- #page -->





</body></html><!--
     FILE ARCHIVED ON 15:26:26 Jun 01, 2023 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 01:54:09 Mar 24, 2025.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
--><!--
playback timings (ms):
  captures_list: 0.798
  exclusion.robots: 0.038
  exclusion.robots.policy: 0.022
  esindex: 0.015
  cdx.remote: 22.204
  LoadShardBlock: 157.09 (3)
  PetaboxLoader3.datanode: 126.184 (4)
  PetaboxLoader3.resolve: 400.037 (2)
  load_resource: 665.071
-->
------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://0.gravatar.com/avatar/0bd77f2af46c5d8930d6d91e7f18e76c?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

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
RK5CYII=

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://1.gravatar.com/avatar/3aee3478d65182bdde7a9420326253a8?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://0.gravatar.com/avatar/4b2cda783136bc4975dbc228f63bdba3?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://0.gravatar.com/avatar/0d02f30bf8f58f6344ea19fd8e26ad6b?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://0.gravatar.com/avatar/ad301912e7de321c6ecbfb86cf552589?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://1.gravatar.com/avatar/7d7ea926d9c8f659a63ec4f7db0a4e59?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://0.gravatar.com/avatar/e8798918d0a08ab01de4090e304ece40?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://1.gravatar.com/avatar/b9ca5c2e89e987fb809da1511da8806c?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://1.gravatar.com/avatar/385fcade3c3ef825e89533e1e3ee0323?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://1.gravatar.com/avatar/3bb45fad7d5f8e39745c1a80bb947a52?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

/9j/4AAQSkZJRgABAQEAYABgAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcg
SlBFRyB2NjIpLCBxdWFsaXR5ID0gOTAK/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwK
DAwLCgsLDQ4SEA0OEQ4LCxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8AAEQgALAAs
AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMF
BQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkq
NDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqi
o6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/E
AB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMR
BAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVG
R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A
yodFBA+WrB0dIYmkcBUQFmPoBXbw6F/s0aj4amvLIw2/yys6AHbnjeM8fTNftuIxaoUZ1f5U39yu
fkNCm8RXhRX2ml97seDeK734ieUl54X8HyXOnhPMaSe1eUlc4BOxwFzj3q18H/iXYfFCK7s3t1sN
esADdWYJIAzjcpIBxngg8g4r60+JnxP1TRNG1yO18JXc9jo+kzX0uoTsI4ZgnPlp1OTg4yB09MGv
jTwenk/tTWlxJ4evNDuNX0+SKaFoQqySMpmL5/iX93jcO4r8tyfiLG4jHRjXleMna3b0P1DOeHcL
hcDKpRjaUVf/AIc9gGhj+5+lL/YY/uCvQv7BI52/pQdC/wBmv1V1l3PyqLZ08GiLgcVet9J8iRJE
A3KcjIrxF/jpq1hpkuo3VlaQ2EaoxumnxCA27blzgfwn6YOcYrzz4ift26doFvc2Gh3NrrV9JCwj
vLNZBDCxU8neqkkHsuc8c1+fTzSMk03dM+tWUzjJSTs0e4/Gmz/t3wT4wlufEq6Y0tj9iEdzdSQr
EgDb8FXwQ277pU5wPQV8gfs8/GDS/DfxD/tDxZfy6za6fbJpVrqOCfskIO0TMgydgGFLHHDepAPY
eEPiV8Mf2hvhTaeFvGN/J4V8QaPaKX1XU23/AGhIx80qylvmcgElH5yxxnt8fX2uQeDPHtzqPgq/
u7uztpGS1u722VBcR+jwtuDKfRuvBwOg+AwMp4as5RWsXdX/AMz9KzGUcVhoxnJNSVnbf7vU/VnU
/jl8NdIh0mW58WacseqSCK2ZH35J6FgBlBnAJbABPNejf2Mh5AFfi/qHjPUteWNNVIu44lZI0Iwk
QaQyfIAcKMs3A45r3zwL+3R408G+EdL0MvZXEdhAtvFJNAXcxqMLklxnAwPwr7SnnFRt86+4/Pp5
NT09lL7zyj4l+PE8WamttCVFlE4K7VA3tjBY4A4xwB+OASa5WWyCZckc4Oc+wrnopWe8yTyUBroi
/wBqBjZQoA3ZXOT7c/55r5zY9+ad7tkKBcNzkDHX1zxUbQKwHbip4IlEijHH+FRzjKD/AHe1IzuU
5T9lw7A7Oh9xWf5wYsAchTtB9u1Gq3crBYi/yKuAMD/JqrFIY0GMcjPNFzphHQ//2Q==

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://1.gravatar.com/avatar/fe8cf00ed069f493201587d6094354ba?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

/9j/4AAQSkZJRgABAQEAYABgAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcg
SlBFRyB2NjIpLCBxdWFsaXR5ID0gOTAK/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwK
DAwLCgsLDQ4SEA0OEQ4LCxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8AAEQgALAAs
AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMF
BQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkq
NDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqi
o6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/E
AB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMR
BAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVG
R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A
8hu1aJFjS2e5uJm8qC3jGXd/QDt7+2STXsnwI/Z4uPHniuNNSkb/AEZBNe3kJ/1CNwsEJ7O2G3P1
wD0yK4b4e2MUviWaVn3yQWxVVJ4y7Af+yH3xX2p+yA9m/hPxLEBjVU1eSS6LDllKJ5LdB8uwKB7q
3evxKnX972ce1/U/oHPa08DgZV4bt29Dyn4q+D/A3grxhY+GtG0+80aRnghuNXsr9mWGaZgED28m
5ZFG5CxBU4fI6VyfxM+HV54J8NXlr4oaW58TXn2lNP07TbmNLb7PEoH2iTcjM29mHyH1A9Wr2z4u
+GfDei+N9Vtrrwynj7xZ4qdJLexd/JNrboiIio+GKOzRO28Y4RixUJmsn4v/ABB8K6ldxaxqfw/m
16PT9PNpqt5qJ3jR2MrKbfbtZTMWRyWyoIRQGO5AfYpYJ1OWqoXfex8HQzurT5KUZy5euu78uyPi
vw8xubF5kT7PaTOXt4GHzRx+n0OMgdgcVlax8QYdJvntEs7i6aIAOYFZlRv7ufUDH51FD4g/4llv
puhMszJGI/tODshXoCf7zY5wPx959M02OwtFjDNIxJd5HY7pGJyWPuTX0OVcM1cznOrVjaPToeln
HFlDLacKeHfNLr5G3pdy8HxS0K3ciKzlVmlJGF3RpMVJPtvY4+lfRXwz1jxJpHxA8KXWm2smlapr
ZikgtXlHlXtixdi0oxwAiSPg/MvGPvHPzLq2pWGs6haQafOlzcKkzNNGpdUQQSbssOO4469K+4vg
7psvin9o3Ub2Cz1BdF8LG9tLaa7RjGfMjtAqxMeNpYXDKB0VuOCBXyUcIpKFSatKKt/XqexneZew
pToxSnCV/wBPyZ3nxB1jT/hh8UvEfxAvrCXUNSs/Bp/sm0VgPPeGWaSeNOD85DxdOdu7AxmvnrwH
+0Nr+s/BP4n65ZeDI9U8U+M547/T/DsVrNPDLHMfs8pOB8wAjMhBI4cc817h+1xJ4Sj8Plb8Tan4
hmWKKDRYblj50Zl2mWSEMAVQM5zlCQCu8ZNU/AX7TnhHwpoOm6Nqdlr8U6Rny1bTIdoRdo2oluxV
VUFQF5OAOtfSUsx+r0o042uj8yhl9evD21OEmvJHxov7N/xB8BfDC28Ra14Y/svTbWJVuoRMrz26
kANI8a5wgPX5sgckYzXMJDHHkMzHuDu7V+nvh34z/Df4s2d3pWneIdPvpZ0a3uNMuiYLjBGGRopA
rHrgjFfmz4w0EeDPGfiLw7bl3t9I1GeyiZmOTGjnZnH+xtr9E4ezudbmpYhJWV0fJZlg2pcyunfV
HKeFtY1LTdQkvrbTbSOIxGGNLsEsqsfmIRSAMgDjORz619UfC79pHWPhb+zRqGp3Ux8Q+J59Yk0r
QtN7QJHFCOTksUQuTlic7kUYyK+YXHlx7gTkHA/Ou1+HkUck8NoyBo31FrrLZYhvICkDPABKIxwP
vIp7Vw8UZZhsJhpY6K97r8j3chxdbMq9LLar/d30PS4LvUr2NtS8QXn2zWZx5t7dSPks/Urk9FU5
AUYUc4AzWR9uttQ8R6dLHMPs8cUnlTNny7h2YDbGTw+AuTtJ6ivYfgF8PtF+I3ijWpPEFsdRt9Le
FYLKQ/6OWZSxd0/jPpuyBgcZ5r2PxL8CfDHiuG5Grvql7amYMtidRljtYwvKqsKFUAGB2z6k1+D4
fA/WFLEVZe9Nfdc/bcZxDDLK0cDRpaRPzy+NmnXGia3Y60tvDPps7iK62xAPGw+7Jn+I4zzwRgjP
IFZELhTLJJdXU0kzmRpZJ3kZye5Ykk8ADr0A7V7B8WtEt9MtfHOiRtLJaaRcTpbPM5eTEe2RNzHr
gn8gK8etbt3hBIHQcAnjgcda/bOBKjrYSdCqk3Tdr90flPHdKNPFU8VR0VVXt5n/2Q==

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://0.gravatar.com/avatar/8338639e5a3c21955d414ac4b4943b6d?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

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
SUVORK5CYII=

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://0.gravatar.com/avatar/62ae43c772b97e3d6a99987df6c9e186?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://0.gravatar.com/avatar/43c2e0b983999af318cd65199b72cab5?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://1.gravatar.com/avatar/d5caedac7dc0eef89f007eafdfbbbc45?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://1.gravatar.com/avatar/12ef0e0d0048a3ff2da6e09879faad15?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://1.gravatar.com/avatar/de687f899025db5c9a1d3dffc463a3be?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://0.gravatar.com/avatar/88a4ba98f92826066be642aeea2f56d5?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://julien-marchand.fr/blog/wp-includes/images/smilies/icon_biggrin.gif

R0lGODlhDwAPALMNAEVFRf/qAAAAAP/////OAP/JAP+0AP6dAP/+k//9E///x///6//lAAAAAAAA
AAAAACH5BAEAAA0ALAAAAAAPAA8AAARZsEkJap241aUQIhcGcEkSnMQBTEBnnnC6aogpwHcAasqb
B7mCCoD4wXCGSlHAbDqTANtgSh0IClACsEq9qjRaAfe6AxMYTvKXQiAU3m9ZpmKoG4YZlmU2iQAA
Ow==

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://1.gravatar.com/avatar/de2dd564dea21a669cbe92e545618101?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G

iVBORw0KGgoAAAANSUhEUgAAACwAAAAsCAYAAAAehFoBAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAC
YUlEQVRYw+2Y7aqqQBSG3xksMhXdSaZJmEUE0f3fQXdQBEUYRBD0ZRRF9nV+Hdjsc6xmnIwNvX/L
5TPLmTVrvaTT6dzwi0Txy/QB/gB/gD/A9yWJCqTrOkzThKqqyGazIIQgiiLsdjusViuEYYjb7fZ+
YE3TUKvVoCjKP79lMhkoioJSqYTD4YAgCBCG4fu2hOM4aLfb/4X9KVmW0Wq1UKlU3pNh27bh+z7z
c3+BJ5NJehlWFIUL9ju0ruvpAVerVRBCEn1a3gVTnuzyZue78vk8Vxxm4K+vL2E1tVAovB5YVVVh
wDyxmIGz2awwYJ5YzMAibqsksZiBoygSBswTixl4u90KA+aJxQy8XC6FbYvlcvl64OPxiNVqlRh2
s9lgt9ulc9ONx2Ocz2du2Ov1iiAI0ruaj8cjhsMh99YYjUbY7/fptpfr9Rr9fp8p05fLBYPBAPP5
/D39cBiG6Ha7OJ1OD/97Pp/R6/WwWCze0w9nMhm4rgvbtkHp43VLkoR2u43ZbIbpdPrUIoUBF4tF
+L4PSWJ7nFKKcrkMy7IQBAHX1mB6IyEEvu/Dtu1kn1WS0Gg0oGkagiBgOryUBbbZbCaG/TlmNZtN
pmHgaeB6vc7Vvz7TE9frdbHAjuPAsqyXmSOWZcFxHDHAsizD87yXOzqe50GW5eTAvu8/VbaSilL6
1GBKH9lPhmEgLRmG8XAwvQvsui7S1qN3xgLncjkh4zyrdF1HLpdjBzZNM7FZwiNCCEzTZAcW6T+I
9D5o3IkV6T/w+BVxlYnG1d40Stm9EhdXk2ncgXu34hjoq90d0a7QH8dfpOzBZD+RAAAAAElFTkSu
QmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20230601152626im_/http://julien-marchand.fr/blog/wp-includes/images/smilies/icon_smile.gif

R0lGODlhDwAPALMOAP/qAEVFRQAAAP/OAP/JAP+0AP6dAP/+k//9E///////xzMzM///6//lAAAA
AAAAACH5BAEAAA4ALAAAAAAPAA8AAARb0EkZap3YVabOGRcWcAgCnIMRTEEnCCfwpqt2mHEOagoO
nz+CKnADxoKFyiHHBBCSAdOiCVg8KwPZa7sVrgJZQWI8FhB2msGgwTXTWGqCXP4WBQr4wjDDstQm
EQA7

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://web-static.archive.org/_static/images/loading.gif

R0lGODlhFAAUAOMIAAAAABoaGjMzM0xMTGZmZoCAgJmZmbKysv//////////////////////////
/////yH/C05FVFNDQVBFMi4wAwEAAAAh+QQBCgAIACwAAAAAFAAUAAAEUxDJSau9CADMteZTEEje
hhzHJYqkiaLWOlZvGs8WDO6UIPAGw8TnAwWDEuKPcxQml0YnjzcYYAqFS7VqwWItWyuCQJB4s2Ax
mWxGg9bl6YQtl0cAACH5BAEKAA8ALAAAAAAUABQAAART8MlJq70vBMy15pMgSN72AMAliqSJotY6
Vm8azxYM7tQw8IfDxOcDBYMS4o9zFCaXRiePRyBgDIZLtWrBYi1b66NQkHizYDGZbEaD1uXphC2X
RwAAIfkEAQoADwAsAAAAABQAFAAABFPwyUmrvU8IzLXm0zBI3vYEwSWKpImi1jpWbxrPFgzuFEHw
AMDE5wMFgxLij3MUJpdGJ49XKGAOh0u1asFiLVvrw2CQeLNgMZlsRoPW5emELZdHAAAh+QQBCgAP
ACwAAAAAFAAUAAAEU/DJSau9bwzMteYTQUje9gjCJYqkiaLWOlZvGs8WDO5UUfCBwMTnAwWDEuKP
cxQml0Ynj2cwYACAS7VqwWItW+vjcJB4s2AxmWxGg9bl6YQtl0cAACH5BAEKAA8ALAAAAAAUABQA
AART8MlJq72PEMy15lNRSN72DMMliqSJotY6Vm8azxYM7pRh8ALBxOcDBYMS4o9zFCaXRiePdzhg
AoFLtWrBYi1b6wMAkHizYDGZbEaD1uXphC2XRwAAIfkEAQoADwAsAAAAABQAFAAABFPwyUmrva8U
zLXmk2FI3vYQxCWKpImi1jpWbxrPFgzu1HHwg8HE5wMFgxLij3MUJpdGJ48HAGAEgku1asFiLVvr
IxCQeLNgMZlsRoPW5emELZdHAAAh+QQBCgAPACwAAAAAFAAUAAAEU/DJSau9zxjMtebTcUje9hTF
JYqkiaLWOlZvGs8WDO4UAPAEwsTnAwWDEuKPcxQml0YnjxcIYAaDS7VqwWItW+tDIJB4s2AxmWxG
g9bl6YQtl0cAACH5BAEKAA8ALAAAAAAUABQAAART8MlJq73vHMy15hMASN72GMYliqSJotY6Vm8a
zxYM7lQQ8IXCxOcDBYMS4o9zFCaXRiePJxBgCIRLtWrBYi1b62MwkHizYDGZbEaD1uXphC2XRwAA
Ow==

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web-static.archive.org/_static/images/toolbar/wm_tb_nxt_on.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMhJREFUeNqU0s8KAUEcwPHBJjm5KHkCV+07cJHkKZRyUK6cKYeVPxd5
BVcHjspB+VPKA7g4cHNQwndqp/awMb9ffdra+jazMxtx3c9UKTXCTgkmihK28JCWhG//2cARdcRt
wuBkMMQGRUloJo8F5shJQjMV/9D6SElCPQk0cUINMdvQTBYTHFCWhGaSeheOILihiwGeNuELM7Rx
NS//hUu0sLe9jjOqKIRFYSve0fP/nsevrTiBVfV3dHCxOSkdrjDGWnInXwEGAM40IjLd/vWIAAAA
AElFTkSuQmCC

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web-static.archive.org/_static/images/toolbar/wm_tb_prv_on.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMZJREFUeNqU07EKQWEUwHEuSSaLkicgg3TZzCySvIKk2GVgJZmsBg9g
8QK8gcHoASwGNoMS/l+db6Au3zn1W279b+fe796w779Cyimi7ymCFBbYox51CGLoYIS0XHv+C2uY
ynofExRmJWgG3fE7TGKMHuK/VrFhRJ7DRBmXN2XCBibIa87Ek5US2sM04Ro5DHDRhGbumMu6Szxc
QztndFHGVhPaOaCKFo6a0Iz5+jcoYYira2jnhhkKWNlO83ec0EYFu7cAAwCVABzGI3/GxAAAAABJ
RU5ErkJggg==

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web-static.archive.org/_static/images/toolbar/wayback-toolbar-logo-200.png

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

------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web.archive.org/web/20230601152626cs_/http://julien-marchand.fr/blog/wp-content/themes/twentytwelve/style.css?ver=3.5.1

@charset "utf-8";

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, b=
lockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, i=
mg, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i=
, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, cap=
tion, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, emb=
ed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, se=
ction, summary, time, mark, audio, video { margin: 0px; padding: 0px; borde=
r: 0px; font-size: 100%; vertical-align: baseline; }

body { line-height: 1; }

ol, ul { list-style: none; }

blockquote, q { quotes: none; }

blockquote::before, blockquote::after, q::before, q::after { content: none;=
 }

table { border-collapse: collapse; border-spacing: 0px; }

caption, th, td { font-weight: normal; text-align: left; }

h1, h2, h3, h4, h5, h6 { clear: both; }

html { overflow-y: scroll; font-size: 100%; text-size-adjust: 100%; }

a:focus { outline: dotted thin; }

article, aside, details, figcaption, figure, footer, header, hgroup, nav, s=
ection { display: block; }

audio, canvas, video { display: inline-block; }

audio:not([controls]) { display: none; }

del { color: rgb(51, 51, 51); }

ins { background: rgb(255, 249, 192); text-decoration: none; }

hr { background-color: rgb(204, 204, 204); border: 0px; height: 1px; margin=
: 24px 24px 1.71429rem; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

small { font-size: smaller; }

img { border: 0px; }

.clear::after, .wrapper::after, .format-status .entry-header::after { clear=
: both; }

.clear::before, .clear::after, .wrapper::before, .wrapper::after, .format-s=
tatus .entry-header::before, .format-status .entry-header::after { display:=
 table; content: ""; }

.archive-title, .page-title, .widget-title, .entry-content th, .comment-con=
tent th { font-size: 0.785714rem; line-height: 2.18182; font-weight: bold; =
text-transform: uppercase; color: rgb(99, 99, 99); }

article.format-quote footer.entry-meta, article.format-link footer.entry-me=
ta, article.format-status footer.entry-meta { font-size: 0.785714rem; line-=
height: 2.18182; }

button, input, textarea { border: 1px solid rgb(204, 204, 204); border-radi=
us: 3px; font-family: inherit; padding: 0.428571rem; }

button, input { line-height: normal; }

textarea { font-size: 100%; overflow: auto; vertical-align: top; }

input[type=3D"checkbox"], input[type=3D"radio"], input[type=3D"file"], inpu=
t[type=3D"hidden"], input[type=3D"image"], input[type=3D"color"] { border: =
0px; border-radius: 0px; padding: 0px; }

.menu-toggle, input[type=3D"submit"], input[type=3D"button"], input[type=3D=
"reset"], article.post-password-required input[type=3D"submit"], li.byposta=
uthor cite span { padding: 0.428571rem 0.714286rem; font-size: 0.785714rem;=
 line-height: 1.42857; font-weight: normal; color: rgb(124, 124, 124); back=
ground-color: rgb(230, 230, 230); background-repeat: repeat-x; background-i=
mage: -webkit-linear-gradient(top, rgb(244, 244, 244), rgb(230, 230, 230));=
 border: 1px solid rgb(210, 210, 210); border-radius: 3px; box-shadow: rgba=
(64, 64, 64, 0.1) 0px 1px 2px; }

.menu-toggle, button, input[type=3D"submit"], input[type=3D"button"], input=
[type=3D"reset"] { cursor: pointer; }

button[disabled], input[disabled] { cursor: default; }

.menu-toggle:hover, button:hover, input[type=3D"submit"]:hover, input[type=
=3D"button"]:hover, input[type=3D"reset"]:hover, article.post-password-requ=
ired input[type=3D"submit"]:hover { color: rgb(94, 94, 94); background-colo=
r: rgb(235, 235, 235); background-repeat: repeat-x; background-image: -webk=
it-linear-gradient(top, rgb(249, 249, 249), rgb(235, 235, 235)); }

.menu-toggle:active, .menu-toggle.toggled-on, button:active, input[type=3D"=
submit"]:active, input[type=3D"button"]:active, input[type=3D"reset"]:activ=
e { color: rgb(117, 117, 117); background-color: rgb(225, 225, 225); backgr=
ound-repeat: repeat-x; background-image: -webkit-linear-gradient(top, rgb(2=
35, 235, 235), rgb(225, 225, 225)); box-shadow: rgb(198, 198, 198) 0px 0px =
8px 2px inset, rgb(244, 244, 244) 0px 1px 0px 0px; border: none; }

li.bypostauthor cite span { color: rgb(255, 255, 255); background-color: rg=
b(33, 117, 155); background-image: none; border: 1px solid rgb(31, 111, 147=
); border-radius: 2px; box-shadow: none; padding: 0px; }

.entry-content img, .comment-content img, .widget img { max-width: 100%; }

img[class*=3D"align"], img[class*=3D"wp-image-"], img[class*=3D"attachment-=
"] { height: auto; }

img.size-full, img.size-large, img.header-image, img.wp-post-image { max-wi=
dth: 100%; height: auto; }

embed, iframe, object, video { max-width: 100%; }

.entry-content .twitter-tweet-rendered { max-width: 100% !important; }

.alignleft { float: left; }

.alignright { float: right; }

.aligncenter { display: block; margin-left: auto; margin-right: auto; }

.entry-content img, .comment-content img, .widget img, img.header-image, .a=
uthor-avatar img, img.wp-post-image { border-radius: 3px; box-shadow: rgba(=
0, 0, 0, 0.2) 0px 1px 4px; }

.wp-caption { max-width: 100%; padding: 4px; }

.wp-caption .wp-caption-text, .gallery-caption, .entry-caption { font-style=
: italic; font-size: 0.857143rem; line-height: 2; color: rgb(117, 117, 117)=
; }

img.wp-smiley, .rsswidget img { border: 0px; border-radius: 0px; box-shadow=
: none; margin-bottom: 0px; margin-top: 0px; padding: 0px; }

.entry-content dl.gallery-item { margin: 0px; }

.gallery-item a, .gallery-caption { width: 90%; }

.gallery-item a { display: block; }

.gallery-caption a { display: inline; }

.gallery-columns-1 .gallery-item a { max-width: 100%; width: auto; }

.gallery .gallery-icon img { height: auto; max-width: 90%; padding: 5%; }

.gallery-columns-1 .gallery-icon img { padding: 3%; }

.site-content nav { clear: both; line-height: 2; overflow: hidden; }

#nav-above { padding: 1.71429rem 0px; }

#nav-above { display: none; }

.paged #nav-above { display: block; }

.nav-previous, .previous-image { float: left; width: 50%; }

.nav-next, .next-image { float: right; text-align: right; width: 50%; }

.nav-single + .comments-area, #comment-nav-above { margin: 3.42857rem 0px; =
}

.author .archive-header { margin-bottom: 1.71429rem; }

.author-info { border-top: 1px solid rgb(237, 237, 237); margin: 1.71429rem=
 0px; padding-top: 1.71429rem; overflow: hidden; }

.author-description p { color: rgb(117, 117, 117); font-size: 0.928571rem; =
line-height: 1.84615; }

.author.archive .author-info { border-top: 0px; margin: 0px 0px 3.42857rem;=
 }

.author.archive .author-avatar { margin-top: 0px; }

html { font-size: 87.5%; }

body { font-size: 1rem; font-family: Helvetica, Arial, sans-serif; text-ren=
dering: optimizelegibility; color: rgb(68, 68, 68); }

body.custom-font-enabled { font-family: "Open Sans", Helvetica, Arial, sans=
-serif; }

a { outline: none; color: rgb(33, 117, 155); }

a:hover { color: rgb(15, 54, 71); }

.assistive-text, .site .screen-reader-text { position: absolute !important;=
 clip: rect(1px, 1px, 1px, 1px); }

.main-navigation .assistive-text:hover, .main-navigation .assistive-text:ac=
tive, .main-navigation .assistive-text:focus { background: rgb(255, 255, 25=
5); border: 2px solid rgb(51, 51, 51); border-radius: 3px; color: rgb(0, 0,=
 0); display: block; font-size: 12px; padding: 12px; position: absolute; to=
p: 5px; left: 5px; z-index: 100000; clip: auto !important; }

.site { padding: 0px 1.71429rem; background-color: rgb(255, 255, 255); }

.site-content { margin: 1.71429rem 0px 0px; }

.widget-area { margin: 1.71429rem 0px 0px; }

.site-header { padding: 1.71429rem 0px; }

.site-header h1, .site-header h2 { text-align: center; }

.site-header h1 a, .site-header h2 a { color: rgb(81, 81, 81); display: inl=
ine-block; text-decoration: none; }

.site-header h1 a:hover, .site-header h2 a:hover { color: rgb(33, 117, 155)=
; }

.site-header h1 { font-size: 1.71429rem; line-height: 1.28571; margin-botto=
m: 1rem; }

.site-header h2 { font-weight: normal; font-size: 0.928571rem; line-height:=
 1.84615; color: rgb(117, 117, 117); }

.header-image { margin-top: 1.71429rem; }

.main-navigation { margin-top: 1.71429rem; text-align: center; }

.main-navigation li { margin-top: 1.71429rem; font-size: 0.857143rem; line-=
height: 1.42857; }

.main-navigation a { color: rgb(94, 94, 94); }

.main-navigation a:hover { color: rgb(33, 117, 155); }

.main-navigation ul.nav-menu, .main-navigation div.nav-menu > ul { display:=
 none; }

.main-navigation ul.nav-menu.toggled-on, .menu-toggle { display: inline-blo=
ck; }

section[role=3D"banner"] { margin-bottom: 3.42857rem; }

.widget-area .widget { hyphens: auto; margin-bottom: 3.42857rem; overflow-w=
rap: break-word; }

.widget-area .widget h3 { margin-bottom: 1.71429rem; }

.widget-area .widget p, .widget-area .widget li, .widget-area .widget .text=
widget { font-size: 0.928571rem; line-height: 1.84615; }

.widget-area .widget p { margin-bottom: 1.71429rem; }

.widget-area .textwidget ul { list-style: outside disc; margin: 0px 0px 1.7=
1429rem; }

.widget-area .textwidget li { margin-left: 2.57143rem; }

.widget-area .widget a { color: rgb(117, 117, 117); }

.widget-area .widget a:hover { color: rgb(33, 117, 155); }

.widget-area #s { width: 53.6667%; }

footer[role=3D"contentinfo"] { border-top: 1px solid rgb(237, 237, 237); cl=
ear: both; font-size: 0.857143rem; line-height: 2; max-width: 68.5714rem; m=
argin-top: 1.71429rem; margin-left: auto; margin-right: auto; padding: 1.71=
429rem 0px; }

footer[role=3D"contentinfo"] a { color: rgb(104, 104, 104); }

footer[role=3D"contentinfo"] a:hover { color: rgb(33, 117, 155); }

.entry-meta { clear: both; }

.entry-header { margin-bottom: 1.71429rem; }

.entry-header img.wp-post-image { margin-bottom: 1.71429rem; }

.entry-header .entry-title { font-size: 1.42857rem; line-height: 1.2; font-=
weight: normal; }

.entry-header .entry-title a { text-decoration: none; }

.entry-header .entry-format { margin-top: 1.71429rem; font-weight: normal; =
}

.entry-header .comments-link { margin-top: 1.71429rem; font-size: 0.928571r=
em; line-height: 1.84615; color: rgb(117, 117, 117); }

.comments-link a, .entry-meta a { color: rgb(117, 117, 117); }

.comments-link a:hover, .entry-meta a:hover { color: rgb(33, 117, 155); }

article.sticky .featured-post { border-top: 4px double rgb(237, 237, 237); =
border-bottom: 4px double rgb(237, 237, 237); color: rgb(117, 117, 117); fo=
nt-size: 0.928571rem; line-height: 3.69231; margin-bottom: 1.71429rem; text=
-align: center; }

.entry-content, .entry-summary, .mu_register { line-height: 1.71429; }

.entry-content h1, .comment-content h1, .entry-content h2, .comment-content=
 h2, .entry-content h3, .comment-content h3, .entry-content h4, .comment-co=
ntent h4, .entry-content h5, .comment-content h5, .entry-content h6, .comme=
nt-content h6 { margin: 1.71429rem 0px; line-height: 1.71429; }

.entry-content h1, .comment-content h1 { font-size: 1.5rem; line-height: 1.=
5; }

.entry-content h2, .comment-content h2, .mu_register h2 { font-size: 1.2857=
1rem; line-height: 1.6; }

.entry-content h3, .comment-content h3 { font-size: 1.14286rem; line-height=
: 1.84615; }

.entry-content h4, .comment-content h4 { font-size: 1rem; line-height: 1.84=
615; }

.entry-content h5, .comment-content h5 { font-size: 0.928571rem; line-heigh=
t: 1.84615; }

.entry-content h6, .comment-content h6 { font-size: 0.857143rem; line-heigh=
t: 1.84615; }

.entry-content p, .entry-summary p, .comment-content p, .mu_register p { ma=
rgin: 0px 0px 1.71429rem; line-height: 1.71429; }

.entry-content ol, .comment-content ol, .entry-content ul, .comment-content=
 ul, .mu_register ul { margin: 0px 0px 1.71429rem; line-height: 1.71429; }

.entry-content ul ul, .comment-content ul ul, .entry-content ol ol, .commen=
t-content ol ol, .entry-content ul ol, .comment-content ul ol, .entry-conte=
nt ol ul, .comment-content ol ul { margin-bottom: 0px; }

.entry-content ul, .comment-content ul, .mu_register ul { list-style: outsi=
de disc; }

.entry-content ol, .comment-content ol { list-style: outside decimal; }

.entry-content li, .comment-content li, .mu_register li { margin: 0px 0px 0=
px 2.57143rem; }

.entry-content blockquote, .comment-content blockquote { margin-bottom: 1.7=
1429rem; padding: 1.71429rem; font-style: italic; }

.entry-content blockquote p:last-child, .comment-content blockquote p:last-=
child { margin-bottom: 0px; }

.entry-content code, .comment-content code { font-family: Consolas, Monaco,=
 "Lucida Console", monospace; font-size: 0.857143rem; line-height: 2; }

.entry-content pre, .comment-content pre { border: 1px solid rgb(237, 237, =
237); color: rgb(102, 102, 102); font-family: Consolas, Monaco, "Lucida Con=
sole", monospace; font-size: 0.857143rem; line-height: 1.71429; margin: 1.7=
1429rem 0px; overflow: auto; padding: 1.71429rem; }

.entry-content pre code, .comment-content pre code { display: block; }

.entry-content abbr, .comment-content abbr, .entry-content dfn, .comment-co=
ntent dfn, .entry-content acronym, .comment-content acronym { border-bottom=
: 1px dotted rgb(102, 102, 102); cursor: help; }

.entry-content address, .comment-content address { display: block; line-hei=
ght: 1.71429; margin: 0px 0px 1.71429rem; }

img.alignleft { margin: 0.857143rem 1.71429rem 0.857143rem 0px; }

img.alignright { margin: 0.857143rem 0px 0.857143rem 1.71429rem; }

img.aligncenter { margin-top: 0.857143rem; margin-bottom: 0.857143rem; }

.entry-content embed, .entry-content iframe, .entry-content object, .entry-=
content video { margin-bottom: 1.71429rem; }

.entry-content dl, .comment-content dl { margin: 0px 1.71429rem; }

.entry-content dt, .comment-content dt { font-weight: bold; line-height: 1.=
71429; }

.entry-content dd, .comment-content dd { line-height: 1.71429; margin-botto=
m: 1.71429rem; }

.entry-content table, .comment-content table { border-bottom: 1px solid rgb=
(237, 237, 237); color: rgb(117, 117, 117); font-size: 0.857143rem; line-he=
ight: 2; margin: 0px 0px 1.71429rem; width: 100%; }

.entry-content table caption, .comment-content table caption { font-size: 1=
.14286rem; margin: 1.71429rem 0px; }

.entry-content td, .comment-content td { border-top: 1px solid rgb(237, 237=
, 237); padding: 6px 10px 6px 0px; }

.site-content article { border-bottom: 4px double rgb(237, 237, 237); margi=
n-bottom: 5.14286rem; padding-bottom: 1.71429rem; overflow-wrap: break-word=
; hyphens: auto; }

.page-links { clear: both; line-height: 1.71429; }

footer.entry-meta { margin-top: 1.71429rem; font-size: 0.928571rem; line-he=
ight: 1.84615; color: rgb(117, 117, 117); }

.single-author .entry-meta .by-author { display: none; }

.mu_register h2 { color: rgb(117, 117, 117); font-weight: normal; }

.archive-header, .page-header { margin-bottom: 3.42857rem; padding-bottom: =
1.57143rem; border-bottom: 1px solid rgb(237, 237, 237); }

.archive-meta { color: rgb(117, 117, 117); font-size: 0.857143rem; line-hei=
ght: 2; margin-top: 1.57143rem; }

.article.attachment { overflow: hidden; }

.image-attachment div.attachment { text-align: center; }

.image-attachment div.attachment p { text-align: center; }

.image-attachment div.attachment img { display: block; height: auto; margin=
: 0px auto; max-width: 100%; }

.image-attachment .entry-caption { margin-top: 0.571429rem; }

article.format-aside h1 { margin-bottom: 1.71429rem; }

article.format-aside h1 a { text-decoration: none; color: rgb(77, 82, 90); =
}

article.format-aside h1 a:hover { color: rgb(46, 53, 66); }

article.format-aside .aside { padding: 1.71429rem; background: rgb(210, 224=
, 249); border-left: 22px solid rgb(168, 191, 232); }

article.format-aside p { font-size: 0.928571rem; line-height: 1.84615; colo=
r: rgb(74, 84, 102); }

article.format-aside blockquote:last-child, article.format-aside p:last-chi=
ld { margin-bottom: 0px; }

article.format-image footer h1 { font-size: 0.928571rem; line-height: 1.846=
15; font-weight: normal; }

article.format-image footer h2 { font-size: 0.785714rem; line-height: 2.181=
82; }

article.format-image footer a h2 { font-weight: normal; }

article.format-link header { padding: 0px 0.714286rem; float: right; font-s=
ize: 0.785714rem; line-height: 2.18182; font-weight: bold; font-style: ital=
ic; text-transform: uppercase; color: rgb(132, 132, 132); background-color:=
 rgb(235, 235, 235); border-radius: 3px; }

article.format-link .entry-content { max-width: 80%; float: left; }

article.format-link .entry-content a { font-size: 1.57143rem; line-height: =
1.09091; text-decoration: none; }

article.format-quote .entry-content p { margin: 0px; padding-bottom: 1.7142=
9rem; }

article.format-quote .entry-content blockquote { display: block; padding: 1=
.71429rem 1.71429rem 0px; font-size: 1.07143rem; line-height: 1.6; font-sty=
le: normal; color: rgb(106, 106, 106); background: rgb(239, 239, 239); }

.format-status .entry-header { margin-bottom: 1.71429rem; }

.format-status .entry-header header { display: inline-block; }

.format-status .entry-header h1 { font-size: 1.07143rem; font-weight: norma=
l; line-height: 1.6; margin: 0px; }

.format-status .entry-header h2 { font-size: 0.857143rem; font-weight: norm=
al; line-height: 2; margin: 0px; }

.format-status .entry-header header a { color: rgb(117, 117, 117); }

.format-status .entry-header header a:hover { color: rgb(33, 117, 155); }

.format-status .entry-header img { float: left; margin-right: 1.5rem; }

.comments-title { margin-bottom: 3.42857rem; font-size: 1.14286rem; line-he=
ight: 1.5; font-weight: normal; }

.comments-area article { margin: 1.71429rem 0px; }

.comments-area article header { margin: 0px 0px 3.42857rem; overflow: hidde=
n; position: relative; }

.comments-area article header img { float: left; padding: 0px; line-height:=
 0; }

.comments-area article header cite, .comments-area article header time { di=
splay: block; margin-left: 6.07143rem; }

.comments-area article header cite { font-style: normal; font-size: 1.07143=
rem; line-height: 1.42857; }

.comments-area article header time { line-height: 1.71429; text-decoration:=
 none; font-size: 0.857143rem; color: rgb(94, 94, 94); }

.comments-area article header a { text-decoration: none; color: rgb(94, 94,=
 94); }

.comments-area article header a:hover { color: rgb(33, 117, 155); }

.comments-area article header cite a { color: rgb(68, 68, 68); }

.comments-area article header cite a:hover { text-decoration: underline; }

.comments-area article header h4 { position: absolute; top: 0px; right: 0px=
; padding: 0.428571rem 0.857143rem; font-size: 0.857143rem; font-weight: no=
rmal; color: rgb(255, 255, 255); background-color: rgb(0, 136, 208); backgr=
ound-repeat: repeat-x; background-image: -webkit-linear-gradient(top, rgb(0=
, 156, 238), rgb(0, 136, 208)); border-radius: 3px; border: 1px solid rgb(0=
, 124, 189); }

.comments-area li.bypostauthor cite span { position: absolute; margin-left:=
 0.357143rem; padding: 0.142857rem 0.357143rem; font-size: 0.714286rem; }

a.comment-reply-link, a.comment-edit-link { color: rgb(104, 104, 104); font=
-size: 0.928571rem; line-height: 1.84615; }

a.comment-reply-link:hover, a.comment-edit-link:hover { color: rgb(33, 117,=
 155); }

.commentlist .pingback { line-height: 1.71429; margin-bottom: 1.71429rem; }

#respond { margin-top: 3.42857rem; }

#respond h3#reply-title { font-size: 1.14286rem; line-height: 1.5; }

#respond h3#reply-title #cancel-comment-reply-link { margin-left: 0.714286r=
em; font-weight: normal; font-size: 0.857143rem; }

#respond form { margin: 1.71429rem 0px; }

#respond form p { margin: 0.785714rem 0px; }

#respond form p.logged-in-as { margin-bottom: 1.71429rem; }

#respond form label { display: block; line-height: 1.71429; }

#respond form input[type=3D"text"], #respond form textarea { box-sizing: bo=
rder-box; font-size: 0.857143rem; line-height: 1.71429; padding: 0.714286re=
m; width: 100%; }

#respond form p.form-allowed-tags { margin: 0px; font-size: 0.857143rem; li=
ne-height: 2; color: rgb(94, 94, 94); }

.required { color: red; }

.entry-page-image { margin-bottom: 1rem; }

.template-front-page .site-content article { border: 0px; margin-bottom: 0p=
x; }

.template-front-page .widget-area { clear: both; float: none; width: auto; =
padding-top: 1.71429rem; border-top: 1px solid rgb(237, 237, 237); }

.template-front-page .widget-area .widget li { margin: 0.571429rem 0px 0px;=
 font-size: 0.928571rem; line-height: 1.71429; list-style-type: square; lis=
t-style-position: inside; }

.template-front-page .widget-area .widget li a { color: rgb(117, 117, 117);=
 }

.template-front-page .widget-area .widget li a:hover { color: rgb(33, 117, =
155); }

.template-front-page .widget-area .widget_text img { float: left; margin: 0=
.571429rem 1.71429rem 0.571429rem 0px; }

.widget-area .widget ul ul { margin-left: 0.857143rem; }

.widget_rss li { margin: 0.857143rem 0px; }

.widget_recent_entries .post-date, .widget_rss .rss-date { color: rgb(170, =
170, 170); font-size: 0.785714rem; margin-left: 0.857143rem; }

#wp-calendar { margin: 0px; width: 100%; font-size: 0.928571rem; line-heigh=
t: 1.84615; color: rgb(104, 104, 104); }

#wp-calendar th, #wp-calendar td, #wp-calendar caption { text-align: left; =
}

#wp-calendar #next { padding-right: 1.71429rem; text-align: right; }

.widget_search label { display: block; font-size: 0.928571rem; line-height:=
 1.84615; }

.widget_twitter li { list-style-type: none; }

.widget_twitter .timesince { display: block; text-align: right; }

img#wpstats { display: block; margin: 0px auto 1.71429rem; }

@media screen and (min-width: 600px) {
  .author-avatar { float: left; margin-top: 0.571429rem; }
  .author-description { float: right; width: 80%; }
  .site { margin: 0px auto; max-width: 68.5714rem; overflow: hidden; }
  .site-content { float: left; width: 65.1042%; }
  body.template-front-page .site-content, body.single-attachment .site-cont=
ent, body.full-width .site-content { width: 100%; }
  .widget-area { float: right; width: 26.0417%; }
  .site-header h1, .site-header h2 { text-align: left; }
  .site-header h1 { font-size: 1.85714rem; line-height: 1.84615; margin-bot=
tom: 0px; }
  .main-navigation ul.nav-menu, .main-navigation div.nav-menu > ul { border=
-bottom: 1px solid rgb(237, 237, 237); border-top: 1px solid rgb(237, 237, =
237); text-align: left; width: 100%; display: inline-block !important; }
  .main-navigation ul { margin: 0px; text-indent: 0px; }
  .main-navigation li a, .main-navigation li { display: inline-block; text-=
decoration: none; }
  .main-navigation li a { border-bottom: 0px; color: rgb(106, 106, 106); li=
ne-height: 3.69231; text-transform: uppercase; white-space: nowrap; }
  .main-navigation li a:hover { color: rgb(0, 0, 0); }
  .main-navigation li { margin: 0px 2.85714rem 0px 0px; position: relative;=
 }
  .main-navigation li ul { display: none; margin: 0px; padding: 0px; positi=
on: absolute; top: 100%; z-index: 1; }
  .main-navigation li ul ul { top: 0px; left: 100%; }
  .main-navigation ul li:hover > ul { border-left: 0px; display: block; }
  .main-navigation li ul li a { background: rgb(239, 239, 239); border-bott=
om: 1px solid rgb(237, 237, 237); display: block; font-size: 0.785714rem; l=
ine-height: 2.18182; padding: 0.571429rem 0.714286rem; width: 12.8571rem; w=
hite-space: normal; }
  .main-navigation li ul li a:hover { background: rgb(227, 227, 227); color=
: rgb(68, 68, 68); }
  .main-navigation .current-menu-item > a, .main-navigation .current-menu-a=
ncestor > a, .main-navigation .current_page_item > a, .main-navigation .cur=
rent_page_ancestor > a { color: rgb(99, 99, 99); font-weight: bold; }
  .menu-toggle { display: none; }
  .entry-header .entry-title { font-size: 1.57143rem; }
  #respond form input[type=3D"text"] { width: 46.3333%; }
  #respond form textarea.blog-textarea { width: 79.6667%; }
  .template-front-page .site-content, .template-front-page article { overfl=
ow: hidden; }
  .template-front-page.has-post-thumbnail article { float: left; width: 47.=
9167%; }
  .entry-page-image { float: right; margin-bottom: 0px; width: 47.9167%; }
  .template-front-page .widget-area .widget, .template-front-page.two-sideb=
ars .widget-area .front-widgets { float: left; width: 51.875%; margin-botto=
m: 1.71429rem; }
  .template-front-page .widget-area .widget:nth-child(2n+1) { clear: right;=
 }
  .template-front-page .widget-area .widget:nth-child(2n), .template-front-=
page.two-sidebars .widget-area .front-widgets + .front-widgets { float: rig=
ht; width: 39.0625%; margin: 0px 0px 1.71429rem; }
  .template-front-page.two-sidebars .widget, .template-front-page.two-sideb=
ars .widget:nth-child(2n) { float: none; width: auto; }
  .commentlist .children { margin-left: 3.42857rem; }
}

@media screen and (min-width: 960px) {
  body { background-color: rgb(230, 230, 230); }
  body .site { padding: 0px 2.85714rem; margin-top: 3.42857rem; margin-bott=
om: 3.42857rem; box-shadow: rgba(100, 100, 100, 0.3) 0px 2px 6px; }
  body.custom-background-empty { background-color: rgb(255, 255, 255); }
  body.custom-background-empty .site, body.custom-background-white .site { =
padding: 0px; margin-top: 0px; margin-bottom: 0px; box-shadow: none; }
}

@media print {
  body { color: rgb(0, 0, 0); font-size: 10pt; background: none !important;=
 }
  footer a[rel=3D"bookmark"]:link::after, footer a[rel=3D"bookmark"]:visite=
d::after { content: " [" attr(href) "] "; }
  a { text-decoration: none; }
  .entry-content img, .comment-content img, .author-avatar img, img.wp-post=
-image { border-radius: 0px; box-shadow: none; }
  .site { max-width: 100%; clear: both !important; display: block !importan=
t; float: none !important; position: relative !important; }
  .site-header { margin-bottom: 5.14286rem; text-align: left; }
  .site-header h1 { font-size: 21pt; line-height: 1; text-align: left; }
  .site-header h2 { color: rgb(0, 0, 0); font-size: 10pt; text-align: left;=
 }
  .site-header h1 a, .site-header h2 a { color: rgb(0, 0, 0); }
  .author-avatar, #colophon, #respond, .commentlist .comment-edit-link, .co=
mmentlist .reply, .entry-header .comments-link, .entry-meta .edit-link a, .=
page-link, .site-content nav, .widget-area, img.header-image, .main-navigat=
ion { display: none; }
  .wrapper { border-top: none; box-shadow: none; }
  .site-content { margin: 0px; width: auto; }
  .singular .entry-header .entry-meta { position: static; }
  .singular .site-content, .singular .entry-header, .singular .entry-conten=
t, .singular footer.entry-meta, .singular .comments-title { margin: 0px; wi=
dth: 100%; }
  .entry-header .entry-title, .entry-title, .singular .entry-title { font-s=
ize: 21pt; }
  footer.entry-meta, footer.entry-meta a { color: rgb(68, 68, 68); font-siz=
e: 10pt; }
  .author-description { float: none; width: auto; }
  .commentlist > li.comment { background: none; position: relative; width: =
auto; }
  .commentlist .avatar { height: 39px; left: 2.2em; top: 2.2em; width: 39px=
; }
  .comments-area article header cite, .comments-area article header time { =
margin-left: 3.57143rem; }
}
------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web.archive.org/web/20230601152626cs_/http://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,400,700&subset=latin,latin-ext

@charset "utf-8";

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: normal; src: url("https://web.archive.org/web/2023060115401=
0im_/http://fonts.gstatic.com/s/opensans/v35/memQYaGs126MiZpBA-UFUIcVXSCEkx=
2cmqvXlWq8tWZ0Pw86hd0Rk8ZkWV4exQ.ttf") format("truetype"); }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: normal; src: url("https://web.archive.org/web/2023060115401=
0im_/http://fonts.gstatic.com/s/opensans/v35/memQYaGs126MiZpBA-UFUIcVXSCEkx=
2cmqvXlWq8tWZ0Pw86hd0RkyFjWV4exQ.ttf") format("truetype"); }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: normal; src: url("https://web.archive.org/web/2023060115401=
0im_/http://fonts.gstatic.com/s/opensans/v35/memSYaGs126MiZpBA-UvWbX2vVnXBb=
Obj2OVZyOOSr4dVJWUgsjZ0B4uaVc.ttf") format("truetype"); }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: normal; src: url("https://web.archive.org/web/2023060115401=
0im_/http://fonts.gstatic.com/s/opensans/v35/memSYaGs126MiZpBA-UvWbX2vVnXBb=
Obj2OVZyOOSr4dVJWUgsg-1x4uaVc.ttf") format("truetype"); }
------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web.archive.org/web/20230601152626cs_/http://julien-marchand.fr/blog/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0

@charset "utf-8";

.wp_syntax { color: rgb(17, 0, 0); background-color: rgb(249, 249, 249); bo=
rder: 1px solid silver; margin: 0px 0px 1.5em; overflow: auto; }

.wp_syntax { overflow: auto hidden; width: 99%; }

.wp_syntax table { border: none !important; border-collapse: collapse !impo=
rtant; margin: 0px !important; padding: 0px !important; width: 100% !import=
ant; }

.wp_syntax caption { margin: 0px !important; padding: 2px !important; width=
: 100% !important; background-color: rgb(221, 238, 255) !important; text-al=
ign: left !important; font-family: monospace !important; font-size: 12px !i=
mportant; line-height: 1.2em !important; }

.wp_syntax caption a { color: rgb(25, 130, 209) !important; text-align: lef=
t !important; font-family: monospace !important; font-size: 12px !important=
; line-height: 16px !important; text-decoration: none !important; }

.wp_syntax caption a:hover { color: rgb(25, 130, 209) !important; text-deco=
ration: underline !important; }

.wp_syntax div, .wp_syntax td { border: none !important; text-align: left !=
important; padding: 0px !important; vertical-align: top !important; }

.wp_syntax td.code { background-color: rgb(238, 238, 238); background-image=
: linear-gradient(transparent 50%, rgba(255, 255, 255, 0.9) 50%); backgroun=
d-size: 1px 32px; line-height: normal !important; white-space: normal !impo=
rtant; width: 100% !important; }

.wp_syntax pre { background: transparent !important; border: none !importan=
t; margin: 0px !important; width: auto !important; float: none !important; =
clear: none !important; overflow: visible !important; font-family: monospac=
e !important; font-size: 12px !important; line-height: 16px !important; pad=
ding: 0px 4px !important; white-space: pre !important; box-shadow: rgba(0, =
0, 0, 0) 0px 0px 0px !important; border-radius: 0px !important; }

.wp_syntax td.line_numbers pre { background-color: rgb(221, 238, 255) !impo=
rtant; color: gray !important; text-align: right !important; width: 16px !i=
mportant; }
------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web-static.archive.org/_static/css/iconochive.css?v=3PDvdIFv

@charset "utf-8";

@font-face { font-family: Iconochive-Regular; src: url("../fonts/Iconochive=
-Regular.woff") format("woff"), url("../fonts/Iconochive-Regular.ttf") form=
at("truetype"); font-weight: normal; font-style: normal; }

[class^=3D"iconochive-"], [class*=3D" iconochive-"] { speak: none; font-sty=
le: normal; font-weight: normal; font-variant: normal; text-transform: none=
; line-height: 1; -webkit-font-smoothing: antialiased; font-family: Iconoch=
ive-Regular !important; }

.iconochive-Uplevel::before { content: "=E2=86=B5"; }

.iconochive-exit::before { content: "=F0=9F=9A=A3"; }

.iconochive-beta::before { content: "=CE=B2"; }

.iconochive-logo::before { content: "=F0=9F=8F=9B"; }

.iconochive-audio::before { content: "=F0=9F=95=A8"; }

.iconochive-movies::before { content: "=F0=9F=8E=9E"; }

.iconochive-software::before { content: "=F0=9F=92=BE"; }

.iconochive-texts::before { content: "=F0=9F=95=AE"; }

.iconochive-etree::before { content: "=F0=9F=8E=A4"; }

.iconochive-image::before { content: "=F0=9F=96=BC"; }

.iconochive-web::before { content: "=F0=9F=97=94"; }

.iconochive-collection::before { content: "=E2=88=91"; }

.iconochive-folder::before { content: "=F0=9F=93=82"; }

.iconochive-data::before { content: "=F0=9F=97=83"; }

.iconochive-tv::before { content: "=F0=9F=93=BA"; }

.iconochive-article::before { content: "=F0=9F=97=8F"; }

.iconochive-question::before { content: "=E2=8D=B0"; }

.iconochive-question-dark::before { content: "?"; }

.iconochive-info::before { content: "i"; }

.iconochive-info-small::before { content: "=E2=93=98"; }

.iconochive-comment::before { content: "=F0=9F=97=A9"; }

.iconochive-comments::before { content: "=F0=9F=97=AA"; }

.iconochive-person::before { content: "=F0=9F=91=A4"; }

.iconochive-people::before { content: "=F0=9F=91=A5"; }

.iconochive-eye::before { content: "=F0=9F=91=81"; }

.iconochive-rss::before { content: "=E2=88=9E"; }

.iconochive-time::before { content: "=F0=9F=95=91"; }

.iconochive-quote::before { content: "=E2=9D=9D"; }

.iconochive-disc::before { content: "=F0=9F=92=BF"; }

.iconochive-tv-commercial::before { content: "=F0=9F=92=B0"; }

.iconochive-search::before { content: "=F0=9F=94=8D"; }

.iconochive-search-star::before { content: "=E2=9C=BD"; }

.iconochive-tiles::before { content: "=E2=8A=9E"; }

.iconochive-list::before { content: "=E2=87=B6"; }

.iconochive-list-bulleted::before { content: "=E2=8C=97"; }

.iconochive-latest::before { content: "=E2=88=88"; }

.iconochive-left::before { content: "=CB=82"; }

.iconochive-right::before { content: "=CB=83"; }

.iconochive-left-solid::before { content: "=E2=97=82"; }

.iconochive-right-solid::before { content: "=E2=96=B8"; }

.iconochive-up-solid::before { content: "=E2=96=B4"; }

.iconochive-down-solid::before { content: "=E2=96=BE"; }

.iconochive-dot::before { content: "=E2=8F=A4"; }

.iconochive-dots::before { content: "=E2=96=A6"; }

.iconochive-columns::before { content: "=E2=96=AF"; }

.iconochive-sort::before { content: "=E2=87=95"; }

.iconochive-atoz::before { content: "=F0=9F=94=A4"; }

.iconochive-ztoa::before { content: "=F0=9F=94=A5"; }

.iconochive-upload::before { content: "=F0=9F=93=A4"; }

.iconochive-download::before { content: "=F0=9F=93=A5"; }

.iconochive-favorite::before { content: "=E2=98=85"; }

.iconochive-heart::before { content: "=E2=99=A5"; }

.iconochive-play::before { content: "=E2=96=B6"; }

.iconochive-play-framed::before { content: "=F0=9F=8E=AC"; }

.iconochive-fullscreen::before { content: "=E2=9B=B6"; }

.iconochive-mute::before { content: "=F0=9F=94=87"; }

.iconochive-unmute::before { content: "=F0=9F=94=8A"; }

.iconochive-share::before { content: "=F0=9F=8E=81"; }

.iconochive-edit::before { content: "=E2=9C=8E"; }

.iconochive-reedit::before { content: "=E2=9C=90"; }

.iconochive-gear::before { content: "=E2=9A=99"; }

.iconochive-remove-circle::before { content: "=E2=9D=8E"; }

.iconochive-plus-circle::before { content: "=F0=9F=97=96"; }

.iconochive-minus-circle::before { content: "=F0=9F=97=95"; }

.iconochive-x::before { content: "=F0=9F=97=99"; }

.iconochive-fork::before { content: "=E2=8B=94"; }

.iconochive-trash::before { content: "=F0=9F=97=91"; }

.iconochive-warning::before { content: "=E2=9A=A0"; }

.iconochive-flash::before { content: "=F0=9F=97=B2"; }

.iconochive-world::before { content: "=F0=9F=97=BA"; }

.iconochive-lock::before { content: "=F0=9F=94=92"; }

.iconochive-unlock::before { content: "=F0=9F=94=93"; }

.iconochive-twitter::before { content: "=F0=9F=90=A6"; }

.iconochive-facebook::before { content: "f"; }

.iconochive-googleplus::before { content: "g"; }

.iconochive-reddit::before { content: "=F0=9F=91=BD"; }

.iconochive-tumblr::before { content: "T"; }

.iconochive-pinterest::before { content: "=F0=9D=93=9F"; }

.iconochive-popcorn::before { content: "=F0=9F=92=A5"; }

.iconochive-email::before { content: "=F0=9F=93=A7"; }

.iconochive-embed::before { content: "=F0=9F=94=97"; }

.iconochive-gamepad::before { content: "=F0=9F=95=B9"; }

.iconochive-Zoom_In::before { content: "+"; }

.iconochive-Zoom_Out::before { content: "-"; }

.iconochive-RSS::before { content: "=F0=9F=93=A8"; }

.iconochive-Light_Bulb::before { content: "=F0=9F=92=A1"; }

.iconochive-Add::before { content: "=E2=8A=95"; }

.iconochive-Tab_Activity::before { content: "=E2=8C=98"; }

.iconochive-Forward::before { content: "=E2=8F=A9"; }

.iconochive-Backward::before { content: "=E2=8F=AA"; }

.iconochive-No_Audio::before { content: "=F0=9F=94=88"; }

.iconochive-Pause::before { content: "=E2=8F=B8"; }

.iconochive-No_Favorite::before { content: "=E2=98=86"; }

.iconochive-Unike::before { content: "=E2=99=A1"; }

.iconochive-Song::before { content: "=E2=99=AB"; }

.iconochive-No_Flag::before { content: "=E2=9A=90"; }

.iconochive-Flag::before { content: "=E2=9A=91"; }

.iconochive-Done::before { content: "=E2=9C=93"; }

.iconochive-Check::before { content: "=E2=9C=94"; }

.iconochive-Refresh::before { content: "=E2=9F=B3"; }

.iconochive-Headphones::before { content: "=F0=9F=8E=A7"; }

.iconochive-Chart::before { content: "=F0=9F=93=88"; }

.iconochive-Bookmark::before { content: "=F0=9F=93=91"; }

.iconochive-Documents::before { content: "=F0=9F=93=9A"; }

.iconochive-Newspaper::before { content: "=F0=9F=93=B0"; }

.iconochive-Podcast::before { content: "=F0=9F=93=B6"; }

.iconochive-Radio::before { content: "=F0=9F=93=BB"; }

.iconochive-Cassette::before { content: "=F0=9F=93=BC"; }

.iconochive-Shuffle::before { content: "=F0=9F=94=80"; }

.iconochive-Loop::before { content: "=F0=9F=94=81"; }

.iconochive-Low_Audio::before { content: "=F0=9F=94=89"; }

.iconochive-First::before { content: "=F0=9F=8E=96"; }

.iconochive-Invisible::before { content: "=F0=9F=95=B6"; }

.iconochive-Computer::before { content: "=F0=9F=96=B3"; }
------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web-static.archive.org/_static/css/banner-styles.css?v=p7PEIJWi

@charset "utf-8";

:root { --wm-toolbar-height: 65px; }

#wm-ipp-base { height: 65px; padding: 0px; margin: 0px; border: none; backg=
round: none transparent; }

#wm-ipp { z-index: 2147483647; }

#wm-ipp, #wm-ipp * { font-family: "Lucida Grande", Helvetica, Arial, sans-s=
erif; font-size: 12px; line-height: 1.2; letter-spacing: 0px; width: auto; =
height: auto; max-width: none; max-height: none; min-height: 0px; outline: =
none; float: none; text-align: left; border: none; color: rgb(0, 0, 0); tex=
t-indent: 0px; position: initial; background: none; min-width: 0px !importa=
nt; }

#wm-ipp div, #wm-ipp canvas { display: block; }

#wm-ipp div, #wm-ipp tr, #wm-ipp td, #wm-ipp a, #wm-ipp form { padding: 0px=
; margin: 0px; border: none; border-radius: 0px; background-color: transpar=
ent; background-image: none; height: auto; }

#wm-ipp table { border: none; border-collapse: collapse; margin: 0px; paddi=
ng: 0px; width: auto; font-size: inherit; }

#wm-ipp form input { height: auto; display: inline; margin: 0px; color: rgb=
(0, 0, 0); background: none rgb(255, 255, 255); border: 1px solid rgb(102, =
102, 102); padding: 1px !important; }

#wm-ipp form input[type=3D"submit"] { padding: 0px 8px !important; margin: =
1px 0px 1px 5px !important; width: auto !important; border: 1px solid rgb(0=
, 0, 0) !important; background: rgb(255, 255, 255) !important; color: rgb(0=
, 0, 0) !important; }

#wm-ipp form input[type=3D"submit"]:hover { background: rgb(238, 238, 238) =
!important; cursor: pointer !important; }

#wm-ipp form input[type=3D"submit"]:active { transform: translateY(1px); }

#wm-ipp a { display: inline; }

#wm-ipp a:hover { text-decoration: underline; }

#wm-ipp a.wm-btn:hover { text-decoration: none; color: rgb(255, 255, 0) !im=
portant; }

#wm-ipp a.wm-btn:hover span { color: rgb(255, 255, 0) !important; }

#wm-ipp #wm-ipp-inside { margin: 0px 6px; border-right: 5px solid rgb(0, 0,=
 0); border-bottom: 5px solid rgb(0, 0, 0); border-left: 5px solid rgb(0, 0=
, 0); border-image: initial; border-top: none; background-color: rgba(255, =
255, 255, 0.9); box-shadow: rgb(51, 51, 51) 1px 1px 4px; border-radius: 0px=
 0px 8px 8px; }

#wm-ipp #wm-logo { padding: 0px 10px; vertical-align: middle; min-width: 10=
0px; flex: 0 0 100px; }

#wm-ipp .c { padding-left: 4px; }

#wm-ipp .c .u { margin-top: 4px !important; }

#wm-ipp .n { vertical-align: bottom; padding: 0px 0px 0px 5px !important; }

#wm-ipp .n a { text-decoration: none; color: rgb(51, 51, 255); font-weight:=
 bold; }

#wm-ipp .n .b { overflow: visible; white-space: nowrap; color: rgb(153, 153=
, 170); vertical-align: middle; padding: 0px 6px 0px 0px !important; text-a=
lign: right !important; }

#wm-ipp .n .y .b { padding: 0px 6px 2px 0px !important; }

#wm-ipp .n .c { background: rgb(0, 0, 0); color: rgb(255, 255, 0); font-wei=
ght: bold; text-align: center; padding: 0px !important; }

#wm-ipp.hi .n td.c { color: rgb(236, 0, 140); }

#wm-ipp .n td.f { overflow: visible; white-space: nowrap; color: rgb(153, 1=
53, 170); vertical-align: middle; padding: 0px 0px 0px 6px !important; text=
-align: left !important; }

#wm-ipp .n tr.m td { text-transform: uppercase; white-space: nowrap; paddin=
g: 2px 0px; }

#wm-ipp .c .s { vertical-align: bottom; padding: 0px 5px 0px 0px !important=
; }

#wm-ipp #wm-nav-captures { white-space: nowrap; }

#wm-ipp .c .s a.t { color: rgb(51, 51, 255); font-weight: bold; line-height=
: 1.8; }

#wm-ipp .c .s div.r { color: rgb(102, 102, 102); font-size: 9px; white-spac=
e: nowrap; }

#wm-ipp .c .k { padding-bottom: 1px; }

#wm-ipp .c .s { padding: 0px 5px 2px 0px !important; }

#wm-ipp td#displayMonthEl { padding: 2px 0px !important; }

#wm-ipp td#displayYearEl { padding: 0px 0px 2px !important; }

div#wm-ipp-sparkline { position: relative; white-space: nowrap; background-=
color: rgb(255, 255, 255); cursor: pointer; line-height: 0.9; }

#sparklineImgId, #wm-sparkline-canvas { position: relative; z-index: 9012; =
max-width: none; }

#wm-ipp-sparkline div.yt { position: absolute; top: 0px; z-index: 9010 !imp=
ortant; background-color: rgb(255, 255, 0) !important; }

#wm-ipp-sparkline div.mt { position: absolute; top: 0px; z-index: 9013 !imp=
ortant; background-color: rgb(236, 0, 140) !important; }

#wm-ipp .r { margin-left: 4px; }

#wm-ipp .r a { color: rgb(51, 51, 255); border: none; position: relative; b=
ackground-color: transparent; text-decoration: none; background-repeat: no-=
repeat !important; background-position: 100% 100% !important; }

#wm-ipp #wm-capinfo { border-radius: 0px 0px 4px 4px; }

#wm-ipp #wm-capinfo .c-logo { display: block; float: left; margin-right: 3p=
x; width: 90px; min-height: 90px; max-height: 290px; border-radius: 45px; o=
verflow: hidden; background-position: 50% center; background-size: auto 90p=
x; box-shadow: rgb(208, 208, 208) 0px 0px 2px 2px inset; }

#wm-ipp #wm-capinfo .c-logo span { display: inline-block; }

#wm-ipp #wm-capinfo .c-logo img { height: 90px; position: relative; left: -=
50%; }

#wm-ipp #wm-capinfo .wm-title { font-size: 130%; }

#wm-ipp #wm-capinfo a.wm-selector { display: inline-block; color: rgb(170, =
170, 170); padding: 2px 8px; text-decoration: none !important; }

#wm-ipp #wm-capinfo a.wm-selector.selected { background-color: rgb(102, 102=
, 102); }

#wm-ipp #wm-capinfo a.wm-selector:hover { color: rgb(255, 255, 255); }

#wm-ipp #wm-capinfo.notice-only #wm-capinfo-collected-by, #wm-ipp #wm-capin=
fo.notice-only #wm-capinfo-timestamps { display: none; }

#wm-ipp #wm-capinfo #wm-capinfo-notice .wm-capinfo-content { background-col=
or: rgb(255, 255, 0); padding: 5px; font-size: 14px; text-align: center; }

#wm-ipp #wm-capinfo #wm-capinfo-notice .wm-capinfo-content * { font-size: 1=
4px; text-align: center; }

#wm-ipp #wm-expand { right: 1px; bottom: -1px; color: rgb(255, 255, 255); b=
ackground-color: rgb(102, 102, 102) !important; padding: 0px 5px 0px 3px !i=
mportant; border-radius: 3px 3px 0px 0px !important; }

#wm-ipp #wm-expand span { color: rgb(255, 255, 255); }

#wm-ipp #wm-expand #wm-expand-icon { display: inline-block; transition: tra=
nsform 0.5s; transform-origin: 50% 45%; }

#wm-ipp #wm-expand.wm-open #wm-expand-icon { transform: rotate(180deg); }

#wm-ipp #wmtb { text-align: right; }

#wm-ipp #wmtb #wmtbURL { width: calc(100% - 45px); }

#wm-ipp #wm-graph-anchor { border-right: 1px solid rgb(204, 204, 204); }

html.wb-highlight { box-shadow: rgb(165, 14, 58) 0px 0px 0px 3px inset !imp=
ortant; }

.wb-highlight { outline: rgb(165, 14, 58) solid 3px !important; }

#wm-ipp-print { display: none !important; }

@media print {
  #wm-ipp-base { display: none !important; }
  #wm-ipp-print { white-space: nowrap; overflow: hidden; text-overflow: ell=
ipsis; display: block !important; }
}

@media (max-width: 414px) {
  #wm-ipp .xxs { display: none !important; }
}

@media (min-width: 1055px) {
  #wm-ipp #wm-graph-anchor { display: block !important; }
}

@media (max-width: 1054px) {
  #wm-ipp #wm-graph-anchor { display: none !important; }
}

@media (max-width: 1163px) {
  #wm-logo { display: none !important; }
}

#wm-btns { white-space: nowrap; margin-top: -2px; }

#wm-btns #wm-save-snapshot-open { margin-right: 7px; top: -6px; }

#wm-btns #wm-sign-in { box-sizing: content-box; display: none; margin-right=
: 7px; top: -8px; border: 2px solid rgb(0, 0, 0); border-radius: 14px; padd=
ing-right: 2px; padding-bottom: 2px; width: 11px; height: 11px; }

#wm-btns #wm-sign-in > .iconochive-person { font-size: 12.5px; }

#wm-save-snapshot-open > .iconochive-web { color: rgb(0, 0, 0); font-size: =
160%; }

#wm-ipp #wm-share { display: flex; align-items: flex-end; justify-content: =
space-between; }

#wm-share > #wm-screenshot { display: inline-block; margin-right: 3px; visi=
bility: hidden; }

#wm-screenshot > .iconochive-image { color: rgb(0, 0, 0); font-size: 160%; =
}

#wm-share > #wm-video { display: inline-block; margin-right: 3px; visibilit=
y: hidden; }

#wm-video > .iconochive-movies { color: rgb(0, 0, 0); display: inline-block=
; font-size: 150%; margin-bottom: 2px; }

#wm-btns #wm-save-snapshot-in-progress { display: none; font-size: 160%; op=
acity: 0.5; position: relative; margin-right: 7px; top: -5px; }

#wm-btns #wm-save-snapshot-success { display: none; color: green; position:=
 relative; top: -7px; }

#wm-btns #wm-save-snapshot-fail { display: none; color: red; position: rela=
tive; top: -7px; }

.wm-icon-screen-shot { display: inline-block; background: url("../images/we=
b-screenshot.svg") 0% 0% / contain no-repeat !important; width: 22px !impor=
tant; height: 19px !important; }

#donato { height: 0px; margin: 0px; padding: 0px; border-bottom: 1px solid =
rgb(153, 153, 153) !important; }

body.wm-modal { height: auto !important; overflow: hidden !important; }

#donato #donato-base { width: 100%; height: 100%; margin: 0px; padding: 0px=
; position: absolute; z-index: 2147483639; }

body.wm-modal #donato #donato-base { position: fixed; inset: 0px; z-index: =
2147483640; }

.wb-autocomplete-suggestions { font-family: "Lucida Grande", Helvetica, Ari=
al, sans-serif; font-size: 12px; text-align: left; cursor: default; border-=
width: 0px 1px 1px; border-right-style: solid; border-bottom-style: solid; =
border-left-style: solid; border-right-color: rgb(204, 204, 204); border-bo=
ttom-color: rgb(204, 204, 204); border-left-color: rgb(204, 204, 204); bord=
er-image: initial; border-top-style: initial; border-top-color: initial; ba=
ckground: rgb(255, 255, 255); box-shadow: rgba(0, 0, 0, 0.1) -1px 1px 3px; =
position: absolute; display: none; z-index: 2147483647; max-height: 254px; =
overflow: hidden auto; box-sizing: border-box; }

.wb-autocomplete-suggestion { position: relative; padding: 0px 0.6em; line-=
height: 23px; white-space: nowrap; overflow: hidden; text-overflow: ellipsi=
s; font-size: 1.02em; color: rgb(51, 51, 51); }

.wb-autocomplete-suggestion b { font-weight: bold; }

.wb-autocomplete-suggestion.selected { background: rgb(240, 240, 240); }
------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-d63955cb-4deb-4796-bedb-838dd36a6ed1@mhtml.blink

@charset "utf-8";

.recentcomments a { display: inline !important; padding: 0px !important; ma=
rgin: 0px !important; }
------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac----
Content-Type: text/html
Content-ID: <frame-9AF7F52E4426477C94A6B887F7F3E63A@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://archive.org/includes/donate.php?as_page=1&platform=wb&referer=https%3A//web.archive.org/web/20230601152626/http%3A//julien-marchand.fr/blog/using-mega-api-with-python-examples/

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--exvGDCJvjK2MwW7lTKnfZPXeSkuyOwWCjduNYSOBac------
